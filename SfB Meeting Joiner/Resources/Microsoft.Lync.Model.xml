<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Lync.Model</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Lync.Model.Conversation.ConferenceAccessInformation">
            <summary>Represents the properties of a conference that can be provided to other clients that allows them to join the conference.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.UCWLite">
            <summary>
            Base class for UC wrapper classes
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.UCWBase">
            <summary>
            Base class for all UC wrapper classes
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Internal.UCWBase.InnerObject">
            <summary>
            The inner .NET runtime callable object
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.ConferenceAccessInformation.AdmissionKey">
            <summary>Gets the conference admission key.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.ConferenceAccessInformation.AutoAttendantNumbers">
            <summary>Gets the conference auto attendant numbers.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.ConferenceAccessInformation.ExternalUrl">
            <summary>Gets the conference CWA external Url.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.ConferenceAccessInformation.Id">
            <summary>Gets the conference Id.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.ConferenceAccessInformation.InternalUrl">
            <summary>Gets the conference CWA internal Url.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.ContextEventArgs">
            <summary>Represents the event data of a ContextSent or ContextReceived events.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.ContextEventArgs.ApplicationId">
            <summary>Gets the contextual conversation application GUID.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.ContextEventArgs.ContextData">
            <summary>Gets the contextual conversation context data.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.ContextEventArgs.ContextDataType">
            <summary>Gets the contextual conversation context data type.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Conversation">
            <summary>Describes a conversation. It includes details such as the conversation participants, modalities (InstantMessaging, AudioVideo), state, etc., and implements actions such as merge, park, terminate or other conversation actions.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.UCWFull">
            <summary>
            Base class for UC wrapper classes
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.UCWFull.Finalize">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Conversation.Finalize">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Conversation.AddParticipant_private(System.Object)">
            <summary>Add a new participant instance.</summary><returns>Microsoft.Lync.Model.Conversation.Participant</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Conversation.BeginAdmitParticipants(System.Collections.Generic.IEnumerable{Microsoft.Lync.Model.Conversation.Participant},System.AsyncCallback,System.Object)">
            <summary> 
            Used to admit a set of participants into conference.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Conversation.EndAdmitParticipants(System.IAsyncResult)">
            <summary> 
            Used to admit a set of participants into conference.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Conversation.CanInvoke(Microsoft.Lync.Model.Conversation.ConversationAction)">
            <summary>Returns a flag indicating whether a specific action is available.</summary><returns>System.Boolean</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Conversation.CanSetProperty(Microsoft.Lync.Model.Conversation.ConversationProperty)">
            <summary>Test whether the property can be set to the conversation.</summary><returns>System.Boolean</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Conversation.BeginDenyParticipants(System.Collections.Generic.IEnumerable{Microsoft.Lync.Model.Conversation.Participant},System.AsyncCallback,System.Object)">
            <summary> 
            Used to Deny a set of participants access into a conference.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Conversation.EndDenyParticipants(System.IAsyncResult)">
            <summary> 
            Used to Deny a set of participants access into a conference.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Conversation.End">
            <summary>Terminates the conversation for all participants.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Conversation.GetApplicationData(System.String)">
            <summary>Gets the contextual conversation application data using the given GUID. Only the registered application with the same GUID may call this.</summary><returns>System.String</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Conversation.BeginMerge(Microsoft.Lync.Model.Conversation.Conversation,Microsoft.Lync.Model.Conversation.ModalityTypes,System.AsyncCallback,System.Object)">
            <summary> 
            Merges another conversation into this one.modalityTypes specifies what modalities to be merged in.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Conversation.EndMerge(System.IAsyncResult)">
            <summary> 
            Merges another conversation into this one.modalityTypes specifies what modalities to be merged in.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Conversation.BeginMuteParticipants(System.Collections.Generic.IEnumerable{Microsoft.Lync.Model.Conversation.Participant},System.AsyncCallback,System.Object)">
            <summary> 
            Used to mute a set of participants in a conference.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Conversation.EndMuteParticipants(System.IAsyncResult)">
            <summary> 
            Used to mute a set of participants in a conference.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Conversation.BeginPark(System.AsyncCallback,System.Object)">
            <summary> 
            Parks voice at the Call Park Server and terminates all other modalities.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Conversation.EndPark(System.IAsyncResult)">
            <summary> 
            Parks voice at the Call Park Server and terminates all other modalities.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Conversation.RemoveParticipant(Microsoft.Lync.Model.Conversation.Participant)">
            <summary>Removes a participant from the collection.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Conversation.BeginSendContextData(System.String,System.String,System.String,System.AsyncCallback,System.Object)">
            <summary> 
            This is used to send application context type and data to the conversation. The application Id has to be registered on the caller side. The context data will be sent in raw foramts
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Conversation.EndSendContextData(System.IAsyncResult)">
            <summary> 
            This is used to send application context type and data to the conversation. The application Id has to be registered on the caller side. The context data will be sent in raw foramts
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Conversation.BeginSendInitialContext_private(System.Collections.Generic.IEnumerable{Microsoft.Lync.Model.Conversation.ContextType},System.Collections.Generic.IEnumerable{System.Object},System.AsyncCallback,System.Object)">
            <summary> 
            This is used to send application context to the conversation. ContextTypes and contextDatas are mapped together, So they must have the same length.If the contextTypes include application GUID, the caller must have been registered using the same GUID.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Conversation.EndSendInitialContext(System.IAsyncResult)">
            <summary> 
            This is used to send application context to the conversation. ContextTypes and contextDatas are mapped together, So they must have the same length.If the contextTypes include application GUID, the caller must have been registered using the same GUID.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Conversation.BeginSetProperty(Microsoft.Lync.Model.Conversation.ConversationProperty,System.Object,System.AsyncCallback,System.Object)">
            <summary> 
            Sets a property associated with this conversation. This is an asynchronous operation, hence the conversationCallback, if specified, will be called back.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Conversation.EndSetProperty(System.IAsyncResult)">
            <summary> 
            Sets a property associated with this conversation. This is an asynchronous operation, hence the conversationCallback, if specified, will be called back.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Conversation.BeginUnmuteParticipants(System.Collections.Generic.IEnumerable{Microsoft.Lync.Model.Conversation.Participant},System.AsyncCallback,System.Object)">
            <summary> 
            Used to unmute a set of participants in a conference.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Conversation.EndUnmuteParticipants(System.IAsyncResult)">
            <summary> 
            Used to unmute a set of participants in a conference.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Conversation.AddParticipant(Microsoft.Lync.Model.Contact)">
            <summary>
            Adds a contact to a conversation and returns the contact as a participant.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Conversation.AddParticipant(Microsoft.Lync.Model.ContactEndpoint)">
            <summary>
            Adds one of a contact's endpoints to a conversation and returns the contact as a participant. 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Conversation.BeginSendInitialContext(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.ContextType,System.Object}},System.AsyncCallback,System.Object)">
            <summary>
            Sends an application hyperlink and application Id as initial conversation context.
            </summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.Conversation.ActionAvailabilityChanged">
            <summary>Raised when an action availability changes.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.Conversation.ContextDataReceived">
            <summary>Raised to notify of the 3rd party applications of incoming info.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.Conversation.ContextDataSent">
            <summary>Raised to notify of the 3rd party applications of outgoing info.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.Conversation.ConversationContextLinkClicked">
            <summary>Raised when a contextual conversation launch link is clicked by the user.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.Conversation.InitialContextReceived">
            <summary>Raised to notify of the 3rd party applications of incoming calls .</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.Conversation.InitialContextSent">
            <summary>Raised to notify of the 3rd party applications of outgoing calls .</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.Conversation.ParticipantAdded">
            <summary>Raised when a participant add operation completes.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.Conversation.ParticipantRemoved">
            <summary>Raised when a participant remove operation completes.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.Conversation.PropertyChanged">
            <summary>Raised when a property value changes</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.Conversation.StateChanged">
            <summary>Raised when the conversation state changes.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Conversation.ConversationManager">
            <summary>Gets the parent conversation manager of this conversation.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Conversation.Modalities">
            <summary>Gets the collection of conversation modalities (activities</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Conversation.Participants">
            <summary>Gets the participant collection.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Conversation.Properties">
            <summary>Gets a collection of conversation properties.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Conversation.SelfParticipant">
            <summary>Gets the local participant object.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Conversation.State">
            <summary>Gets the current conversation state.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.ConversationActionAvailabilityEventArgs">
            <summary>Represents the event data of a ConversationActionAvailability event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.ConversationActionAvailabilityEventArgs.Action">
            <summary>Gets the action identifier for which the availability has changed.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.ConversationActionAvailabilityEventArgs.IsAvailable">
            <summary>Gets the new availability value.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.ConversationManager">
            <summary>Manages conversation creation and removal, retrieves the collection of the conversations, joins a conference, and other conversation collection-related actions.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.ConversationManager.Finalize">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.ConversationManager.AddConversation">
            <summary>Adds a new outgoing conversation instance.</summary><returns>Microsoft.Lync.Model.Conversation.Conversation</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.ConversationManager.JoinConference(System.String)">
            <summary>Retrieves/Creates a conversation initialized so as to join conference at given URL.</summary><returns>Microsoft.Lync.Model.Conversation.Conversation</returns>
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.ConversationManager.ConversationAdded">
            <summary>Raised when a conversation add operation completes.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.ConversationManager.ConversationRemoved">
            <summary>Raised when a conversation remove operation completes.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.ConversationManager.Conversations">
            <summary>Get the collection of conversations.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.ConversationManagerEventArgs">
            <summary>Represents the event data of a ConversationsManager event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.ConversationManagerEventArgs.Conversation">
            <summary>Gets the conversation object added or removed.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.ConversationPropertyChangedEventArgs">
            <summary>Represents the event data of a ConversationPropertyChanged event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.ConversationPropertyChangedEventArgs.Property">
            <summary>Gets the conversation property type whose value has changed.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.ConversationPropertyChangedEventArgs.Value">
            <summary>Gets the property value who has changed.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.ConversationStateChangedEventArgs">
            <summary>Represents the event data of a ConversationStateChanged event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.ConversationStateChangedEventArgs.NewState">
            <summary>Gets the new conversation state value.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.ConversationStateChangedEventArgs.OldState">
            <summary>Gets the old conversation state value.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.ConversationStateChangedEventArgs.Properties">
            <summary>Gets the properties of the change.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.ConversationStateChangedEventArgs.StatusCode">
            <summary>Gets the StatusCode of the change.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.InitialContextEventArgs">
            <summary>Represents the event data of a the BeginSendInitialContext event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.InitialContextEventArgs.ApplicationData">
            <summary>Gets the contextual conversation application data.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.InitialContextEventArgs.ApplicationId">
            <summary>Gets the contextual conversation application GUID.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.InstantMessageModality">
            <summary>Defines the instant messaging modality. It supports actions such as sending an instant message, checking or setting the composing (typing) flag, etc.  This class exposes events such as messages being sent or received.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Modality">
            <summary>Modality is the base class for any modality, including InstantMessageModality and AVModality.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Modality.Finalize">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Modality.Accept">
            <summary>Accept an offer for the modality.</summary><remarks>Call Accept() on the participant modality that made the offer. For exa mple, when a remote participant offers to share a whiteboard in a meeting, call ContentSharingModality.Accept() on the ContentSharingModality object in the remote participant modalities collection.</remarks>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Modality.CanInvoke(Microsoft.Lync.Model.Conversation.ModalityAction)">
            <summary> 
            Returns a flag indicating whether a specific action is available.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Modality.CanSetProperty(Microsoft.Lync.Model.Conversation.ModalityProperty)">
            <summary> 
            Test whether the property can be set to the modality.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Modality.BeginConnect_private(Microsoft.Lync.Model.Internal.ModalityConnectOptions,System.AsyncCallback,System.Object)">
            <summary> 
            Connects to the modality.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Modality.EndConnect(System.IAsyncResult)">
            <summary> 
            Connects to the modality.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Modality.BeginConsultativeTransfer(Microsoft.Lync.Model.Conversation.Conversation,Microsoft.Lync.Model.Conversation.AudioVideo.TransferOptions,System.AsyncCallback,System.Object)">
            <summary> 
            Transfers a connected modality to an existing conversation.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Modality.EndConsultativeTransfer(Microsoft.Lync.Model.Conversation.ModalityState@,System.Collections.Generic.IList{System.String}@,System.IAsyncResult)">
            <summary> 
            Transfers a connected modality to an existing conversation.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Modality.BeginDisconnect(Microsoft.Lync.Model.Conversation.ModalityDisconnectReason,System.AsyncCallback,System.Object)">
            <summary> 
            Disconnects from the modality.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Modality.EndDisconnect(System.IAsyncResult)">
            <summary> 
            Disconnects from the modality.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Modality.BeginForward_private(System.Object,System.AsyncCallback,System.Object)">
            <summary> 
            Forwards a connecting incoming modality to a different location.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Modality.EndForward(System.IAsyncResult)">
            <summary> 
            Forwards a connecting incoming modality to a different location.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Modality.BeginHold(System.AsyncCallback,System.Object)">
            <summary> 
            Places the modality on hold.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Modality.EndHold(System.IAsyncResult)">
            <summary> 
            Places the modality on hold.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Modality.Reject(Microsoft.Lync.Model.Conversation.ModalityDisconnectReason)">
            <summary> 
            Reject an offer for the modality.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Modality.BeginRetrieve(System.AsyncCallback,System.Object)">
            <summary> 
            Retrives a held modality.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Modality.EndRetrieve(System.IAsyncResult)">
            <summary> 
            Retrives a held modality.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Modality.BeginSetProperty(Microsoft.Lync.Model.Conversation.ModalityProperty,System.Object,System.AsyncCallback,System.Object)">
            <summary> 
            Sets a property associated with this modality.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Modality.EndSetProperty(System.IAsyncResult)">
            <summary> 
            Sets a property associated with this modality.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Modality.BeginTransfer_private(System.Object,Microsoft.Lync.Model.Conversation.AudioVideo.TransferOptions,System.AsyncCallback,System.Object)">
            <summary> 
            Transfers a connected modality to a different location.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Modality.EndTransfer(Microsoft.Lync.Model.Conversation.ModalityState@,System.Collections.Generic.IList{System.String}@,System.IAsyncResult)">
            <summary> 
            Transfers a connected modality to a different location.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Modality.BeginConnect(System.AsyncCallback,System.Object)">
            <summary>
            Activates a conversation modality by connecting the modality to its associated local and remote endpoints. 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Modality.BeginForward(Microsoft.Lync.Model.Contact,System.AsyncCallback,System.Object)">
            <summary>
            Forwards an active conversation (in ringing state) to a specified remote contact endpoint. 
            You cannot forward conversations between the local contacts endpoints.
            </summary>
            <remarks>Available only for the AvModality.</remarks>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Modality.BeginForward(Microsoft.Lync.Model.ContactEndpoint,System.AsyncCallback,System.Object)">
            <summary>
            Forwards an active conversation to a specified remote contact endpoint. You cannot forward
            conversations between the local contacts endpoints.
            </summary>
            <remarks>Available only for the AvModality.</remarks>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Modality.BeginTransfer(Microsoft.Lync.Model.Contact,Microsoft.Lync.Model.Conversation.AudioVideo.TransferOptions,System.AsyncCallback,System.Object)">
            <summary>
            Transfers an active conversation to a specified remote contact. 
            </summary>
            <remarks>Available only for the AvModality.</remarks>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Modality.BeginTransfer(Microsoft.Lync.Model.ContactEndpoint,Microsoft.Lync.Model.Conversation.AudioVideo.TransferOptions,System.AsyncCallback,System.Object)">
            <summary>
            Transfer an active conversation to a specified remote contact endpoint. You cannot transfer
            a conversation to another local contact endpoint.
            </summary>
            <remarks>Available only for the AvModality.</remarks>
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.Modality.ActionAvailabilityChanged">
            <summary>Raised when an action availability changes.</summary><remarks>When you want to be advised that an action to be taken is on a single participant modality instead of the conversation modality, register for this event on Participant.Modalities[ModalityType].  For example, if the availability of a controller action changes on a conversation participant's ApplicationSharingModality, you get the event if you have registered for it on the modality at Participant.Modalities[ModalityType.ApplicationSharing].  Note: You must always register for this event on the conversation Modality in addition to event registration on any participant's modalty.</remarks>
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.Modality.ModalityStateChanged">
            <summary>Raised when modality state changes</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Modality.Conversation">
            <summary>Gets the associated conversation object.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Modality.Endpoint">
            <summary>Gets the collaboration endpoint that is used by the modality.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Modality.Participant">
            <summary>Gets the associated participant object.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Modality.Properties">
            <summary>Gets a collection of modality properties.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Modality.State">
            <summary>Gets the modality state.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.InstantMessageModality.Finalize">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.InstantMessageModality.BeginSendMessage_private(System.String,Microsoft.Lync.Model.Internal.NamedPropertyList,Microsoft.Lync.Model.Internal.ModalityConnectOptions,System.AsyncCallback,System.Object)">
            <summary> 
            Sends an instant message. additionalFormats is named property list that can be used to include text in any text format. The keys in that named property list are the content types, and the values are the content body.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.InstantMessageModality.EndSendMessage_private(System.String@,Microsoft.Lync.Model.Internal.NamedPropertyList@,System.Collections.Generic.IList{Microsoft.Lync.Model.Conversation.Participant}@,System.IAsyncResult)">
            <summary> 
            Sends an instant message. additionalFormats is named property list that can be used to include text in any text format. The keys in that named property list are the content types, and the values are the content body.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.InstantMessageModality.SetCapabilities(Microsoft.Lync.Model.Conversation.InstantMessageCapabilities)">
            <summary>Sets self instant messaging Capabilities.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.InstantMessageModality.BeginSetComposing(System.Boolean,System.AsyncCallback,System.Object)">
            <summary> 
            Sets the local composing state. The composing flag indicates that the local participant is typing a message.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.InstantMessageModality.EndSetComposing(System.IAsyncResult)">
            <summary> 
            Sets the local composing state. The composing flag indicates that the local participant is typing a message.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.InstantMessageModality.BeginSendMessage(System.String,System.AsyncCallback,System.Object)">
            <summary> 
            Sends a plain text message to a remote conversation participant.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.InstantMessageModality.BeginSendMessage(System.Collections.Generic.IDictionary{Microsoft.Lync.Model.Conversation.InstantMessageContentType,System.String},System.AsyncCallback,System.Object)">
            <summary> 
            Sends a text message formatted for specified content type to a remote conversation participant.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.InstantMessageModality.EndSendMessage(System.IAsyncResult)">
            <summary> 
            Ends send message operation and un-blocks program execution on calling thread.
            </summary> 
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.InstantMessageModality.InstantMessagePropertyChanged">
            <summary>Raised when a property value changes</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.InstantMessageModality.InstantMessageReceived">
            <summary>Raised when an instant message is received.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.InstantMessageModality.IsTypingChanged">
            <summary>Raised when the istyping state changes.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.InstantMessageModality.Capabilities">
            <summary>Gets instant messaging Capabilities.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.InstantMessageModality.IsTyping">
            <summary>Gets a flag indicating whether the endpoint is composing a message.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.IsContributingChangedEventArgs">
            <summary>Represents the event data of a ContributingChanged event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.IsContributingChangedEventArgs.IsContributing">
            <summary>Gets the new value of is contributing flag for the source endpoint.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.IsTypingChangedEventArgs">
            <summary>Represents the event data of a IsTypingChanged event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.IsTypingChangedEventArgs.IsTyping">
            <summary>Gets the new value of is composing flag for the source endpoint.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.MessageSentEventArgs">
            <summary> 
            MessageSentEventData Class
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.MessageSentEventArgs.Formats_private">
            <summary> 
            Gets a list of &lt;content-type,content-body&gt; format properties.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.MessageSentEventArgs.Text">
            <summary> 
            Gets the message from send operation.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.MessageSentEventArgs.Contents">
            <summary> 
            Returns a dictionary which maps a content type of a message to the associated formatted text.
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.ModalityActionAvailabilityChangedEventArgs">
            <summary>Represents the event data of a ModalityActionAvailability event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.ModalityActionAvailabilityChangedEventArgs.Action">
            <summary>Gets the action identifier for which the availability has changed.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.ModalityActionAvailabilityChangedEventArgs.IsAvailable">
            <summary>Gets the new availability value.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.ModalityPropertyChangedEventArgs">
            <summary>Represents the event data of a ModalityPropertyChanged event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.ModalityPropertyChangedEventArgs.Property">
            <summary>Gets the modality property type whose value has changed.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.ModalityPropertyChangedEventArgs.Value">
            <summary>Gets the property value who has changed.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.ModalityStateChangedEventArgs">
            <summary>Represents the event data of a ModalityStateChanged event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.ModalityStateChangedEventArgs.NewState">
            <summary>Gets the new modality state value.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.ModalityStateChangedEventArgs.OldState">
            <summary>Gets the old modality state value.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.ModalityStateChangedEventArgs.StatusCode">
            <summary>Gets the StatusCode of the change.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.MutedChangedEventArgs">
            <summary>Represents the event data of a MutedChanged event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.MutedChangedEventArgs.IsMuted">
            <summary>Gets the value of is muted flag for the participant.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Participant">
            <summary>A participant is a contact (person or phone number) that was added to a conversation. Each participant has its own modality set that represents the state of the participant in this conversation for each modality.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Participant.Finalize">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Participant.BeginAdmit(System.AsyncCallback,System.Object)">
            <summary> 
            Admits the participant to the conference.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Participant.EndAdmit(System.IAsyncResult)">
            <summary> 
            Admits the participant to the conference.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Participant.CanAdmit">
            <summary>Returns true if a participant can be admitted from the lobby.</summary><returns>System.Boolean</returns><remarks>Do not use this method. Use Participant.CanInvoke(ParticipantAction.Admit) instead.</remarks>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Participant.CanBeMuted">
            <summary>Returns true if a participant can be muted.</summary><returns>System.Boolean</returns><remarks>Do not use this method. Use Participant.CanInvoke(ParticipantAction.SetMute) instead.</remarks>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Participant.CanDeny">
            <summary>Returns true if a participant waiting in the lobby can be denied access to a conference.</summary><returns>System.Boolean</returns><remarks>Do not use this method. Use Participant.CanInvoke(ParticipantAction.Deny) instead.</remarks>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Participant.CanInvoke_private(Microsoft.Lync.Model.Conversation.ParticipantAction)">
            <summary> 
            Returns a flag indicating whether a specific action is available.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Participant.CanSetProperty(Microsoft.Lync.Model.Conversation.ParticipantProperty)">
            <summary>Test whether the property can be set to the participant.</summary><returns>System.Boolean</returns><remarks>Do not use this method. Use CanInvoke(ParticipantAction.SetProperty) instead.</remarks>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Participant.BeginDeny(System.AsyncCallback,System.Object)">
            <summary> 
            Denies the participant access to the conference and removes him from the lobby.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Participant.EndDeny(System.IAsyncResult)">
            <summary> 
            Denies the participant access to the conference and removes him from the lobby.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Participant.BeginSetMute(System.Boolean,System.AsyncCallback,System.Object)">
            <summary> 
            Sets the mute state.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Participant.EndSetMute(System.IAsyncResult)">
            <summary> 
            Sets the mute state.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Participant.BeginSetProperty(Microsoft.Lync.Model.Conversation.ParticipantProperty,System.Object,System.AsyncCallback,System.Object)">
            <summary> 
            Sets a property associated with this participant.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Participant.EndSetProperty(System.IAsyncResult)">
            <summary> 
            Sets a property associated with this participant.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Participant.BeginLockVideo(System.AsyncCallback,System.Object)">
            <summary> 
            Asynchronously locks the participants video
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Participant.EndLockVideo(System.IAsyncResult)">
            <summary> 
            Asynchronously locks the participants video
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Participant.BeginPinVideo(System.AsyncCallback,System.Object)">
            <summary> 
            Asynchronously pins the participant video
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Participant.EndPinVideo(System.IAsyncResult)">
            <summary> 
            Asynchronously pins the participant video
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Participant.BeginUnLockVideo(System.AsyncCallback,System.Object)">
            <summary> 
            Asynchronously unlocks the participants video
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Participant.EndUnLockVideo(System.IAsyncResult)">
            <summary> 
            Asynchronously unlocks the participants video
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Participant.BeginUnPinVideo(System.AsyncCallback,System.Object)">
            <summary> 
            Asynchronously unpins the participant video
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Participant.EndUnPinVideo(System.IAsyncResult)">
            <summary> 
            Asynchronously unpins the participant video
            </summary> 
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.Participant.ActionAvailabilityChanged">
            <summary>Raised when an action availability changes.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.Participant.IsMutedChanged">
            <summary>Raised when the mute state changes.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.Participant.PropertyChanged">
            <summary>Raised when a property value changes</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Participant.Contact">
            <summary>Gets the contact object associated with the participant.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Participant.Conversation">
            <summary>Gets the parent conversation object of the participant.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Participant.IsMuted">
            <summary>Gets a flag indicating whether the participant is muted.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Participant.IsSelf">
            <summary>Gets flag indicating whether this is the local participant.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Participant.Modalities">
            <summary>Gets the collection of conversation modalities (activities</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Participant.Properties">
            <summary>Gets a collection of participant properties.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.ParticipantActionAvailabilityChangedEventArgs">
            <summary>Represents the event data of a ParticipantActionAvailability event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.ParticipantActionAvailabilityChangedEventArgs.Action">
            <summary>Gets the action identifier for which the availability has changed.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.ParticipantActionAvailabilityChangedEventArgs.IsAvailable">
            <summary>Gets the new availability value.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.ParticipantCollectionChangedEventArgs">
            <summary>Represents the event data of a ParticipantCollection event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.ParticipantCollectionChangedEventArgs.Participant">
            <summary>Gets the Participant object added or removed.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.ParticipantCollectionChangedEventArgs.StatusCode">
            <summary>Gets the StatusCode of the change.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.ParticipantPropertyChangedEventArgs">
            <summary>Represents the event data of a ParticipantPropertyChanged event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.ParticipantPropertyChangedEventArgs.Property">
            <summary>Gets the participant property type whose value has changed.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.ParticipantPropertyChangedEventArgs.Value">
            <summary>Gets the property value who has changed.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.AudioVideo.AudioChannel">
            <summary>Represents the media channel that carries an audio data stream.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.AudioVideo.Channel">
            <summary>The base class for AudioChannel and VideoChannel.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.AudioVideo.Channel.Finalize">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.AudioVideo.Channel.CanInvoke(Microsoft.Lync.Model.Conversation.AudioVideo.ChannelAction)">
            <summary> 
            Returns a flag indicating whether the specific action is allowed.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.AudioVideo.Channel.BeginStart(System.AsyncCallback,System.Object)">
            <summary> 
            Start the audio or video channel.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.AudioVideo.Channel.EndStart(System.IAsyncResult)">
            <summary> 
            Start the audio or video channel.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.AudioVideo.Channel.BeginStop(System.AsyncCallback,System.Object)">
            <summary> 
            Stop the audio or video channel.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.AudioVideo.Channel.EndStop(System.IAsyncResult)">
            <summary> 
            Stop the audio or video channel.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.AudioVideo.Channel.BeginPause(System.AsyncCallback,System.Object)">
            <summary> 
            Pause the channel.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.AudioVideo.Channel.EndPause(System.IAsyncResult)">
            <summary> 
            Pause the channel.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.AudioVideo.Channel.BeginResume(System.AsyncCallback,System.Object)">
            <summary> 
            Resume the channel.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.AudioVideo.Channel.EndResume(System.IAsyncResult)">
            <summary> 
            Resume the channel.
            </summary> 
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.AudioVideo.Channel.ActionAvailabilityChanged">
            <summary>Raised when the availability of a channel action changes.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.AudioVideo.Channel.StateChanged">
            <summary>Raised when the state of a channel changes.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.AudioVideo.Channel.IsContributing">
            <summary>Returns true if the channel is contributing to the conversation.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.AudioVideo.Channel.Modality">
            <summary>Gets the associated Microsoft.Lync.Model.Conversation.Modality object.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.AudioVideo.Channel.State">
            <summary>Gets the state of the channel.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.AudioVideo.AudioChannel.Finalize">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.AudioVideo.AudioChannel.BeginSendDtmf(System.String,System.AsyncCallback,System.Object)">
            <summary> 
            Sends DTMF tones.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.AudioVideo.AudioChannel.EndSendDtmf(System.IAsyncResult)">
            <summary> 
            Sends DTMF tones.
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.AudioVideo.AVModality">
            <summary>Defines the audio/video modality and handles both audio and video calls using the AudioChannel and VideoChannel properties.</summary><remarks>When the AVModality is connected, the default channel is audio. Starting the video channel will cause the audio channel to start if the modality is disconnected.
            If the AV call is rejected with a reject reason of ReplyOther, the parent Conversation object is removed and the ConversationManager.ConversationRemoved event is raised.</remarks>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.AudioVideo.AVModality.Finalize">
            <summary>
            </summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.AudioVideo.AVModality.AVModalityPropertyChanged">
            <summary>Raised when a property value changes</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.AudioVideo.AVModality.IsContributingChanged">
            <summary>Raised when the contributing state changes.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.AudioVideo.AVModality.StreamStateChanged">
            <summary>Raised when the stream state changes.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.AudioVideo.AVModality.AudioChannel">
            <summary>Gets the audio channel.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.AudioVideo.AVModality.VideoChannel">
            <summary>Gets the normal video channel.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.AudioVideo.CallParkOrbit">
            <summary>Represents a Call Park Service entry containing a parked call. Used to retrieve a parked call.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.AudioVideo.CallParkOrbit.FriendlyOrbit">
            <summary>Gets the friendly orbit.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.AudioVideo.CallParkOrbit.MsParkedCall">
            <summary>Gets the ms-parked-call string for doing safe-retrieve.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.AudioVideo.CallParkOrbit.SafeRetrieveUri">
            <summary>Gets the safe-retrieve URI.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.AudioVideo.ChannelActionAvailabilityEventArgs">
            <summary>Represents the event data of a ChannelActionAvailability event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.AudioVideo.ChannelActionAvailabilityEventArgs.Action">
            <summary>Gets the action identifier for which the availability has changed.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.AudioVideo.ChannelActionAvailabilityEventArgs.IsAvailable">
            <summary>Gets the new availability value.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.AudioVideo.ChannelStateChangedEventArgs">
            <summary>Represents the event data of a ChannelStateChanged event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.AudioVideo.ChannelStateChangedEventArgs.NewState">
            <summary>Gets the new channel state value.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.AudioVideo.ChannelStateChangedEventArgs.OldState">
            <summary>Gets the old channel state value.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.AudioVideo.StreamStateChangedEventArgs">
            <summary>Represents the event data of a StreamStateChanged event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.AudioVideo.StreamStateChangedEventArgs.Channel">
            <summary>Gets the channel object.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.AudioVideo.StreamStateChangedEventArgs.Direction">
            <summary>Gets the stream direction.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.AudioVideo.StreamStateChangedEventArgs.IsActive">
            <summary>Gets the flag indicating whether the stream is active.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.AudioVideo.VideoChannel">
            <summary>Represents a media channel that carries a video data stream.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.AudioVideo.VideoChannel.Finalize">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.AudioVideo.VideoChannel.CaptureVideoWindow">
            <summary>Returns IVideoWindow for capture video.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.AudioVideo.VideoChannel.RenderVideoWindow">
            <summary>Returns IVideoWindow for render video.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.AudioVideo.VideoWindow">
            <summary>Draws the video content for either the outgoing (capture) or the incoming (render) video.  Native implementation of the IVideoWindow interface http://go.microsoft.com/fwlink/?LinkId=202572</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.AudioVideo.VideoWindow.GetMaxIdealImageSize(System.Int32@,System.Int32@)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.AudioVideo.VideoWindow.GetMinIdealImageSize(System.Int32@,System.Int32@)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.AudioVideo.VideoWindow.GetRestorePosition(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.AudioVideo.VideoWindow.GetWindowPosition(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.AudioVideo.VideoWindow.HideCursor(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.AudioVideo.VideoWindow.IsCursorHidden(System.Int32@)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.AudioVideo.VideoWindow.NotifyOwnerMessage(System.Int64,System.Int32,System.Int64,System.Int64)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.AudioVideo.VideoWindow.SetWindowForeground(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.AudioVideo.VideoWindow.SetWindowPosition(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.AudioVideo.VideoWindow.AutoShow">
            <summary>Not implemented.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.AudioVideo.VideoWindow.BackgroundPalette">
            <summary>Not implemented.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.AudioVideo.VideoWindow.BorderColor">
            <summary>Not implemented.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.AudioVideo.VideoWindow.Caption">
            <summary>Not implemented.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.AudioVideo.VideoWindow.FullScreenMode">
            <summary>FullScreenMode</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.AudioVideo.VideoWindow.Height">
            <summary>Sets or gets the height of the video window.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.AudioVideo.VideoWindow.Left">
            <summary>Sets or gets the x-axis coordinate for the video window.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.AudioVideo.VideoWindow.MessageDrain">
            <summary>Not implemented.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.AudioVideo.VideoWindow.Owner">
            <summary>Sets or gets the owning parent window for the video playback window.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.AudioVideo.VideoWindow.Top">
            <summary>Sets or gets the y-axis coordinates for the video window.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.AudioVideo.VideoWindow.Visible">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.AudioVideo.VideoWindow.Width">
            <summary>Sets or gets the width of the video window.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.AudioVideo.VideoWindow.WindowState">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.AudioVideo.VideoWindow.WindowStyle">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.AudioVideo.VideoWindow.WindowStyleEx">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.ActiveContentChangedEventArgs">
            <summary>Represents the event data of a ActiveContentChanged event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ActiveContentChangedEventArgs.ActiveContent">
            <summary> 
            Gets the new active content.
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.ActivePresenterChangedEventArgs">
            <summary>Represents the event data of a ActivePresenterChangedEvent event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ActivePresenterChangedEventArgs.ActivePresenter">
            <summary> 
            Gets the new presenter.
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality">
            <summary>Represents the application sharing modality of a conversation or participant modality collection.</summary><remarks>Use the ApplicationSharingModality from a participant modality collection when you want to take some controlling action for that participant on the shared resource. For example, if you want to grant control of a shared resource to a participant, you call BeginGrantControl on that participant modality.</remarks>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.Finalize">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.BeginAcceptControlRequest(System.AsyncCallback,System.Object)">
            <summary> 
            Accepts a pending control request.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.EndAcceptControlRequest(System.IAsyncResult)">
            <summary> 
            Accepts a pending control request.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.CanShare_private(Microsoft.Lync.Model.Conversation.Sharing.SharingResourceType)">
            <summary>Returns true if the given resource type can be shared.</summary><returns>CanShareDetail</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.CreateEmptyShareableResourceList_private">
            <summary> 
            Creates an empty list of resources.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.BeginDeclineControlRequest(System.AsyncCallback,System.Object)">
            <summary> 
            Declines a pending control request.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.EndDeclineControlRequest(System.IAsyncResult)">
            <summary> 
            Declines a pending control request.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.BeginGrantControl(System.AsyncCallback,System.Object)">
            <summary> 
            Grants control of the shared resource.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.EndGrantControl(System.IAsyncResult)">
            <summary> 
            Grants control of the shared resource.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.BeginReleaseControl(System.AsyncCallback,System.Object)">
            <summary> 
            Releases control of the shared resource.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.EndReleaseControl(System.IAsyncResult)">
            <summary> 
            Releases control of the shared resource.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.BeginRequestControl(System.AsyncCallback,System.Object)">
            <summary> 
            Requests control of the shared resource.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.EndRequestControl(System.IAsyncResult)">
            <summary> 
            Requests control of the shared resource.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.BeginRevokeControl(System.AsyncCallback,System.Object)">
            <summary> 
            Revokes control of the shared resource.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.EndRevokeControl(System.IAsyncResult)">
            <summary> 
            Revokes control of the shared resource.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.BeginShareDesktop(System.AsyncCallback,System.Object)">
            <summary> 
            Connects the modality, if not connected already, and starts sharing the desktop.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.EndShareDesktop(System.IAsyncResult)">
            <summary> 
            Connects the modality, if not connected already, and starts sharing the desktop.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.BeginShareMonitor_private(System.Int32,System.AsyncCallback,System.Object)">
            <summary> 
            Connects the modality, if not connected already, and starts sharing a monitor.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.EndShareMonitor_private(System.IAsyncResult)">
            <summary> 
            Connects the modality, if not connected already, and starts sharing a monitor.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.BeginShareMonitorByRect_private(System.Int32,System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary> 
            Connects the modality, if not connected already, and starts sharing the monitor with matching coordinates
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.EndShareMonitorByRect_private(System.IAsyncResult)">
            <summary> 
            Connects the modality, if not connected already, and starts sharing the monitor with matching coordinates
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.BeginShareResources(Microsoft.Lync.Model.Conversation.Sharing.SharingResourceList,System.AsyncCallback,System.Object)">
            <summary> 
            Connects the modality, if not connected already, and starts sharing the given resources.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.EndShareResources(System.IAsyncResult)">
            <summary> 
            Connects the modality, if not connected already, and starts sharing the given resources.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.CanShare(Microsoft.Lync.Model.Conversation.Sharing.SharingResourceType)">
            <summary>
            Finds if the given resource type can be shared 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.CanShare(Microsoft.Lync.Model.Conversation.Sharing.SharingResourceType,Microsoft.Lync.Model.Conversation.Sharing.CanShareDetail@)">
            <summary>
            Finds if the given resource type can be shared and provides some detail.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.BeginShareResources(System.Collections.Generic.IList{Microsoft.Lync.Model.Conversation.Sharing.SharingResource},System.AsyncCallback,System.Object)">
            <summary> 
            Starts sharing resources with the given a list of resources.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.BeginShareResources(Microsoft.Lync.Model.Conversation.Sharing.SharingResource,System.AsyncCallback,System.Object)">
            <summary> 
            Starts sharing resources with the given a resource.
            </summary> 
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.ApplicationSharingModalityPropertyChanged">
            <summary> 
            Raised when a property value changes
            </summary> 
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.ControllerChanged">
            <summary>Registered on the Conversation ApplicationSharingModality and raised when the shared resource controller changed.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.ControlRequestReceived">
            <summary>Registered on the Conversation ApplicationSharingModality and raised when someone requests control of a resource.</summary><remarks>To accept a control request, call BeginAcceptControlRequest or BeginGrantControl on the ApplicationSharingResource from the requesting participant modalities collection. Do not call these methods on the ApplicationSharingResource from the Conversation.Modalities collection.</remarks>
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.LocalSharedResourcesChanged">
            <summary>Raised when the list of locally shared resources changes.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.ParticipationStateChanged">
            <summary>Raised when the participation state has changed.</summary><remarks>The participation state change event is raised multiple times when a participant attempts to take a control action on a shared resource. For example, if a user requests control of a shared resource and the control request is granted, the event is rased when the ParticipationState goes from Viewing to RequestingControl. When the request is granted, the event is raised again when the ParticipationState changes to Controlling. </remarks>
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.SharerChanged">
            <summary> 
            Raised when the sharer changed.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.Controller">
            <summary>Gets the conversation participant that is in control of the shared resource.</summary><remarks>The Controller property returns null when the resource owner is in control of the resource. </remarks>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.LocalSharedResources">
            <summary>Get the list of resources currently shared by the local participant.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.ParticipationState">
            <summary>Get the participation state.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.ShareableResources">
            <summary>Get the list of available resources.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.Sharer">
            <summary> 
            Gets the participant who is sharing. It returns null when nobody is sharing.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingModality.View">
            <summary> 
            Get the application sharing view control
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingView">
            <summary> 
            ApplicationSharingWindowControl Class
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingView.Finalize">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingView.SetParent(System.Int64)">
            <summary> 
            Sets the parent window of the application sharing view.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingView.SyncRectangle">
            <summary> 
            Synchronize the sharing view rectangle to the fill in its parent window.
            </summary> 
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingView.PropertyChanged">
            <summary> 
            Raised when a view property changes.
            </summary> 
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingView.StateChanged">
            <summary> 
            Raised when the view state changes.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingView.DisplayMode">
            <summary> 
            Set the view display mode property.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingView.Properties">
            <summary> 
            Gets a collection of application sharing view properties.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingView.State">
            <summary> 
            The view control state.
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewPropertyChangedEventArgs">
            <summary> 
            ApplicationSharingViewPropertyChangedEventData Class
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewPropertyChangedEventArgs.Property">
            <summary> 
            Gets the property type whose value has changed.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewPropertyChangedEventArgs.Value">
            <summary> 
            Gets the property value who has changed.
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewPropertyDictionary">
            <summary> 
            ApplicationSharingViewPropertyDictionary Class
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewPropertyDictionary.GetKeyAt(System.Int32)">
            <summary> 
            Gets a property type based on the index.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewPropertyDictionary.GetValueAt(System.Int32)">
            <summary> 
            Gets a value based on the index.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewPropertyDictionary.Add(Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewProperty,System.Object)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewPropertyDictionary.Add(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewProperty,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewPropertyDictionary.Clear">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewPropertyDictionary.Contains(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewProperty,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewPropertyDictionary.ContainsKey(Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewProperty)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewPropertyDictionary.CopyTo(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewProperty,System.Object}[],System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewPropertyDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewPropertyDictionary.GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewPropertyDictionary.Remove(Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewProperty)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewPropertyDictionary.Remove(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewProperty,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewPropertyDictionary.TryGetValue(Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewProperty,System.Object@)">
            <summary> 
            Tries to find a value for the given key.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewPropertyDictionary.IsReadOnly">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewPropertyDictionary.Count">
            <summary> 
            Returns number of items in the dictionary.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewPropertyDictionary.Item(Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewProperty)">
            <summary> 
            Given a propery type, returns the related item value.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewPropertyDictionary.Keys">
            <summary> 
            Property type collection.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewPropertyDictionary.Values">
            <summary> 
            Values collection.
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewStateChangedEventArgs">
            <summary> 
            ApplicationSharingViewStateChangedEventData Class
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewStateChangedEventArgs.NewState">
            <summary> 
            Gets the new state value.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewStateChangedEventArgs.OldState">
            <summary> 
            Gets the old state value.
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.ContentCollectionChangedEventArgs">
            <summary>Represents the event data of a ContentCollectionChanged event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ContentCollectionChangedEventArgs.Item">
            <summary>Gets the content added or removed</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.ContentSharingModality">
            <summary>Creates and manages a collection of shareable content items.</summary><remarks>The ContentSharingModality inherits the methods, properties, and events from the Modality class. If you are sharing a whiteboard session with annotations in a conversation and then disconnect the ContentSharingModality, all of the whiteboard annotations are lost unless you save the whiteboard and associated annotations to a local file first.</remarks>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ContentSharingModality.Finalize">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ContentSharingModality.BeginCreateContent(Microsoft.Lync.Model.Conversation.Sharing.ShareableContentType,System.String,System.AsyncCallback,System.Object)">
            <summary> 
            Creates a content object of the given type with the given title
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ContentSharingModality.EndCreateContent(System.IAsyncResult)">
            <summary> 
            Creates a content object of the given type with the given title
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ContentSharingModality.BeginCreateContentFromFile(Microsoft.Lync.Model.Conversation.Sharing.ShareableContentType,System.String,System.String,System.Boolean,System.AsyncCallback,System.Object)">
            <summary> 
            Creates a content object of the given type with the given title and file name.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ContentSharingModality.EndCreateContentFromFile(System.IAsyncResult)">
            <summary> 
            Creates a content object of the given type with the given title and file name.
            </summary> 
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.Sharing.ContentSharingModality.ActiveContentChanged">
            <summary>Raised when the active content is changed</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.Sharing.ContentSharingModality.ActivePresenterChanged">
            <summary>Raised when the active presenter is changed</summary><remarks>The active presenter is changed when the the shared content of one conversation participant is swapped for the shared content of a different conversation participant.</remarks>
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.Sharing.ContentSharingModality.ContentAdded">
            <summary>Raised when any conversation participant has added a ShareableContent object  to the conversation.</summary><remarks>Be careful about calling the ShareableContent.Present() method on the added ShearableContent object. This event is raised when content is added by any participant, while you can only invoke the Present() method on content added by the local user.</remarks>
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.Sharing.ContentSharingModality.ContentRemoved">
            <summary>Raised when an existing ShareableContent has been removed from the content collection of the ContentSharingModality.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ContentSharingModality.ActiveContent">
            <summary>Returns the active content. NULL is valid.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ContentSharingModality.ActivePresenter">
            <summary>Returns the active presenter. NULL is valid.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ContentSharingModality.ContentCollection">
            <summary>Returns the collection of content.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.ControllerChangedEventArgs">
            <summary>Represents the event data of a ControllerChanged event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ControllerChangedEventArgs.ControllerName">
            <summary>Gets the display name of the new controller. An empty string indicates that the control is back to the sharer.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.ControlRequestReceivedEventArgs">
            <summary>Represents the event data of a ControlRequestReceivedEvent event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ControlRequestReceivedEventArgs.Requester">
            <summary>Gets the participant who requested to take control.</summary><remarks>To accept the control request, call BeginAcceptControlRequest on the Participant.Modalities[ModalityType.ApplicationSharing] modality after casting the Modality returned from this property to ApplicationSharingModality.</remarks>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.LocalSharedResourcesChangedEventArgs">
            <summary>Represents the event data of a LocalSharedResourcesChanged event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.LocalSharedResourcesChangedEventArgs.ResourceList">
            <summary>Gets the current resource list</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.ParticipationStateChangedEventArgs">
            <summary>Represents the event data of a ParticipationStateChangedEvent event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ParticipationStateChangedEventArgs.NewState">
            <summary>Gets the new participation state value.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ParticipationStateChangedEventArgs.OldState">
            <summary>Gets the old participation state value.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.PowerPointContent">
            <summary>Encapsulates a PowerPoint slide deck in a conversation content bin.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.ShareableContent">
            <summary>The ShareableContent class is the common class for all types of content</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ShareableContent.Finalize">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ShareableContent.CanInvoke(Microsoft.Lync.Model.Conversation.Sharing.ShareableContentAction,System.Int32@)">
            <summary>Returns true if a specific action is available.</summary><returns>System.Boolean</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ShareableContent.ClearAllAnnotations">
            <summary> 
            Clear all annonations on whiteboard 
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ShareableContent.BeginDownloadFile(System.String,System.AsyncCallback,System.Object)">
            <summary> 
            Download the content file 
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ShareableContent.EndDownloadFile(System.IAsyncResult)">
            <summary> 
            Download the content file 
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ShareableContent.Present">
            <summary>Makes this content available to attendees, takes the presenter lock, and makes the content top-most displayed.</summary><remarks>When you call ShareeableContent.Present, the shareable content is shown on the content stage of the conversation window, and replaces content currently shared. This method can only be called on content that is added by the local user.</remarks>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ShareableContent.Remove">
            <summary>Removes uploaded content from this conversation.</summary><remarks>You can only remove content that is uploaded by the local user.</remarks>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ShareableContent.SaveAnnotation(System.String,Microsoft.Lync.Model.Conversation.Sharing.ContentSavingFileType)">
            <summary> 
            Save this content as a file
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ShareableContent.StopPresenting">
            <summary>Takes currently shared content off of the content sharing stage but leaves the content in the content collection</summary><remarks>You can also stop presenting the current content by simply presenting a different content object. In this case, the replaced content is no longer presented, but is still in the conversation content collection. This method can only be called on content that is added by the local participant.</remarks>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ShareableContent.TakeOverAsPresenter">
            <summary> 
            Take over as a presenter 
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ShareableContent.Upload">
            <summary> 
            Upload the content to this conversation
            </summary> 
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.Sharing.ShareableContent.ActionAvailabilityChanged">
            <summary>Raised when an action availability changes</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.Sharing.ShareableContent.PropertyChanged">
            <summary>Raised when a property value changes</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Conversation.Sharing.ShareableContent.StateChanged">
            <summary>Raised when the state of a ShareableContent object changes.</summary><remarks>Use this event to track the progress of a shareable content item as the content bin upload operation progresses. When the shareable content item is in the content bin and available to present in the conversation, the state of the object is ShareableContentState.Online.</remarks>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ShareableContent.CreationTime">
            <summary>Returns the time that the content is created</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ShareableContent.IsActive">
            <summary>Returns whether or not the content is being presented.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ShareableContent.Modality">
            <summary>Gets the associated modality object.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ShareableContent.Owner">
            <summary>Returns the person who owns this content</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ShareableContent.Presenter">
            <summary>Returns the current presenter who owns the presentation lock for this content</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ShareableContent.Properties">
            <summary>Gets a collection of content properties.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ShareableContent.State">
            <summary>Returns the state of the content</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ShareableContent.Title">
            <summary>Gets the title of the content</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ShareableContent.Type">
            <summary>Returns the type of the content</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.PowerPointContent.Finalize">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.PowerPointContent.GoBackward">
            <summary>Go to previous slide.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.PowerPointContent.GoForward">
            <summary>Go to next slide.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.PowerPointContent.SyncWithPresenter">
            <summary>Synchronize PowerPoint slide view with presenter and leave private viewing mode.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.PowerPointContent.IsInSyncWithPresenter">
            <summary>Returns false if this content is not in synchronization with presenter.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentActionAvailabilityChangedEventArgs">
            <summary>Represents the event data of a ShareableContentActionAvailabilityChangedEvent event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentActionAvailabilityChangedEventArgs.Action">
            <summary>Gets the action identifier for which the availability has changed.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentActionAvailabilityChangedEventArgs.IsAvailable">
            <summary>Gets the new availability value.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentCollection">
            <summary>Maintains a collection of all Shareable content objects.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentCollection.Add(Microsoft.Lync.Model.Conversation.Sharing.ShareableContent)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentCollection.Clear">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentCollection.Contains(Microsoft.Lync.Model.Conversation.Sharing.ShareableContent)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentCollection.CopyTo(Microsoft.Lync.Model.Conversation.Sharing.ShareableContent[],System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentCollection.GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentCollection.IndexOf(Microsoft.Lync.Model.Conversation.Sharing.ShareableContent)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentCollection.Insert(System.Int32,Microsoft.Lync.Model.Conversation.Sharing.ShareableContent)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentCollection.Remove(Microsoft.Lync.Model.Conversation.Sharing.ShareableContent)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentCollection.RemoveAt(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentCollection.IsReadOnly">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentCollection.Count">
            <summary>Returns number of items in the collection.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentCollection.Item(System.Int32)">
            <summary> 
            Given an index, returns an item in the collection.
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentPropertyChangedEventArgs">
            <summary>Represents the event data of a ShareableContentPropertyChangedEvent event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentPropertyChangedEventArgs.Property">
            <summary>Gets the content property type whose value has changed.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentPropertyChangedEventArgs.Value">
            <summary>Gets the property value that has changed.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentStateChangedEventArgs">
            <summary>Represents the event data of a ShareableContentStateChangedEvent.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentStateChangedEventArgs.NewState">
            <summary>Gets the new sharing content state value.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentStateChangedEventArgs.OldState">
            <summary>Gets the old sharing content state value.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.SharerChangedEventArgs">
            <summary>Represents the event data of the resource sharing user changed event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.SharerChangedEventArgs.SharerName">
            <summary>Gets the display name of the new sharer. An empty string indicates no one is sharing.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.SharingResource">
            <summary>Encapsulates a shareable resource.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.SharingResource.Id">
            <summary>Get the resource id property.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.SharingResource.Name">
            <summary>Get the resource name property.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.SharingResource.Type">
            <summary>Get the resource type property.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.SharingResourceList">
            <summary>Encapsulates a collection of shareable resources.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.SharingResourceList.Add(Microsoft.Lync.Model.Conversation.Sharing.SharingResource)">
            <summary>Adds a new item to the list.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.SharingResourceList.Clear">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.SharingResourceList.Contains(Microsoft.Lync.Model.Conversation.Sharing.SharingResource)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.SharingResourceList.CopyTo(Microsoft.Lync.Model.Conversation.Sharing.SharingResource[],System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.SharingResourceList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.SharingResourceList.GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.SharingResourceList.IndexOf(Microsoft.Lync.Model.Conversation.Sharing.SharingResource)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.SharingResourceList.Insert(System.Int32,Microsoft.Lync.Model.Conversation.Sharing.SharingResource)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.SharingResourceList.Remove(Microsoft.Lync.Model.Conversation.Sharing.SharingResource)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Conversation.Sharing.SharingResourceList.RemoveAt(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.SharingResourceList.IsReadOnly">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.SharingResourceList.IsShareable">
            <summary>Can the resource list be shared?</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.SharingResourceList.Count">
            <summary>Returns number of items in the list.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Conversation.Sharing.SharingResourceList.Item(System.Int32)">
            <summary>Given an index, returns an item in the list.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Device.AudioDevice">
            <summary>Represents an audio device connected to a local computer.</summary><remarks>The Device.IsActive property returns true when the audio device will be used in the next conversation that is started. In addition, setting this property to true while a call is active causes this audio device to be used during the active call. After the call ends, the original audio device is used for future calls. In order to be sure the desired audio device is used for future calls, you must set the IsActive property to true when no calls are active.</remarks>
        </member>
        <member name="T:Microsoft.Lync.Model.Device.Device">
            <summary> 
            Device Class
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Device.Device.IsActive">
            <summary> 
            Determines if this device is the active device.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Device.Device.Name">
            <summary> 
            Gets the name of the audio device.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Device.AudioDevice.IsCertified">
            <summary>Determines if this device is UC certified.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Device.AudioDevice.Priority">
            <summary>Gets the priority of the audio device.</summary><remarks>The device priority reflects the capability of an audio device. A higher number indicates that the audio device has better capability than an audio device with a lower priority.</remarks>
        </member>
        <member name="P:Microsoft.Lync.Model.Device.AudioDevice.Type">
            <summary>Gets the type of device.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Device.DeviceManager">
            <summary>Manages the UC-enabled audio/video devices connected to a computer.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Device.DeviceManager.Finalize">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Device.DeviceManager.BeginPlayAudioFile(System.String,Microsoft.Lync.Model.Device.AudioPlayBackModes,System.Boolean,System.AsyncCallback,System.Object)">
            <summary> 
            Plays audio file.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Device.DeviceManager.EndPlayAudioFile(System.IAsyncResult)">
            <summary> 
            Plays audio file.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Device.DeviceManager.StopPlayingAllAudioFiles">
            <summary>Stop playing all audio files.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Device.DeviceManager.ActiveAudioDevice">
            <summary>Gets and sets the active audio device.</summary><remarks>If a conversation is going on, then setting this changes the currently in used device to the new device. This change happens in mid call and is not remembered when that conversation ends.
            If a conversation is not going on, then setting this property changes default device so the set device will be used any time a new conversation starts. Please note that when you change the active audio device between calls, the device you set is not persisted after you close the Lync client. To persist an audio device, you must set the audio device in the Lync client options Audio Device Settings page.</remarks>
        </member>
        <member name="P:Microsoft.Lync.Model.Device.DeviceManager.ActiveVideoDevice">
            <summary>Gets the active video device.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Device.DeviceManager.AudioDevices">
            <summary>Gets the collection of audio devices.</summary><remarks>All audio devices that have both a microphone and speaker are returned. For example, a UC-enabled headset such as a headset with microphone is returned. Audio devices that have only one of these two components are not returned. A virtual audio device that is defined in the Lync Audio Device Setting option page is also returned as long as it is defined with a physical speaker and a physical microphone.</remarks>
        </member>
        <member name="P:Microsoft.Lync.Model.Device.DeviceManager.VideoDevices">
            <summary>Gets the collection of devices.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Device.VideoDevice">
            <summary>Represents a video device connected to a local computer.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Extensibility.ApplicationRegistration">
            <summary>Represents a registered conversation window extension Silverlight application.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ApplicationRegistration.AddRegistration">
            <summary>Apply the registration.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ApplicationRegistration.RemoveRegistration">
            <summary>Remove the registration.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ApplicationRegistration.SetExtensibilityWindowProperties(System.String,System.String,Microsoft.Lync.Model.Extensibility.ConversationWindowExtensionSize)">
            <summary>Sets the extensibility window properties.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Extensibility.Automation">
            <summary>Automates starting a new conversation and showing the resulting conversation window.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.Automation.GetConversationWindow(Microsoft.Lync.Model.Conversation.Conversation)">
            <summary>Find or create a ConversationWindow for a given conversation.</summary><returns>IConversationWindow</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.Automation.BeginStartConversation(System.String,System.Int64,System.AsyncCallback,System.Object)">
            <summary> 
            Creates and initializes collaboration window to join a conference asynchronously.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.Automation.LaunchAddContactWizard(System.String)">
            <summary>Deprecated : Do not use this method.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.Automation.BeginStartConversationEx_private(Microsoft.Lync.Model.Extensibility.AutomationModalities,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Microsoft.Lync.Model.Extensibility.AutomationModalitySettings},System.Collections.Generic.IEnumerable{System.Object},System.AsyncCallback,System.Object)">
            <summary> 
            Starts a conversation with asynchronous.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.Automation.EndStartConversationEx_private(System.IAsyncResult)">
            <summary> 
            Starts a conversation with asynchronous.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.Automation.BeginStartConversation(Microsoft.Lync.Model.Extensibility.AutomationModalities,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Extensibility.AutomationModalitySettings,System.Object}},System.AsyncCallback,System.Object)">
            <summary>
            Launches a Lync conversation window and invites specified participants using the specified modalities and optional conversation context data. 
            The new conversation window is obtained in the System.AsyncCallback method you pass in the callback argument.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.Automation.EndStartConversation(System.IAsyncResult)">
            <summary>
            Ends the start conversation operation, unblocks program execution on the calling thread, and returns a new conversation window.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.Automation.BeginMeetNow(System.IntPtr,System.AsyncCallback,System.Object)">
            <summary>
            Launches a Lync Meet Now conversation window using the specified modalities. 
            The new conversation window is obtained in the System.AsyncCallback method you pass in the callback argument.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.Automation.BeginMeetNow(System.AsyncCallback,System.Object)">
            <summary>
            Launches a Lync Meet Now conversation window using the specified modalities. 
            The new conversation window is obtained in the System.AsyncCallback method you pass in the callback argument.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.Automation.EndMeetNow(System.IAsyncResult)">
            <summary>
            Ends the MeetNow operation, unblocks program execution on the calling thread, and returns a new conversation window.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Extensibility.ConversationWindow">
            <summary>Represents a conversation window and exposes operations to manipulate the window of a conversation, including docking into a parent window.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ConversationWindow.Finalize">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ConversationWindow.Close">
            <summary>Closes the window.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ConversationWindow.CloseExtensibilityWindow(System.String)">
            <summary>Closes the extensibility window of the given application GUID.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ConversationWindow.Dock_private(System.Int64)">
            <summary>Dock the window.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ConversationWindow.FlashExtensibilityWindow(System.String,System.Boolean)">
            <summary>Start or stop flashing the extensibility window of the given application GUID.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ConversationWindow.Move(System.Int32,System.Int32)">
            <summary>Move the window to new position.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ConversationWindow.MoveAndResize(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary> 
            Move And Resize the window with new position and size.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ConversationWindow.BeginOpenExtensibilityWindow(System.String,System.AsyncCallback,System.Object)">
            <summary> 
            Show the extensibility window for a registered application.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ConversationWindow.EndOpenExtensibilityWindow(System.IAsyncResult)">
            <summary> 
            Show the extensibility window for a registered application.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ConversationWindow.Resize(System.Int32,System.Int32)">
            <summary>Resize the window.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ConversationWindow.Undock">
            <summary>Undock the window.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ConversationWindow.CanInvoke(Microsoft.Lync.Model.Extensibility.ConversationWindowAction)">
            <summary> 
            Returns whether the given action is available
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ConversationWindow.ExitFullScreen">
            <summary> 
            Exits fullscreen.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ConversationWindow.HideContent">
            <summary> 
            Hides the content
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ConversationWindow.ShowContent">
            <summary> 
            Displays the content
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ConversationWindow.ShowFullScreen(System.Int32)">
            <summary> 
            Fullscreens the ConversationWindow in it&apos;s current monitor
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ConversationWindow.Dock(System.IntPtr)">
            <summary>
            Docks a conversation window inside a specified control. You can also dock a conversation
            window inside a form or a WPF WindowsFormsHostControl.
            </summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Extensibility.ConversationWindow.NeedsAttention">
            <summary>Raised when the UI Window needs attention.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Extensibility.ConversationWindow.NeedsSizeChange">
            <summary>Raised when the UI Window size changes.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Extensibility.ConversationWindow.ActionAvailabilityChanged">
            <summary> 
            Raised when a conversation window information changes.
            </summary> 
        </member>
        <member name="E:Microsoft.Lync.Model.Extensibility.ConversationWindow.InformationChanged">
            <summary>Raised when a conversation window information changes.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Extensibility.ConversationWindow.StateChanged">
            <summary>Raised when the conversation window state changes.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Extensibility.ConversationWindow.Conversation">
            <summary>Get the corresponding conversation object for this window.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Extensibility.ConversationWindow.Handle_private">
            <summary>Returns the handle of this window.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Extensibility.ConversationWindow.Height">
            <summary>The height of the conversation window in pixels.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Extensibility.ConversationWindow.IsDocked">
            <summary>Is the window docked?</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Extensibility.ConversationWindow.IsFullScreen">
            <summary>Is the window in full screen mode?</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Extensibility.ConversationWindow.Left">
            <summary>The horizontal position of the conversation window in pixels.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Extensibility.ConversationWindow.ParentWindow_private">
            <summary>Returns the handle of the parent window of this window.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Extensibility.ConversationWindow.Top">
            <summary>The vertical position of the conversation window in pixels.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Extensibility.ConversationWindow.Width">
            <summary>The width of the conversation window in pixels.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Extensibility.ConversationWindow.Properties">
            <summary>Gets a collection of conversation window properties.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Extensibility.ConversationWindow.State">
            <summary>Gets the current state of the window.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Extensibility.ConversationWindow.Handle">
            <summary>
            Returns the handle of the conversation window.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Extensibility.ConversationWindow.ParentWindow">
            <summary> 
            Returns the handle of the parent window or control in which the conversation window is docked.
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.Extensibility.ConversationWindowActionAvailabilityChangedEventArgs">
            <summary> 
            ParticipantActionAvailabilityChangedEventData Class
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Extensibility.ConversationWindowActionAvailabilityChangedEventArgs.Action">
            <summary> 
            Gets the action identifier for which the availability has changed.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Extensibility.ConversationWindowActionAvailabilityChangedEventArgs.IsAvailable">
            <summary> 
            Gets the new availability value.
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.Extensibility.ConversationWindowInformationChangedEventArgs">
            <summary>Represents the properties of a conversation window that have changed.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Extensibility.ConversationWindowInformationChangedEventArgs.ChangedProperties">
            <summary>Returns a dictionary of conversation window properties that have changed.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Extensibility.ConversationWindowInformationDictionary">
            <summary>A dictionary that contains a collection of information items for a conversation window.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ConversationWindowInformationDictionary.GetKeyAt(System.Int32)">
            <summary>Gets a key based on the index.</summary><returns>ConversationWindowInformationType</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ConversationWindowInformationDictionary.GetValueAt(System.Int32)">
            <summary>Gets a value based on the index.</summary><returns>System.Object</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ConversationWindowInformationDictionary.Add(Microsoft.Lync.Model.Extensibility.ConversationWindowInformationType,System.Object)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ConversationWindowInformationDictionary.Add(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Extensibility.ConversationWindowInformationType,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ConversationWindowInformationDictionary.Clear">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ConversationWindowInformationDictionary.Contains(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Extensibility.ConversationWindowInformationType,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ConversationWindowInformationDictionary.ContainsKey(Microsoft.Lync.Model.Extensibility.ConversationWindowInformationType)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ConversationWindowInformationDictionary.CopyTo(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Extensibility.ConversationWindowInformationType,System.Object}[],System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ConversationWindowInformationDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ConversationWindowInformationDictionary.GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ConversationWindowInformationDictionary.Remove(Microsoft.Lync.Model.Extensibility.ConversationWindowInformationType)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ConversationWindowInformationDictionary.Remove(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Extensibility.ConversationWindowInformationType,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Extensibility.ConversationWindowInformationDictionary.TryGetValue(Microsoft.Lync.Model.Extensibility.ConversationWindowInformationType,System.Object@)">
            <summary>Tries to find a value for the given key.</summary><returns>System.Boolean</returns>
        </member>
        <member name="P:Microsoft.Lync.Model.Extensibility.ConversationWindowInformationDictionary.IsReadOnly">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Extensibility.ConversationWindowInformationDictionary.Count">
            <summary>Returns number of items in the dictionary.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Extensibility.ConversationWindowInformationDictionary.Item(Microsoft.Lync.Model.Extensibility.ConversationWindowInformationType)">
            <summary>Given a conversation window property type, returns the related item value.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Extensibility.ConversationWindowInformationDictionary.Keys">
            <summary>Keys collection.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Extensibility.ConversationWindowInformationDictionary.Values">
            <summary>Values collection.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Extensibility.ConversationWindowNeedsAttentionEventArgs">
            <summary>Represents the state of a ConversationWindowNeedsAttention event.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Extensibility.ConversationWindowNeedsSizeChangeEventArgs">
            <summary>Represents the data of a ConversationWindowNeedsSizeChange Event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Extensibility.ConversationWindowNeedsSizeChangeEventArgs.MaximumWindowHeight">
            <summary>Gets the maximum required UI window height.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Extensibility.ConversationWindowNeedsSizeChangeEventArgs.MaximumWindowWidth">
            <summary>Gets the maximum required UI window width.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Extensibility.ConversationWindowNeedsSizeChangeEventArgs.MinimumWindowHeight">
            <summary>Gets the minimum required UI window height.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Extensibility.ConversationWindowNeedsSizeChangeEventArgs.MinimumWindowWidth">
            <summary>Gets the minimum required UI window width.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Extensibility.ConversationWindowNeedsSizeChangeEventArgs.RecommendedWindowHeight">
            <summary>Gets the recommended UI window height.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Extensibility.ConversationWindowNeedsSizeChangeEventArgs.RecommendedWindowWidth">
            <summary>Gets the recommended UI window width.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Extensibility.ConversationWindowStateChangedEventArgs">
            <summary>Encapsulates the event data of a StateChanged event and exposes the new ConversationWindowState enumerator.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Extensibility.ConversationWindowStateChangedEventArgs.NewState">
            <summary>Gets the new conversation window state value.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Extensibility.ConversationWindowStateChangedEventArgs.OldState">
            <summary>Gets the old conversation window state value.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Group.ContactCollection">
            <summary>Represents a collection of contacts that can be individually accessed by index.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Group.ContactCollection.TryGetContact(System.String,Microsoft.Lync.Model.Contact@)">
            <summary>Tries to find the first contact with the given Uri.</summary><returns>System.Boolean</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.Group.ContactCollection.Add(Microsoft.Lync.Model.Contact)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Group.ContactCollection.Clear">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Group.ContactCollection.Contains(Microsoft.Lync.Model.Contact)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Group.ContactCollection.CopyTo(Microsoft.Lync.Model.Contact[],System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Group.ContactCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Group.ContactCollection.GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Group.ContactCollection.IndexOf(Microsoft.Lync.Model.Contact)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Group.ContactCollection.Insert(System.Int32,Microsoft.Lync.Model.Contact)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Group.ContactCollection.Remove(Microsoft.Lync.Model.Contact)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Group.ContactCollection.RemoveAt(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Group.ContactCollection.IsReadOnly">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Group.ContactCollection.Count">
            <summary>Returns number of items in the collection.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Group.ContactCollection.Item(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Group.ContactPositionChangedEventArgs">
            <summary>Provides a range of contacts within the FrequentContacts group whose position has changed.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Group.ContactPositionChangedEventArgs.EndPosition">
            <summary>Returns the end position of the contacts that have their positions changed. A value greater than the contact count means that all contacts from the start position have their positions changed.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Group.ContactPositionChangedEventArgs.StartPosition">
            <summary>Returns the start position of the contacts that have their positions changed.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Group.CustomGroup">
            <summary>Represents a user-created contact group.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Group.Group">
            <summary> 
            Represents a group of contacts.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Group.Group.Finalize">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Group.Group.BeginAddContact(Microsoft.Lync.Model.Contact,System.AsyncCallback,System.Object)">
            <summary> 
            Adds a new contact to the group.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Group.Group.EndAddContact(System.IAsyncResult)">
            <summary> 
            Adds a new contact to the group.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Group.Group.CanInvoke(Microsoft.Lync.Model.Group.GroupAction,Microsoft.Lync.Model.Contact)">
            <summary> 
            Checks if a certain action can be applied to the group.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Group.Group.BeginRemoveContact(Microsoft.Lync.Model.Contact,System.AsyncCallback,System.Object)">
            <summary> 
            Removes a contact from the group.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Group.Group.EndRemoveContact(System.IAsyncResult)">
            <summary> 
            Removes a contact from the group.
            </summary> 
        </member>
        <member name="E:Microsoft.Lync.Model.Group.Group.ContactAdded">
            <summary> 
            Occurs when a contact is added to a group.
            </summary> 
        </member>
        <member name="E:Microsoft.Lync.Model.Group.Group.ContactRemoved">
            <summary> 
            Occurs when a contact is removed from a group.
            </summary> 
        </member>
        <member name="E:Microsoft.Lync.Model.Group.Group.NameChanged">
            <summary> 
            Occurs when a group is renamed.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Group.Group.ContactManager">
            <summary> 
            Gets the parent contact and group manager of this group.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Group.Group.Id">
            <summary> 
            Gets the group ID.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Group.Group.Name">
            <summary> 
            Gets the group name.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Group.Group.Type">
            <summary> 
            Gets the group type.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Group.CustomGroup.Finalize">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Group.CustomGroup.BeginRename(System.String,System.AsyncCallback,System.Object)">
            <summary> 
            Renames the custom group.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Group.CustomGroup.EndRename(System.IAsyncResult)">
            <summary> 
            Renames the custom group.
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.Group.DescriptionChangedEventArgs">
            <summary>Represents data for the DescriptionChanged event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Group.DescriptionChangedEventArgs.Description">
            <summary>Returns the description of the group.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Group.DistributionGroup">
            <summary>Represents a distribution group (an e-mail distribution list).</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Group.DistributionGroup.Finalize">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Group.DistributionGroup.BeginExpand(System.AsyncCallback,System.Object)">
            <summary> 
            Expands a distribution group.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Group.DistributionGroup.EndExpand(System.IAsyncResult)">
            <summary> 
            Expands a distribution group.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Group.DistributionGroup.BeginGetAllMembers(System.AsyncCallback,System.Object)">
            <summary> 
            Gets all group members.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Group.DistributionGroup.EndGetAllMembers(System.IAsyncResult)">
            <summary> 
            Gets all group members.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Group.DistributionGroup.BeginGetOwner(System.AsyncCallback,System.Object)">
            <summary> 
            Gets the owner of a group.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Group.DistributionGroup.EndGetOwner(System.IAsyncResult)">
            <summary> 
            Gets the owner of a group.
            </summary> 
        </member>
        <member name="E:Microsoft.Lync.Model.Group.DistributionGroup.DescriptionChanged">
            <summary>Occurs when the group description is changed.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Group.DistributionGroup.ExpansionStateChanged">
            <summary>Occurs when the expansion state of a distribution group is changed.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Group.DistributionGroup.NestedGroupAdded">
            <summary>Occurs when a nested group is added.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Group.DistributionGroup.NestedGroupRemoved">
            <summary>Occurs when a nested group is removed.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Group.DistributionGroup.Description">
            <summary>Returns the description of a group.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Group.DistributionGroup.EmailAddress">
            <summary>Returns the e-mail address of a distribution group.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Group.DistributionGroup.IsExpanded">
            <summary>Returns the expansion state of a distribution group.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Group.DistributionGroup.NestedGroups">
            <summary>Returns the collection of nested distribution groups.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Group.DistributionGroupExpansionStateChangedEventArgs">
            <summary>Represents data for the ExpansionStateChanged event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Group.DistributionGroupExpansionStateChangedEventArgs.IsExpanded">
            <summary>Returns whether a distribution group is expanded (enumerated its members</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Group.FavoriteContacts">
            <summary>Represents the favorite contacts of the signed in user.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Group.FavoriteContacts.Finalize">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Group.FrequentContacts">
            <summary>Represents the group the signed in user's most frequently used contacts.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Group.FrequentContacts.Finalize">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Group.FrequentContacts.GetValueAt(System.Int32)">
            <summary>Returns the contact at a given index.</summary><returns>IContact</returns>
        </member>
        <member name="E:Microsoft.Lync.Model.Group.FrequentContacts.ContactPositionChanged">
            <summary>Occurs when one or more contacts in a group are moved to different positions.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Group.GroupCollection">
            <summary>Represents the collection of all groups in the signed in user's contact list.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Group.GroupCollection.GetGroupsByType(Microsoft.Lync.Model.Group.GroupType)">
            <summary>Gets a collection of groups of a given group type.</summary><returns>IGroupCollection</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.Group.GroupCollection.TryGetGroup(System.String,Microsoft.Lync.Model.Group.Group@)">
            <summary>Finds the first group with a given name in a collection.</summary><returns>System.Boolean</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.Group.GroupCollection.Add(Microsoft.Lync.Model.Group.Group)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Group.GroupCollection.Clear">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Group.GroupCollection.Contains(Microsoft.Lync.Model.Group.Group)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Group.GroupCollection.CopyTo(Microsoft.Lync.Model.Group.Group[],System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Group.GroupCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Group.GroupCollection.GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Group.GroupCollection.IndexOf(Microsoft.Lync.Model.Group.Group)">
            <summary>Return the index of the group in the collection.</summary><returns>int</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.Group.GroupCollection.Insert(System.Int32,Microsoft.Lync.Model.Group.Group)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Group.GroupCollection.Remove(Microsoft.Lync.Model.Group.Group)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Group.GroupCollection.RemoveAt(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Group.GroupCollection.IsReadOnly">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Group.GroupCollection.Count">
            <summary>Returns the number of items in a collection.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Group.GroupCollection.Item(System.Int32)">
            <summary>Returns an item at a given index in the collection.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Group.GroupCollectionChangedEventArgs">
            <summary>Represents data for the GroupCollectionChanged event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Group.GroupCollectionChangedEventArgs.Group">
            <summary>Returns the added or removed group.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Group.GroupMemberChangedEventArgs">
            <summary>Represents data for the GroupMemberChanged event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Group.GroupMemberChangedEventArgs.Contact">
            <summary>Returns the added or removed contact.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Group.GroupNameChangedEventArgs">
            <summary>Represents data for the GroupNameChanged event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Group.GroupNameChangedEventArgs.NewName">
            <summary>Returns the new group name.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.AsynchronousOperation">
            <summary> 
            AsynchronousOperation Class
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.AsynchronousOperation.CancelOperation">
            <summary> 
            Cancels the async operation if it can be canceled.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Internal.AsynchronousOperation.AsyncState">
            <summary> 
            Returns current operation status.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Internal.AsynchronousOperation.DiagnosticCode">
            <summary> 
            Returns current status code of the current operation.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Internal.AsynchronousOperation.IsCancelable">
            <summary> 
            test async operation if it can be canceled.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Internal.AsynchronousOperation.IsCompleted">
            <summary> 
            Returns true when the async operation is completed.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Internal.AsynchronousOperation.IsSucceeded">
            <summary> 
            Returns true when the async operation is succeeded.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Internal.AsynchronousOperation.StatusCode">
            <summary> 
            Returns current status code of the current operation.
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.DeviceCollection">
            <summary> 
            DeviceCollection Class
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.DeviceCollection.Add(Microsoft.Lync.Model.Device.Device)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.DeviceCollection.Clear">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.DeviceCollection.Contains(Microsoft.Lync.Model.Device.Device)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.DeviceCollection.CopyTo(Microsoft.Lync.Model.Device.Device[],System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.DeviceCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.DeviceCollection.GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.DeviceCollection.IndexOf(Microsoft.Lync.Model.Device.Device)">
            <summary> 
            Return the index of the device in the collection.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.DeviceCollection.Insert(System.Int32,Microsoft.Lync.Model.Device.Device)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.DeviceCollection.Remove(Microsoft.Lync.Model.Device.Device)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.DeviceCollection.RemoveAt(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Internal.DeviceCollection.IsReadOnly">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Internal.DeviceCollection.Count">
            <summary> 
            Returns number of items in the collection.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Internal.DeviceCollection.Item(System.Int32)">
            <summary> 
            Given an index, returns an item in the collection.
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.ModalityStateChangePropertyDictionary">
            <summary> 
            ModalityStateChangePropertyDictionary Class
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.ModalityStateChangePropertyDictionary.GetKeyAt(System.Int32)">
            <summary> 
            Gets a key based on the index.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.ModalityStateChangePropertyDictionary.GetValueAt(System.Int32)">
            <summary> 
            Gets a value based on the index.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.ModalityStateChangePropertyDictionary.Add(Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty,System.Object)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.ModalityStateChangePropertyDictionary.Add(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.ModalityStateChangePropertyDictionary.Clear">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.ModalityStateChangePropertyDictionary.Contains(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.ModalityStateChangePropertyDictionary.ContainsKey(Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.ModalityStateChangePropertyDictionary.CopyTo(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty,System.Object}[],System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.ModalityStateChangePropertyDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.ModalityStateChangePropertyDictionary.GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.ModalityStateChangePropertyDictionary.Remove(Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.ModalityStateChangePropertyDictionary.Remove(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.ModalityStateChangePropertyDictionary.TryGetValue(Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty,System.Object@)">
            <summary> 
            Tries to find a value for the given key.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Internal.ModalityStateChangePropertyDictionary.IsReadOnly">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Internal.ModalityStateChangePropertyDictionary.Count">
            <summary> 
            Returns number of items in the dictionary.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Internal.ModalityStateChangePropertyDictionary.Item(Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty)">
            <summary> 
            Given a ModalityStateChangeProperty type, returns the item related value.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Internal.ModalityStateChangePropertyDictionary.Keys">
            <summary> 
            Keys collection
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Internal.ModalityStateChangePropertyDictionary.Values">
            <summary> 
            Values collection
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.NamedPropertyList">
            <summary> 
            Class representing list of name/value pair properties, can be accessed via index or name
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.NamedPropertyList.Add(System.String,System.Object)">
            <summary> 
            Adds a name/value pair to the property list.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.NamedPropertyList.Clear">
            <summary> 
            Removes all name/value pair values from the property list.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.NamedPropertyList.GetIDAt(System.Int32)">
            <summary> 
            Get a name of the property based on the property list index.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.NamedPropertyList.GetValueAt(System.Int32)">
            <summary> 
            Get a value of the property based on the property list index.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.NamedPropertyList.RemoveAt(System.Int32)">
            <summary> 
            Tries to remove a value based on name.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.NamedPropertyList.TryGetValue(System.String,System.Object@)">
            <summary> 
            Tries to find a value in the property list for the given name.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Internal.NamedPropertyList.Count">
            <summary> 
            Returns number of name/value pair values in the property list.
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.PreviousConversationsManagerConnectionStateChangedEventArgs">
            <summary> 
            PreviousConversationsManagerConnectionStateChangedEventData Class
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Internal.PreviousConversationsManagerConnectionStateChangedEventArgs.ConnectionState">
            <summary> 
            Gets the new value of is connected flag for the past conversations.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Internal.PreviousConversationsManagerConnectionStateChangedEventArgs.Errors">
            <summary> 
            Gets errors at time of change from the remote data store.
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.Room.FollowedRoomsChangedEventArgs">
            <summary>The state of the event raised when the membership of collection of user-followed chat rooms has changed.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.FollowedRoomsChangedEventArgs.Room">
            <summary>Gets the added or removed room.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Room.Room">
            <summary>Encapsulates a group chat room.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.Room.Finalize">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.Room.CreateRoomMessageDictionary_private">
            <summary>Creates a room message dictionary object.</summary><returns>Microsoft.Lync.Model.Room.RoomMessageDictionary.</returns><remarks>The RoomMessageDictionary contains a collection of Microsoft.Lync.Model.Room.RoomMessageFormat objects. To send a message to a room, you must add at least one key/value pair where the key is RoomMessageFormat.PlainText. You may also add another key/value pair where the key is RoomMessageFormat.Rtf</remarks>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.Room.DisableOutgoingMessageFilter">
            <summary>Disable the outgoing message filter.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.Room.EnableOutgoingMessageFilter(System.Boolean)">
            <summary>Enable the outgoing message filter.</summary><remarks>By default, a warning is generated each time a message is modified by a filter before being sent. To disable the warning, use the EnableOutgoingMessageFilter(false) override.</remarks>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.Room.BeginJoin(System.AsyncCallback,System.Object)">
            <summary> 
            Join this room
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Room.Room.EndJoin(System.IAsyncResult)">
            <summary> 
            Join this room
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Room.Room.BeginLeave(System.AsyncCallback,System.Object)">
            <summary> 
            Leave this room.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Room.Room.EndLeave(System.IAsyncResult)">
            <summary> 
            Leave this room.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Room.Room.BeginRetrieveAdditionalMessages(System.UInt32,System.UInt32,System.AsyncCallback,System.Object)">
            <summary> 
            Retrieve additional messages
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Room.Room.EndRetrieveAdditionalMessages(System.IAsyncResult)">
            <summary> 
            Retrieve additional messages
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Room.Room.SendFilteredMessage(Microsoft.Lync.Model.Room.RoomMessage,Microsoft.Lync.Model.Room.RoomMessageFilteringAction)">
            <summary>Sends a message that has passed a filter as defined by a custom application.</summary><remarks>If a user finishes typing a message to be posted to a chat room, your application logic has a chance to review the pending post by catching the IsSendingMessage event and running filter or formatting logic against the message string. If the user's message passes your filter, then post the message to the room by calling SendFilteredMessage with the enumerator RoomMessageFilteringAction.Passed. If the message does not pass your filter, call SendFilteredMessage with the enumerator RoomMessageFilteringAction.Canceled. If the message passes your filter but you reformat the message or replace text, call the method with the RoomMessageFilteringAction.Replaced enumerator. Note: If you call SendFilteredMessage multiple times with the same message, an exception is raised by Room.EndSendMessage with each send operation after the first send operation.</remarks>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.Room.BeginSendMessage_private(Microsoft.Lync.Model.Room.RoomMessageDictionary,System.AsyncCallback,System.Object)">
            <summary> 
            Send a message
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Room.Room.EndSendMessage_private(System.IAsyncResult)">
            <summary> 
            Send a message
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Room.Room.BeginSendStoryMessage_private(Microsoft.Lync.Model.Room.RoomMessageDictionary,System.AsyncCallback,System.Object)">
            <summary> 
            Send a story message
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Room.Room.EndSendStoryMessage_private(System.IAsyncResult)">
            <summary> 
            Send a story message
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Room.Room.BeginSendMessage(System.String,Microsoft.Lync.Model.Room.RoomMessageType,System.AsyncCallback,System.Object)">
            <summary>
            Sends a plain text message to this room.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.Room.BeginSendMessage(System.Collections.Generic.IDictionary{Microsoft.Lync.Model.Room.RoomMessageFormat,System.String},Microsoft.Lync.Model.Room.RoomMessageType,System.AsyncCallback,System.Object)">
            <summary>
            Sends a message in different formats to this room.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.Room.BeginSendStoryMessage(System.String,Microsoft.Lync.Model.Room.RoomMessageType,System.String,System.AsyncCallback,System.Object)">
            <summary>
            Sends a story message in plain text to this room.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.Room.BeginSendStoryMessage(System.Collections.Generic.IDictionary{Microsoft.Lync.Model.Room.RoomMessageFormat,System.String},Microsoft.Lync.Model.Room.RoomMessageType,System.String,System.AsyncCallback,System.Object)">
            <summary>
            Sends a story message in different formats to this room.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.Room.EndSendStoryMessage(System.IAsyncResult)">
            <summary>
            Ends the SendStoryMessage operation
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.Room.EndSendMessage(System.IAsyncResult)">
            <summary>
            Ends the SendMessage operation
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.Room.BeginRetrieveLatestMessages(System.UInt32,System.AsyncCallback,System.Object)">
            <summary>
            Retrieve latest messages from a room
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.Room.EndRetrieveLatestMessages(System.IAsyncResult)">
            <summary>
            Ends the Retrevie latest messages operations 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.Room.EnableOutgoingMessageFilter">
            <summary>        
            <summary>Enable the outgoing message filter.</summary>
            </summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Room.Room.IsSendingMessage">
            <summary>Raised when the signed in user has finished typing in the group chat room message typing area or Room.BeginSendMessage has been called and Room.IsOutgoingMessageFilterEnabled returns true.</summary><remarks>If a user finishes typing a message to be posted to a chat room, your application logic has a chance to review the pending post by catching the IsSendingMessage event and running filter or formatting logic against the message string. If the user's message passes your filter, then post the message to the room by calling SendFilteredMessage with the enumerator RoomMessageFilteringAction.Passed. If the message does not pass your filter, call SendFilteredMessage with the enumerator RoomMessageFilteringAction.Canceled. If the message passes your filter but you reformat the message or replace text, call the method with the RoomMessageFilteringAction.Replaced enumerator.</remarks>
        </member>
        <member name="E:Microsoft.Lync.Model.Room.Room.JoinStateChanged">
            <summary>Raised when a room join state is changed.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Room.Room.MessagesReceived">
            <summary>Raised when messages are received.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Room.Room.ParticipantAdded">
            <summary>Raised when a new participant is added.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Room.Room.ParticipantRemoved">
            <summary>Raised when a existing participant is removed.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Room.Room.PropertyChanged">
            <summary>Raised when a property value changes.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Room.Room.UnreadMessageCountChanged">
            <summary>Raised when unread message count changes.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.Room.IsOutgoingMessageFilterEnabled">
            <summary>Gets whether the outgoing message filter is enabled.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.Room.JoinedState">
            <summary>Gets the room join state.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.Room.Participants">
            <summary>Gets the room participants</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.Room.Properties">
            <summary>Gets a collection of room properties.</summary><remarks>If the Lync client is signed out after you get an instance of Room, then the Properties property is set to null. You should test Properties for a null state or read the LyncClient.State property before attempting to read Properties.</remarks>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.Room.UnreadRoomMessageCount">
            <summary>Gets the unread room message count.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Room.RoomJoinStateChangedEventArgs">
            <summary>Encapsulates the state of the RoomJoinStateChanged event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.RoomJoinStateChangedEventArgs.JoinState">
            <summary>Get new join state for a room.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Room.RoomManager">
            <summary>Group chat room manager that provides room query functionality.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.RoomManager.Finalize">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.RoomManager.BeginQueryRoomByUri(System.String,System.AsyncCallback,System.Object)">
            <summary> 
            Query a room by its URI.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Room.RoomManager.EndQueryRoomByUri(System.IAsyncResult)">
            <summary> 
            Query a room by its URI.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Room.RoomManager.BeginQueryRooms(System.String,Microsoft.Lync.Model.Room.RoomSearchModeType,System.AsyncCallback,System.Object)">
            <summary> 
            Query room(s)
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Room.RoomManager.EndQueryRooms(System.IAsyncResult)">
            <summary> 
            Query room(s)
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Room.RoomManager.TryGetRoomByUri(System.String,Microsoft.Lync.Model.Room.Room@)">
            <summary>Retrieve a locally cached room by URI.</summary><returns>System.Boolean</returns>
        </member>
        <member name="E:Microsoft.Lync.Model.Room.RoomManager.FollowedRoomAdded">
            <summary>Raised when a room is added to the user's contact list.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Room.RoomManager.FollowedRoomRemoved">
            <summary>Raised when a room is removed from the user's contact list.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Room.RoomManager.RoomManagerStateChanged">
            <summary>Raised when the room manager is changing its state.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.RoomManager.FollowedRooms">
            <summary>Returns a collection of followed rooms</summary><remarks>A followed room is a room that is added to the local user's contact list. When a user signs in to Lync, all rooms in the followed room list are automatically entered and the user is visible on the participant roster of each followed room. When the user signs out of Lync, then the user automatically leaves all chat rooms.In addition, you get message posting notification events on every followed room as soon as the user signs in and you register for the appropriate room events.</remarks>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.RoomManager.State">
            <summary>Gets the room manager state.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Room.RoomManagerStateChangedEventArgs">
            <summary>Exposes the new state of a room manager.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.RoomManagerStateChangedEventArgs.NewState">
            <summary>Get new state for the room manager.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Room.RoomMessage">
            <summary>Defines a room message sent to a group chat room.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.RoomMessage.Id">
            <summary>Get the room message ID</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.RoomMessage.MessageDictionary">
            <summary>Gets a copy of message dictionary.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.RoomMessage.RoomUri">
            <summary>Gets the Room Uri.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.RoomMessage.SenderUri">
            <summary>Gets the User Uri who send this room message</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.RoomMessage.SentTime">
            <summary>Gets the sentTime</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Room.RoomMessageDictionary">
            <summary>A key/value pairing of a message format enumerator and actual message text.</summary><remarks>The RoomMessageDictionary contains a collection of Microsoft.Lync.Model.Room.RoomMessageFormat objects. To send a message to a room, you must add at least one key/value pair where the key is RoomMessageFormat.PlainText. You may also add another key/value pair where the key is RoomMessageFormat.Rtf</remarks>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.RoomMessageDictionary.Add(Microsoft.Lync.Model.Room.RoomMessageFormat,System.Object)">
            <summary>Add a key/value pair composed of RoomMessageType and the message text as a string.</summary><remarks>You can only add a single message of a given RoomMessageType enumerator. This means that you can add a version of your message in plain text and a version in rich text format (rtf). You must always add a plain text version and rtf version is optiona.</remarks>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.RoomMessageDictionary.ContainsKey(Microsoft.Lync.Model.Room.RoomMessageFormat)">
            <summary>Checks to see if there is a value associated with the given key</summary><returns>System.Boolean</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.RoomMessageDictionary.GetKeyAt(System.Int32)">
            <summary>Gets a key based on the index.</summary><returns>RoomMessageFormat</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.RoomMessageDictionary.GetValueAt(System.Int32)">
            <summary>Gets a value based on the index.</summary><returns>System.Object</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.RoomMessageDictionary.Remove(Microsoft.Lync.Model.Room.RoomMessageFormat)">
            <summary>Tries to remove a value based on the key.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.RoomMessageDictionary.RemoveAll">
            <summary>Removes all values.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.RoomMessageDictionary.RemoveAt(System.Int32)">
            <summary>Tries to remove a value based on the index.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.RoomMessageDictionary.TryGetValue(Microsoft.Lync.Model.Room.RoomMessageFormat,System.Object@)">
            <summary>Tries to find a value for the given key.</summary><returns>System.Boolean</returns>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.RoomMessageDictionary.Count">
            <summary>Returns number of items in the dictionary.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.RoomMessageDictionary.Item(Microsoft.Lync.Model.Room.RoomMessageFormat)">
            <summary> 
            Given a message format, returns the item related value.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Room.RoomMessageDictionary.Keys">
            <summary>Keys collection</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.RoomMessageDictionary.StoryTitle">
            <summary>The title of a story message.</summary><remarks>This property returns an empty string when the message type is not Story.</remarks>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.RoomMessageDictionary.Type">
            <summary>Puts the room message type</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.RoomMessageDictionary.Values">
            <summary>Values collection</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Room.RoomMessageEventArgs">
            <summary>Encapsulates the state of the event raised when a local user sends a message to a group chat room.</summary><remarks>When room message filtering is enabled, the IsSendingMessge event is raised when the local user is sending a message to the room.  This class instance gives you access to the message that will be sent to the room or canceled after you take the appropriate action on the message.  For information about taking action on a message, see Room.SendFilteredMessage(Microsoft.Lync.Model.Room.RoomMessage,Microsoft.Lync.Model.Room.RoomZMessageFilteringAction).</remarks>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.RoomMessageEventArgs.Message">
            <summary>Gets the room message data.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Room.RoomMessagesEventArgs">
            <summary>Encapsulates the state of the MessagesReceived event and contains a collection of the messages sent to a room.</summary><remarks>When room message filtering is enabled, the IsSendingMessge event is raised when the local user is sending a message to the room.  This class instance gives you access to the message that will be sent to the room or canceled after you take the appropriate action on the message.  For information about taking action on a message, see Room.SendFilteredMessage(Microsoft.Lync.Model.Room.RoomMessage,Microsoft.Lync.Model.Room.Room.MessageFilteringAction).</remarks>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.RoomMessagesEventArgs.Messages">
            <summary>Gets the room messages data.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Room.RoomParticipantsEventArgs">
            <summary>Encapsulates the state of the ParticpiantsAdded and ParticipantsRemoved events and contains a collection of the room Participants added or removed.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.RoomParticipantsEventArgs.Participants">
            <summary>Get new room participants.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Room.RoomPropertyChangedEventArgs">
            <summary>Encapsulates the event data of the Room.PropertyChanged event and provides the new value of the changed property.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.RoomPropertyChangedEventArgs.Property">
            <summary>Gets the room property type whose value has changed.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.RoomPropertyChangedEventArgs.Value">
            <summary>Gets the property value who has changed.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Room.RoomPropertyDictionary">
            <summary>A dictionary that contains the properties of a group chat room.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.RoomPropertyDictionary.GetKeyAt(System.Int32)">
            <summary>Gets a key based on the index.</summary><returns>RoomProperty</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.RoomPropertyDictionary.GetValueAt(System.Int32)">
            <summary>Gets a value based on the index.</summary><returns>System.Object</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.RoomPropertyDictionary.Add(Microsoft.Lync.Model.Room.RoomProperty,System.Object)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.RoomPropertyDictionary.Add(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Room.RoomProperty,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.RoomPropertyDictionary.Clear">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.RoomPropertyDictionary.Contains(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Room.RoomProperty,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.RoomPropertyDictionary.ContainsKey(Microsoft.Lync.Model.Room.RoomProperty)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.RoomPropertyDictionary.CopyTo(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Room.RoomProperty,System.Object}[],System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.RoomPropertyDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.RoomPropertyDictionary.GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.RoomPropertyDictionary.Remove(Microsoft.Lync.Model.Room.RoomProperty)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.RoomPropertyDictionary.Remove(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Room.RoomProperty,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Room.RoomPropertyDictionary.TryGetValue(Microsoft.Lync.Model.Room.RoomProperty,System.Object@)">
            <summary>Tries to find a value for the given key.</summary><returns>System.Boolean</returns>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.RoomPropertyDictionary.IsReadOnly">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.RoomPropertyDictionary.Count">
            <summary>Returns number of items in the dictionary.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.RoomPropertyDictionary.Item(Microsoft.Lync.Model.Room.RoomProperty)">
            <summary> 
            Given a room property type, returns the related item value.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.Room.RoomPropertyDictionary.Keys">
            <summary>Keys collection.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.RoomPropertyDictionary.Values">
            <summary>Values collection.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Room.RoomUser">
            <summary>Defines a user in a group chat room.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.RoomUser.CanSendMessage">
            <summary>Whether the RoomUser can send messages</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.RoomUser.Uri">
            <summary>Get the RoomUser URI</summary><remarks>Uri is null if the Lync client user is signed out.</remarks>
        </member>
        <member name="T:Microsoft.Lync.Model.Room.RoomUserChangedEventArgs">
            <summary>Encapsulates the state of the event raised when the ability of a group chat room user to send messages changes.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.RoomUserChangedEventArgs.CanSendMessage">
            <summary>Gets whether room user can send message</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Room.UnreadMessageCountChangedEventArgs">
            <summary>Encapsulates the state of the event raised when the count of unread messages in a room changes.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Room.UnreadMessageCountChangedEventArgs.NewUnreadMessageCount">
            <summary>Gets the new unread message count.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.AccessEntry">
            <summary>Represents a user, workgroup, enterprise, federation, or public entity and the associated privacy level.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.AccessEntry.CanClearPermission">
            <summary>Returns true when allowed to clear assigned permission.</summary><returns>System.Boolean</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.AccessEntry.CanSetPermission(Microsoft.Lync.Model.AccessPermission)">
            <summary>Returns true when allowed to set to a specific permission.</summary><returns>System.Boolean</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.AccessEntry.ClearPermission">
            <summary>Clear the permission that assigned to this access entry.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.AccessEntry.SetPermission(Microsoft.Lync.Model.AccessPermission)">
            <summary>Set this access entry to a specific permission.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.AccessEntry.Id">
            <summary>Gets the access entry id.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.AccessEntry.Permission">
            <summary>returns the permission the access entry assigned.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.AccessEntry.Scope">
            <summary>Gets the access entry scope.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.AccessEntryCollectionChangedEventArgs">
            <summary>Represents the event data of an AccessEntryCollectionEvent.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.AccessEntryCollectionChangedEventArgs.AccessEntry">
            <summary>Gets the access entry added or removed.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.AccessPermission">
            <summary>Represents a privacy level.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.AccessPermission.Finalize">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.AccessPermission.GetAccessEntry(Microsoft.Lync.Model.AccessEntryScope,System.String,Microsoft.Lync.Model.AccessEntry@)">
            <summary>Gets the access entry instance, or creates a new one if not found.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.AccessPermission.TryGetValue(Microsoft.Lync.Model.AccessEntryScope,System.String,Microsoft.Lync.Model.AccessEntry@)">
            <summary>Try to get an access entry object given its scope and id.</summary><returns>System.Boolean</returns>
        </member>
        <member name="E:Microsoft.Lync.Model.AccessPermission.AccessEntryAdded">
            <summary>Raised when an access entry is added.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.AccessPermission.AccessEntryRemoved">
            <summary>Raised when an access entry is removed.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.AccessPermission.AccessEntries">
            <summary>Returns all access entries.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.AccessPermission.AccessLevel">
            <summary>Gets permission access level.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.AlertLevel">
            <summary>Presence-based alert policy.</summary><remarks>The AlertLevel.NotificationEnabled property tells you whether notification for new group chat messages, conversation invitations, or meeting reminders should be displayed. You do not display such notifications if a user is presenting in a meeting and is sharing a display or presenting a PowerPoint slide deck. In those cases, NotificationEnabled returns false and you must honor the policy.</remarks>
        </member>
        <member name="P:Microsoft.Lync.Model.AlertLevel.AlertModes">
            <summary>Returns the modes to be used for alert.</summary><remarks>Not implemented.</remarks>
        </member>
        <member name="P:Microsoft.Lync.Model.AlertLevel.LevelOfPrivacy">
            <summary>Returns the level of privacy.</summary><remarks>Not implemented.</remarks>
        </member>
        <member name="P:Microsoft.Lync.Model.AlertLevel.NotificationEnabled">
            <summary>Returns true when notification is allowed.</summary><remarks>The AlertLevel.NotificationEnabled property tells you whether notification for new group chat messages, conversation invitations, or meeting reminders should be displayed. You do not display such notifications if a user is presenting in a meeting and is sharing a display or presenting a PowerPoint slide deck. In those cases, NotificationEnabled returns false and you must honor the policy.</remarks>
        </member>
        <member name="T:Microsoft.Lync.Model.AlertLevelChangedEventArgs">
            <summary>Encapsulates the new state of an AlertLevel instance.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.AlertLevelChangedEventArgs.ChangedNotificationTypes">
            <summary>Returns notification types whose alert level has changed.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Client">
            <summary>Abstract client class which represents the main entry point for the API. Represents the  Lync client and provides access to conversations and contacts via their respective manager classes.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Client.Finalize">
            <summary>
            </summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Client.StateChanged">
            <summary>Occurs when the Client state changes.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Client.ContactManager">
            <summary>Gets the contact group manager.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Client.ConversationManager">
            <summary>Gets the conversation manager.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Client.Self">
            <summary>Gets the self Contact object representing the signed in user.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Client.State">
            <summary>Gets the current platform state.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Client.Uri">
            <summary>Gets the URI of the client.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Client.RoomManager">
            <summary>Gets the group chat room manager.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Client.Settings">
            <summary> 
            Gets the settings object.
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.ClientSettings">
            <summary>Encapsulate a client settings method.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ClientSettings.Finalize">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ClientSettings.CanSetValue(Microsoft.Lync.Model.ClientSettingsType)">
            <summary> 
            test if the client setting can be set.
            </summary> 
        </member>
        <member name="E:Microsoft.Lync.Model.ClientSettings.SettingChanged">
            <summary>Raised when a client setting is changed.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.ClientSettings.Item(Microsoft.Lync.Model.ClientSettingsType)">
            <summary>Update a client setting, an event will be raised when setting changed after this.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.ClientSettingsChangedEventArgs">
            <summary>The client setting state that has changed.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.ClientSettingsChangedEventArgs.Type">
            <summary>The type of the setting that has been changed</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.ClientSettingsChangedEventArgs.Value">
            <summary>The value of the setting that has been changed</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.ClientStateChangedEventArgs">
            <summary>ClientStateChangedEventData Class which is used to get the old, new client states and the status code from the StateChanged event in the LyncClient class.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.ClientStateChangedEventArgs.NewState">
            <summary>Gets the new LyncClient state value.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.ClientStateChangedEventArgs.OldState">
            <summary>Gets the old LyncClient state value.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.ClientStateChangedEventArgs.StatusCode">
            <summary>Gets the StatusCode of the change.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Contact">
            <summary>Represents a contact within the Lync client. A contact can be person, bot or phone number.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Contact.Finalize">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Contact.CanChangeSetting(Microsoft.Lync.Model.ContactSetting)">
            <summary>Checks if the setting can be set for this contact.</summary><returns>System.Boolean</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.Contact.CanMoveToGroup(Microsoft.Lync.Model.Group.Group,Microsoft.Lync.Model.Group.Group)">
            <summary>Checks if this contact can be moved from a source group to a target group.</summary><returns>System.Boolean</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.Contact.CanStart(Microsoft.Lync.Model.Conversation.ModalityTypes)">
            <summary>Checks if this contact can start a given mode of communication (modality</summary><returns>System.Boolean</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.Contact.BeginChangeSetting(Microsoft.Lync.Model.ContactSetting,System.Object,System.AsyncCallback,System.Object)">
            <summary> 
            Sets a setting associated with this contact.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Contact.EndChangeSetting(System.IAsyncResult)">
            <summary> 
            Sets a setting associated with this contact.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Contact.CreateContactEndpoint(System.String)">
            <summary> 
            Creates a collaboration endpoint object from a telephone number.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Contact.GetContactInformation(Microsoft.Lync.Model.ContactInformationType)">
            <summary>Gets a single contact information from this contact.</summary><returns>System.Object</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.Contact.GetContactInformation(System.Collections.Generic.IEnumerable{Microsoft.Lync.Model.ContactInformationType})">
            <summary> 
            Gets contact information from this contact.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Contact.BeginGetOrganizationInformation(Microsoft.Lync.Model.OrganizationStructureTypes,System.AsyncCallback,System.Object)">
            <summary> 
            Gets the Organization Info of this contact.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Contact.EndGetOrganizationInformation(Microsoft.Lync.Model.Group.ContactCollection@,Microsoft.Lync.Model.Group.ContactCollection@,Microsoft.Lync.Model.Group.ContactCollection@,System.IAsyncResult)">
            <summary> 
            Gets the Organization Info of this contact.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Contact.BeginMoveToGroup(Microsoft.Lync.Model.Group.Group,Microsoft.Lync.Model.Group.Group,System.AsyncCallback,System.Object)">
            <summary> 
            Moves this contact from a source group to a target group.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Contact.EndMoveToGroup(System.IAsyncResult)">
            <summary> 
            Moves this contact from a source group to a target group.
            </summary> 
        </member>
        <member name="E:Microsoft.Lync.Model.Contact.ContactInformationChanged">
            <summary>Occurs when one or more pieces of contact information are changed.</summary><remarks>Application logic must subscribe to contact information publication before the ContactInformationChanged event can be received. Call the CreateSubscription method on the ContactManager object and then add the Contact to be subscribed and the ContactInformationTypes that you are interested in. Finally, call the Subscribe method on the ContactSubscription object.</remarks>
        </member>
        <member name="E:Microsoft.Lync.Model.Contact.SettingChanged">
            <summary>Occurs when the value of a contact property changes.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Contact.UriChanged">
            <summary>Occurs when the contact URI is changed.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Contact.ContactManager">
            <summary>Gets the parent Contact and Group Manager of this contact.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Contact.CustomGroups">
            <summary>Gets the list of all groups of which this contact is a member of.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Contact.Settings">
            <summary>Gets a collection of contact settings.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Contact.UnifiedCommunicationType">
            <summary>Returns the Unified Communication type of this contact.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Contact.Uri">
            <summary>Gets the contact URI.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.ContactEndpoint">
            <summary>Represents a collaboration endpoint which may be a SIP endpoint or a TEL endpoint.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactEndpoint.CanStart(Microsoft.Lync.Model.Conversation.ModalityTypes)">
            <summary>Checks if this endpoint can start a given mode of communication (modality</summary><returns>System.Boolean</returns>
        </member>
        <member name="P:Microsoft.Lync.Model.ContactEndpoint.DisplayName">
            <summary>Gets the display string.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.ContactEndpoint.Type">
            <summary>Gets the collaboration endpoint type.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.ContactEndpoint.Uri">
            <summary>Gets the collaboration endpoint URI.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.ContactEndpointCollection">
            <summary>Represents a collection of endpoint identifiers available to a signed in user.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactEndpointCollection.Add(Microsoft.Lync.Model.ContactEndpointType,System.String)">
            <summary>Adds a contact endpoint Uri by endpoint type to the list.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactEndpointCollection.Add(Microsoft.Lync.Model.ContactEndpoint)">
            <summary>Adds a contact endpoint to the contact endpoint collection.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactEndpointCollection.Clear">
            <summary>Removes all contact endpoints from the collection.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactEndpointCollection.Contains(Microsoft.Lync.Model.ContactEndpoint)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactEndpointCollection.CopyTo(Microsoft.Lync.Model.ContactEndpoint[],System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactEndpointCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactEndpointCollection.GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactEndpointCollection.IndexOf(Microsoft.Lync.Model.ContactEndpoint)">
            <summary>Return the index of the contact endpoint in the collection.</summary><returns>int</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactEndpointCollection.Insert(System.Int32,Microsoft.Lync.Model.ContactEndpoint)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactEndpointCollection.Remove(Microsoft.Lync.Model.ContactEndpoint)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactEndpointCollection.RemoveAt(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.ContactEndpointCollection.IsReadOnly">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.ContactEndpointCollection.Count">
            <summary>Returns number of items in the object.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.ContactEndpointCollection.Item(System.Int32)">
            <summary> 
            Given an index, returns an item in the collection.
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.ContactInformationChangedEventArgs">
            <summary>Represents information that has changed for a given contact.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.ContactInformationChangedEventArgs.ChangedContactInformation">
            <summary>Returns the contact information that have changed.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.ContactInformationDictionary">
            <summary> 
            Represents a collection of key/value pairs of contact information.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ContactInformationDictionary.GetKeyAt(System.Int32)">
            <summary> 
            Returns a key stored at the given index.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ContactInformationDictionary.GetValueAt(System.Int32)">
            <summary> 
            Returns a value stored at the given index.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ContactInformationDictionary.Add(Microsoft.Lync.Model.ContactInformationType,System.Object)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactInformationDictionary.Add(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.ContactInformationType,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactInformationDictionary.Clear">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactInformationDictionary.Contains(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.ContactInformationType,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactInformationDictionary.ContainsKey(Microsoft.Lync.Model.ContactInformationType)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactInformationDictionary.CopyTo(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.ContactInformationType,System.Object}[],System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactInformationDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactInformationDictionary.GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactInformationDictionary.Remove(Microsoft.Lync.Model.ContactInformationType)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactInformationDictionary.Remove(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.ContactInformationType,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactInformationDictionary.TryGetValue(Microsoft.Lync.Model.ContactInformationType,System.Object@)">
            <summary> 
            Returns the value associated with the specified key.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ContactInformationDictionary.IsReadOnly">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.ContactInformationDictionary.Count">
            <summary> 
            Returns the number of key/value pairs contained in the dictionary.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ContactInformationDictionary.Item(Microsoft.Lync.Model.ContactInformationType)">
            <summary> 
            Returns the value associated with the specified key.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ContactInformationDictionary.Keys">
            <summary> 
            Returns keys collection.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ContactInformationDictionary.Values">
            <summary> 
            Returns values collection in the same order as keys collection.
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.ContactManager">
            <summary>The contact manager class is used to add, remove, and update contacts and their properties.  The contact manager is also used to access Lync contact list groups.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactManager.Finalize">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactManager.BeginAddGroup(System.String,System.AsyncCallback,System.Object)">
            <summary> 
            Adds a new custom group to the group list.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ContactManager.EndAddGroup(System.IAsyncResult)">
            <summary> 
            Adds a new custom group to the group list.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ContactManager.BeginAddGroup(Microsoft.Lync.Model.Group.DistributionGroup,System.AsyncCallback,System.Object)">
            <summary> 
            Adds a distribution group to the group list.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ContactManager.CreateSubscription">
            <summary>Creates a Subscription object that can be used for batching subscriptions or queries.</summary><returns>Microsoft.Lync.Model.ContactSubscription</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactManager.GetContactByTel_private(System.String)">
            <summary> 
            RNL for TEL contact.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ContactManager.GetContactByUri(System.String)">
            <summary>Finds or creates a new contact using the contact URI.</summary><returns>Microsoft.Lync.Model.Contact</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactManager.GetExpertSearchQueryString(System.String)">
            <summary>Gets the search query string used for expert search.</summary><returns>System.String</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactManager.GetSearchFields">
            <summary>Gets the supported search fields.</summary><returns>Microsoft.Lync.Model.SearchFields</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactManager.GetSearchProviderID(Microsoft.Lync.Model.SearchProviders)">
            <summary>Gets the ID of a search provider.</summary><returns>System.String</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactManager.GetSearchProviderStatus(Microsoft.Lync.Model.SearchProviders)">
            <summary>Gets the search provider status.</summary><returns>Microsoft.Lync.Model.SearchProviderStatusType</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactManager.GetSelfContact_private">
            <summary> 
            Deprecated. Gets the self contact. Use Client.Self instead.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ContactManager.BeginLookup(System.String,System.AsyncCallback,System.Object)">
            <summary> 
            Looks up a contact or a distribution group by entryid, sip address, email address, display name, etc..
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ContactManager.EndLookup(System.IAsyncResult)">
            <summary> 
            Looks up a contact or a distribution group by entryid, sip address, email address, display name, etc..
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ContactManager.BeginRemoveContactFromAllGroups(Microsoft.Lync.Model.Contact,System.AsyncCallback,System.Object)">
            <summary> 
            Removes a contact from all groups except distribution groups.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ContactManager.EndRemoveContactFromAllGroups(System.IAsyncResult)">
            <summary> 
            Removes a contact from all groups except distribution groups.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ContactManager.BeginRemoveGroup(Microsoft.Lync.Model.Group.Group,System.AsyncCallback,System.Object)">
            <summary> 
            Removes a group from the group list.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ContactManager.EndRemoveGroup(System.IAsyncResult)">
            <summary> 
            Removes a group from the group list.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ContactManager.BeginSearch(System.String,Microsoft.Lync.Model.SearchProviders,Microsoft.Lync.Model.SearchFields,Microsoft.Lync.Model.SearchOptions,System.UInt32,System.AsyncCallback,System.Object)">
            <summary> 
            Searches for contacts and distribution groups that match the given search criteria.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ContactManager.EndSearch(System.IAsyncResult)">
            <summary> 
            Searches for contacts and distribution groups that match the given search criteria.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ContactManager.BeginSearch(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins to search for contacts or distribution groups matching a specified search string. Results of the search
            are returned in the System.AsyncCallback you pass in the contactsAndGroupsCallback argument.
            </summary>
        </member>
        <member name="E:Microsoft.Lync.Model.ContactManager.GroupAdded">
            <summary>Occurs when a group is added.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.ContactManager.GroupRemoved">
            <summary>Occurs when a group is removed.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.ContactManager.SearchProviderStateChanged">
            <summary>Occurs when the status of a search provider changes.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.ContactManager.Groups">
            <summary>Returns the group collection.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.ContactSettingChangedEventArgs">
            <summary>Represents the contact settings that were changed as a result of a contact setting changed event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.ContactSettingChangedEventArgs.Setting">
            <summary>Returns the type of the contact property whose value has changed.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.ContactSettingChangedEventArgs.Value">
            <summary>Returns the changed contact setting value.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.ContactSettingDictionary">
            <summary> 
            Represents a collection of key/value pairs of contact properties.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ContactSettingDictionary.GetKeyAt(System.Int32)">
            <summary> 
            Returns a key stored at the given index.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ContactSettingDictionary.GetValueAt(System.Int32)">
            <summary> 
            Returns a value stored at the given index.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ContactSettingDictionary.Add(Microsoft.Lync.Model.ContactSetting,System.Object)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactSettingDictionary.Add(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.ContactSetting,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactSettingDictionary.Clear">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactSettingDictionary.Contains(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.ContactSetting,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactSettingDictionary.ContainsKey(Microsoft.Lync.Model.ContactSetting)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactSettingDictionary.CopyTo(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.ContactSetting,System.Object}[],System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactSettingDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactSettingDictionary.GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactSettingDictionary.Remove(Microsoft.Lync.Model.ContactSetting)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactSettingDictionary.Remove(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.ContactSetting,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactSettingDictionary.TryGetValue(Microsoft.Lync.Model.ContactSetting,System.Object@)">
            <summary> 
            Returns the value associated with the specified key.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ContactSettingDictionary.IsReadOnly">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.ContactSettingDictionary.Count">
            <summary> 
            Returns the number of key/value pairs contained in the dictionary.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ContactSettingDictionary.Item(Microsoft.Lync.Model.ContactSetting)">
            <summary> 
            Returns the value associated with the specified key.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ContactSettingDictionary.Keys">
            <summary> 
            Returns keys collection.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ContactSettingDictionary.Values">
            <summary> 
            Returns values collection in the same order as keys collection.
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.ContactSubscription">
            <summary>Specifies the type of contact information to be to be subscribed on a collection of contacts set in the subscription.</summary><remarks>You must cache a ContactSubscription that you create to maintain subscriptions to contacts you get using the search feature, call into GetContactByUri, or other methods that return Contact instances that are not in the Lync client contact list. You continue to receive contact information updates for the contacts in the cached ContactSubscription until you either un-subscribe to the contacts or destroy the ContactSubscription. The ContactSubscription is cached as a class member.</remarks>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactSubscription.AddContact(Microsoft.Lync.Model.Contact)">
            <summary>Adds a contact to a subscription.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactSubscription.AddContacts(System.Collections.Generic.IEnumerable{Microsoft.Lync.Model.Contact})">
            <summary>Adds a collection of contacts to a subscription.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactSubscription.RemoveContact(Microsoft.Lync.Model.Contact)">
            <summary>Removes a contact from a subscription.</summary><remarks>It is not necessary to call ContactSubscription.Subscribe after removing a contact from a subscription.</remarks>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactSubscription.Subscribe(Microsoft.Lync.Model.ContactSubscriptionRefreshRate,System.Collections.Generic.IEnumerable{Microsoft.Lync.Model.ContactInformationType})">
            <summary>if a contact is removed from the subscription, the subscription to this contact can only be removed when Unsubscribe or UpdateSubscription is called.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContactSubscription.Unsubscribe">
            <summary>Unsubscribes a subscription.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.ContactSubscription.Contacts">
            <summary>Returns the collection of contacts in a subscription.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.ContactSubscription.LastSubscribedContactInformation">
            <summary>Returns the collection of contact information last subscribed in a subscription.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.ContactSubscription.LastSubscribedRefreshRate">
            <summary>Returns the subscription freshness.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.ConversationCollection">
            <summary> 
            ConversationCollection class defines a collection of conversations.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationCollection.Add(Microsoft.Lync.Model.Conversation.Conversation)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationCollection.Clear">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationCollection.Contains(Microsoft.Lync.Model.Conversation.Conversation)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationCollection.CopyTo(Microsoft.Lync.Model.Conversation.Conversation[],System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationCollection.GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationCollection.IndexOf(Microsoft.Lync.Model.Conversation.Conversation)">
            <summary> 
            Return the index of the conversation in the collection.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationCollection.Insert(System.Int32,Microsoft.Lync.Model.Conversation.Conversation)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationCollection.Remove(Microsoft.Lync.Model.Conversation.Conversation)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationCollection.RemoveAt(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.ConversationCollection.IsReadOnly">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.ConversationCollection.Count">
            <summary> 
            Returns number of items in the collection.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ConversationCollection.Item(System.Int32)">
            <summary> 
            Given an index, returns an item in the collection.
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.ConversationPropertyDictionary">
            <summary> 
            ConversationPropertyDictionary Class
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationPropertyDictionary.GetKeyAt(System.Int32)">
            <summary> 
            Gets a key based on the index.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationPropertyDictionary.GetValueAt(System.Int32)">
            <summary> 
            Gets a value based on the index.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationPropertyDictionary.Add(Microsoft.Lync.Model.Conversation.ConversationProperty,System.Object)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationPropertyDictionary.Add(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.ConversationProperty,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationPropertyDictionary.Clear">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationPropertyDictionary.Contains(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.ConversationProperty,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationPropertyDictionary.ContainsKey(Microsoft.Lync.Model.Conversation.ConversationProperty)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationPropertyDictionary.CopyTo(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.ConversationProperty,System.Object}[],System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationPropertyDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationPropertyDictionary.GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationPropertyDictionary.Remove(Microsoft.Lync.Model.Conversation.ConversationProperty)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationPropertyDictionary.Remove(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.ConversationProperty,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationPropertyDictionary.TryGetValue(Microsoft.Lync.Model.Conversation.ConversationProperty,System.Object@)">
            <summary> 
            Tries to find a value for the given key.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ConversationPropertyDictionary.IsReadOnly">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.ConversationPropertyDictionary.Count">
            <summary> 
            Returns number of items in the dictionary.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ConversationPropertyDictionary.Item(Microsoft.Lync.Model.Conversation.ConversationProperty)">
            <summary> 
            Given a conversation propery type, returns the related item value.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ConversationPropertyDictionary.Keys">
            <summary> 
            Keys collection.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ConversationPropertyDictionary.Values">
            <summary> 
            Values collection.
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.ConversationStateChangePropertyDictionary">
            <summary> 
            ConversationStateChangePropertyDictionary Class
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationStateChangePropertyDictionary.GetKeyAt(System.Int32)">
            <summary> 
            Gets a key based on the index.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationStateChangePropertyDictionary.GetValueAt(System.Int32)">
            <summary> 
            Gets a value based on the index.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationStateChangePropertyDictionary.Add(Microsoft.Lync.Model.Conversation.ConversationStateChangeProperty,System.Object)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationStateChangePropertyDictionary.Add(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.ConversationStateChangeProperty,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationStateChangePropertyDictionary.Clear">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationStateChangePropertyDictionary.Contains(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.ConversationStateChangeProperty,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationStateChangePropertyDictionary.ContainsKey(Microsoft.Lync.Model.Conversation.ConversationStateChangeProperty)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationStateChangePropertyDictionary.CopyTo(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.ConversationStateChangeProperty,System.Object}[],System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationStateChangePropertyDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationStateChangePropertyDictionary.GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationStateChangePropertyDictionary.Remove(Microsoft.Lync.Model.Conversation.ConversationStateChangeProperty)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationStateChangePropertyDictionary.Remove(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.ConversationStateChangeProperty,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ConversationStateChangePropertyDictionary.TryGetValue(Microsoft.Lync.Model.Conversation.ConversationStateChangeProperty,System.Object@)">
            <summary> 
            Tries to find a value for the given key.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ConversationStateChangePropertyDictionary.IsReadOnly">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.ConversationStateChangePropertyDictionary.Count">
            <summary> 
            Returns number of items in the dictionary.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ConversationStateChangePropertyDictionary.Item(Microsoft.Lync.Model.Conversation.ConversationStateChangeProperty)">
            <summary> 
            Given a ConversationStateChangeProperty type, returns the item related value.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ConversationStateChangePropertyDictionary.Keys">
            <summary> 
            Keys collection
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ConversationStateChangePropertyDictionary.Values">
            <summary> 
            Values collection
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.CredentialRequestedEventArgs">
            <summary>CredentialRequestedEventData Class which is used to get the credential request type, domain and user names. The password, domain and user names can be changed from the event data object obtained from the event OnCredentialRequested.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.CredentialRequestedEventArgs.Cancel(System.Boolean)">
            <summary>Cancels the credential request.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.CredentialRequestedEventArgs.Submit(System.String,System.String,System.Boolean)">
            <summary>Apply the updated credential.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.CredentialRequestedEventArgs.CanSavePassword">
            <summary>Allow password to be saved.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.CredentialRequestedEventArgs.IsPasswordSaved">
            <summary>Returns true if the user password is allowed to be saved.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.CredentialRequestedEventArgs.Type">
            <summary>Gets the type for the requesting credential.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.CredentialRequestedEventArgs.UserName">
            <summary>Gets the Domain and User Name.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.CustomAvailabilityState">
            <summary>Represents a user-defined availability state that is honored by Lync.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.CustomAvailabilityState.Activity">
            <summary>Get the display string value of the custom presence state.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.CustomAvailabilityState.Availability">
            <summary>Get the availability value of the custom presence.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.CustomAvailabilityState.Id">
            <summary>Get the custom presence state ID.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.DelegatorClient">
            <summary>Represents a Client instance delegated to act on behalf of a delegator.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.DelegatorClient.Finalize">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.DelegatorClient.LyncClient">
            <summary>Gets the LyncClient instance that represents the delegating user.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.DelegatorClientCollectionEventArgs">
            <summary>Represents the new state of a delegator client collection.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.DelegatorClientCollectionEventArgs.DelegatorClient">
            <summary>Gets the delegate endpoint object added or removed.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.ExchangeECPUrlChangedEventArgs">
            <summary>Encapsulates the new state of the Exchange ECP Url. Raised when the Exchange ECP Url changes.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.ExchangeECPUrlChangedEventArgs.NewUrl">
            <summary>Returns New Exchange Control Panel (ECP</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.LocaleString">
            <summary>Class representing a localized string with locale ID.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.LocaleString.LocaleId">
            <summary>LocaleId</summary><remarks>The Locale Id (LCID).</remarks>
        </member>
        <member name="P:Microsoft.Lync.Model.LocaleString.Value">
            <summary>Value</summary><remarks>The localized string.</remarks>
        </member>
        <member name="T:Microsoft.Lync.Model.LyncClient">
            <summary>Implements the client class which represents the main entry point for the API.  Represents the Lync client and provides access to conversations and contacts via their respective manager classes.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.LyncClient.Finalize">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.LyncClient.CreateApplicationRegistration(System.String,System.String)">
            <summary>Construct an application registration object used to register a Silverlight conversation window extension application.</summary><returns>ApplicationRegistration. </returns>
        </member>
        <member name="M:Microsoft.Lync.Model.LyncClient.BeginInitialize_private(System.String,System.String,System.String,System.String,System.String,Microsoft.Lync.Model.SupportedFeatures,System.AsyncCallback,System.Object)">
            <summary> 
            Starts the UC Client initialization.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.LyncClient.EndInitialize_private(System.IAsyncResult)">
            <summary> 
            Starts the UC Client initialization.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.LyncClient.BeginShutdown(System.AsyncCallback,System.Object)">
            <summary> 
            Starts the collaboration platform shutdown process.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.LyncClient.EndShutdown(System.IAsyncResult)">
            <summary> 
            Starts the collaboration platform shutdown process.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.LyncClient.BeginSignIn(System.String,System.String,System.String,System.AsyncCallback,System.Object)">
            <summary> 
            Starts the uc Client sign in process with a specific availability.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.LyncClient.EndSignIn(System.IAsyncResult)">
            <summary> 
            Starts the uc Client sign in process with a specific availability.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.LyncClient.BeginSignOut(System.AsyncCallback,System.Object)">
            <summary> 
            Starts the uc Client sign out process.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.LyncClient.EndSignOut(System.IAsyncResult)">
            <summary> 
            Starts the uc Client sign out process.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.LyncClient.GetClient(System.Boolean)">
            <summary>
            Creates an instance of LyncClient and returns.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.LyncClient.GetCurrentClient">
            <summary>
            Returns the current instance of LyncClient.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.LyncClient.GetAutomation">
            <summary>
            Creates an instance of Automation and returns.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.LyncClient.BeginInitialize(System.AsyncCallback,System.Object)">
            <summary>
            Initializes LyncClient when the Lync is in Suppressed Mode. You do not 
            call this method when Lync is not suppressed.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.LyncClient.EndInitialize(System.IAsyncResult)">
            <summary>
            Ends the Initialize operation and unblocks program execution on the calling thread.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.LyncClient.GetExceptionFromCOMException(System.Runtime.InteropServices.COMException)">
            <summary>
            Translate the comexception to the appropriate exception.
            </summary>
        </member>
        <member name="E:Microsoft.Lync.Model.LyncClient.CapabilitiesChanged">
            <summary>Raised when the preferred capabilities changed</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.LyncClient.CredentialRequested">
            <summary>Raised when a user credential is requested by a server such as the Lync server.</summary><remarks>This event is only raised when Lync client is in Full UI supression mode and a user has not provided acceptable sign-in credentials or other credential types requested by othe r servers.  When not in UI suppression mode, this even is not raised when credentials are requested. In this case, the Lync client presents a credential request dialog.</remarks>
        </member>
        <member name="E:Microsoft.Lync.Model.LyncClient.DelegatorClientAdded">
            <summary>Raised when a new delegate endpoint is created.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.LyncClient.DelegatorClientRemoved">
            <summary>Raised when an existing delegate endpoint is released.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.LyncClient.SignInDelayed">
            <summary>Raised when there is a delay in the SignIn/auto-recover process</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.LyncClient.Capabilities">
            <summary>Determine whether ours is the preferred client for a capability.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.LyncClient.DelegatorClients">
            <summary>Gets an array of IDelegatorClient objects.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.LyncClient.DeviceManager">
            <summary>Gets the device manager.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.LyncClient.InSuppressedMode">
            <summary>Returns true when in Full UI Suppression mode.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.LyncClient.SignInConfiguration">
            <summary>Gets the configuration manager.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.LyncClient.Utilities">
            <summary>Returns an instance of the Utilities class.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.LyncClient.ClientDisconnected">
            <summary>
            Raised when Lync connection is broken.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.LyncClient.UISuppressionMode">
            <summary>
            Enumerates possible values of the registry entry that reflects whether Communicator 
            is installed in UI suppression mode (i.e. just as an Automation server) or not
            (both as an end-user app and an Automation server)
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.LyncClient.UISuppressionMode.Disabled">
            <summary>
            UI Suppression mode is disabled
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.LyncClient.UISuppressionMode.Enabled">
            <summary>
            UI Suppression mode is enabled
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.LyncClient.AutomationServerState">
            <summary>
            Enumerates possible values of the registry entry that reflects the state
            of Communicator process as the Automation server.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.LyncClient.AutomationServerState.NotRunning">
            <summary>
            Automation server is not running
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.LyncClient.AutomationServerState.Initializing">
            <summary>
            Automation server is initializing
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.LyncClient.AutomationServerState.Running">
            <summary>
            Automation server is running
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.ModalityDictionary">
            <summary> 
            ModalityDictionary Class
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ModalityDictionary.GetKeyAt(System.Int32)">
            <summary> 
            Gets a key based on the index.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ModalityDictionary.GetValueAt(System.Int32)">
            <summary> 
            Gets a value based on the index.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ModalityDictionary.Add(Microsoft.Lync.Model.Conversation.ModalityTypes,Microsoft.Lync.Model.Conversation.Modality)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ModalityDictionary.Add(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.ModalityTypes,Microsoft.Lync.Model.Conversation.Modality})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ModalityDictionary.Clear">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ModalityDictionary.Contains(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.ModalityTypes,Microsoft.Lync.Model.Conversation.Modality})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ModalityDictionary.ContainsKey(Microsoft.Lync.Model.Conversation.ModalityTypes)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ModalityDictionary.CopyTo(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.ModalityTypes,Microsoft.Lync.Model.Conversation.Modality}[],System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ModalityDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ModalityDictionary.GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ModalityDictionary.Remove(Microsoft.Lync.Model.Conversation.ModalityTypes)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ModalityDictionary.Remove(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.ModalityTypes,Microsoft.Lync.Model.Conversation.Modality})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ModalityDictionary.TryGetValue(Microsoft.Lync.Model.Conversation.ModalityTypes,Microsoft.Lync.Model.Conversation.Modality@)">
            <summary> 
            Tries to find a value for the given key.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ModalityDictionary.IsReadOnly">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.ModalityDictionary.Count">
            <summary> 
            Returns number of items in the dictionary.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ModalityDictionary.Item(Microsoft.Lync.Model.Conversation.ModalityTypes)">
            <summary> 
            Given a modality type, returns the item related value.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ModalityDictionary.Keys">
            <summary> 
            Keys collection
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ModalityDictionary.Values">
            <summary> 
            Values collection
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.ModalityPropertyDictionary">
            <summary> 
            ModalityPropertyDictionary Class
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ModalityPropertyDictionary.GetKeyAt(System.Int32)">
            <summary> 
            Gets a key based on the index.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ModalityPropertyDictionary.GetValueAt(System.Int32)">
            <summary> 
            Gets a value based on the index.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ModalityPropertyDictionary.Add(Microsoft.Lync.Model.Conversation.ModalityProperty,System.Object)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ModalityPropertyDictionary.Add(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.ModalityProperty,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ModalityPropertyDictionary.Clear">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ModalityPropertyDictionary.Contains(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.ModalityProperty,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ModalityPropertyDictionary.ContainsKey(Microsoft.Lync.Model.Conversation.ModalityProperty)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ModalityPropertyDictionary.CopyTo(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.ModalityProperty,System.Object}[],System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ModalityPropertyDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ModalityPropertyDictionary.GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ModalityPropertyDictionary.Remove(Microsoft.Lync.Model.Conversation.ModalityProperty)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ModalityPropertyDictionary.Remove(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.ModalityProperty,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ModalityPropertyDictionary.TryGetValue(Microsoft.Lync.Model.Conversation.ModalityProperty,System.Object@)">
            <summary> 
            Tries to find a value for the given key.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ModalityPropertyDictionary.IsReadOnly">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.ModalityPropertyDictionary.Count">
            <summary> 
            Returns number of items in the dictionary.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ModalityPropertyDictionary.Item(Microsoft.Lync.Model.Conversation.ModalityProperty)">
            <summary> 
            Given a modality propery type, returns the item related value.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ModalityPropertyDictionary.Keys">
            <summary> 
            Keys collection
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ModalityPropertyDictionary.Values">
            <summary> 
            Values collection
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.ParticipantCollection">
            <summary> 
            ParticipantCollection defines a collection of Participant objects.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ParticipantCollection.Add(Microsoft.Lync.Model.Conversation.Participant)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ParticipantCollection.Clear">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ParticipantCollection.Contains(Microsoft.Lync.Model.Conversation.Participant)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ParticipantCollection.CopyTo(Microsoft.Lync.Model.Conversation.Participant[],System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ParticipantCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ParticipantCollection.GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ParticipantCollection.IndexOf(Microsoft.Lync.Model.Conversation.Participant)">
            <summary> 
            Return the index of the participant in the collection.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ParticipantCollection.Insert(System.Int32,Microsoft.Lync.Model.Conversation.Participant)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ParticipantCollection.Remove(Microsoft.Lync.Model.Conversation.Participant)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ParticipantCollection.RemoveAt(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.ParticipantCollection.IsReadOnly">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.ParticipantCollection.Count">
            <summary> 
            Returns number of items in the collection.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ParticipantCollection.Item(System.Int32)">
            <summary> 
            Given an index, returns an item in the collection.
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.ParticipantPropertyDictionary">
            <summary> 
            ParticipantPropertyDictionary Class
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ParticipantPropertyDictionary.GetKeyAt(System.Int32)">
            <summary> 
            Gets a key based on the index.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ParticipantPropertyDictionary.GetValueAt(System.Int32)">
            <summary> 
            Gets a value based on the index.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ParticipantPropertyDictionary.Add(Microsoft.Lync.Model.Conversation.ParticipantProperty,System.Object)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ParticipantPropertyDictionary.Add(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.ParticipantProperty,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ParticipantPropertyDictionary.Clear">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ParticipantPropertyDictionary.Contains(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.ParticipantProperty,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ParticipantPropertyDictionary.ContainsKey(Microsoft.Lync.Model.Conversation.ParticipantProperty)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ParticipantPropertyDictionary.CopyTo(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.ParticipantProperty,System.Object}[],System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ParticipantPropertyDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ParticipantPropertyDictionary.GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ParticipantPropertyDictionary.Remove(Microsoft.Lync.Model.Conversation.ParticipantProperty)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ParticipantPropertyDictionary.Remove(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.ParticipantProperty,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ParticipantPropertyDictionary.TryGetValue(Microsoft.Lync.Model.Conversation.ParticipantProperty,System.Object@)">
            <summary> 
            Tries to find a value for the given key.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ParticipantPropertyDictionary.IsReadOnly">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.ParticipantPropertyDictionary.Count">
            <summary> 
            Returns number of items in the dictionary.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ParticipantPropertyDictionary.Item(Microsoft.Lync.Model.Conversation.ParticipantProperty)">
            <summary> 
            Given a participant propery type, returns the related item value.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ParticipantPropertyDictionary.Keys">
            <summary> 
            Keys collection.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ParticipantPropertyDictionary.Values">
            <summary> 
            Values collection.
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.Phone">
            <summary>Represents a publishable telephone number used to reach a contact.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Phone.Endpoint">
            <summary>Gets Collaboration Endpoint object representing the phone number and type.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Phone.Published">
            <summary>Read-write property that indicates a phone has been published when the property value returns as true.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.PhonesChangedEventArgs">
            <summary>Represents the event data of a PhonesChangedEvent.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.PhonesChangedEventArgs.Phones">
            <summary>Gets the collection of Phone objects.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.PreferredCapabilitiesChangedEventArgs">
            <summary>Used to get the endpoint capability types from the event CapabilitiesChanged in the LyncClient class.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.PreferredCapabilitiesChangedEventArgs.PreferredCapabilities">
            <summary>Determine whether Lync is the preferred client for a capability.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.PresenceCapability">
            <summary>Encapsulates a communication capability as published by a contact.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.PresenceCapability.Availability">
            <summary>Returns the presence availability of a contact at an endpoint that is capable of the communication mode specified by the PresenceCapability.Type property.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.PresenceCapability.CanCapture">
            <summary>Indicates if contact can capture for capability type.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.PresenceCapability.CanRender">
            <summary>Indicates if contact can render for capability type.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.PresenceCapability.Type">
            <summary>Gets the presence capability type.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.PublicCloudProviderInfo">
            <summary>Public cloud provider information.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.PublicCloudProviderInfo.IconUrl">
            <summary>Returns the icon url of the public cloud.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.PublicCloudProviderInfo.Name">
            <summary>Returns the name of the public cloud</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.PublicCloudProviderInfo.NameDecorationDomain">
            <summary> 
            (obsolete) Returns the Name Decoration Domain of the public cloud.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.PublicCloudProviderInfo.ProxyFqdn">
            <summary> 
            Returns the proxy FQDN of the public cloud.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.PublicCloudProviderInfo.NameDecorationExcludedDomainList">
            <summary> 
            Returns a comma separated list of the excluded Name Decoration Domains of the public cloud.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.PublicCloudProviderInfo.NameDecorationRoutingDomain">
            <summary> 
            Returns the Name Decoration Routing Domain of the public cloud.
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.PublicCloudProviderInfo2">
            <summary> 
            Public cloud provider info v2
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.PublicCloudProviderInfo2.NameDecorationExcludedDomainList">
            <summary> 
            Returns a comma separated list of the excluded Name Decoration Domains of the public cloud.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.PublicCloudProviderInfo2.NameDecorationRoutingDomain">
            <summary> 
            Returns the Name Decoration Routing Domain of the public cloud.
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.RepresentationInfo">
            <summary>Encapsulates information about the delegate representation.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.RepresentationInfo.Type">
            <summary>Gets the type of representation.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.RepresentationInfo.Uri">
            <summary>Gets the URI of party being represented.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.ResiliencyModeChangedEventArgs">
            <summary>Represents the event data of a ResiliencyModeChangedEvent.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.ResiliencyModeChangedEventArgs.IsInResiliencyMode">
            <summary>Gets the flag if Lync client is in resiliency mode.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.RoomCollection">
            <summary> 
            RoomCollection class defines a collection of rooms.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.RoomCollection.Add(Microsoft.Lync.Model.Room.Room)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.RoomCollection.Clear">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.RoomCollection.Contains(Microsoft.Lync.Model.Room.Room)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.RoomCollection.CopyTo(Microsoft.Lync.Model.Room.Room[],System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.RoomCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.RoomCollection.GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.RoomCollection.IndexOf(Microsoft.Lync.Model.Room.Room)">
            <summary> 
            Return the index of the roomuser in the collection.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.RoomCollection.Insert(System.Int32,Microsoft.Lync.Model.Room.Room)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.RoomCollection.Remove(Microsoft.Lync.Model.Room.Room)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.RoomCollection.RemoveAt(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.RoomCollection.IsReadOnly">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.RoomCollection.Count">
            <summary> 
            Returns number of items in the collection.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.RoomCollection.Item(System.Int32)">
            <summary> 
            Given an index, returns an item in the collection.
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.RoomMessageCollection">
            <summary> 
            RoomMessageCollection class defines a collection of room messages.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.RoomMessageCollection.Add(Microsoft.Lync.Model.Room.RoomMessage)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.RoomMessageCollection.Clear">
            <summary> 
            Removes all items from the list.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.RoomMessageCollection.Contains(Microsoft.Lync.Model.Room.RoomMessage)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.RoomMessageCollection.CopyTo(Microsoft.Lync.Model.Room.RoomMessage[],System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.RoomMessageCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.RoomMessageCollection.GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.RoomMessageCollection.IndexOf(Microsoft.Lync.Model.Room.RoomMessage)">
            <summary> 
            Return the index of the roomuser in the collection.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.RoomMessageCollection.Insert(System.Int32,Microsoft.Lync.Model.Room.RoomMessage)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.RoomMessageCollection.Remove(Microsoft.Lync.Model.Room.RoomMessage)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.RoomMessageCollection.RemoveAt(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.RoomMessageCollection.IsReadOnly">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.RoomMessageCollection.Count">
            <summary> 
            Returns number of items in the collection.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.RoomMessageCollection.Item(System.Int32)">
            <summary> 
            Given an index, returns an item in the collection.
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.SearchProviderStateChangedEventArgs">
            <summary>Represents data for the SearchProviderStateChanged event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.SearchProviderStateChangedEventArgs.NewStatus">
            <summary>Returns the search provide status.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.SearchProviderStateChangedEventArgs.Provider">
            <summary>Returns the type of a search provider whose status has changed.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.SearchResult">
            <summary>Represents a single result of a search that returns one or more results.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.SearchResult.HitHighlightSummary">
            <summary>Returns the hit highlight summary string for expert search.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.SearchResult.Result">
            <summary>Returns the search result which can be either a contact or a group.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.SearchResults">
            <summary>Represents all results of a search.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.SearchResults.AllResults">
            <summary>Returns all search results (contacts, groups or expert search results)</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.SearchResults.Contacts">
            <summary>Returns all retrieved contacts.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.SearchResults.Groups">
            <summary>Returns all retrieved groups.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.SearchResults.IsMoreAvailable">
            <summary>Returns a flag indicating whether more search results are available.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Self">
            <summary>Represents the local signed in user. Self is used to publish your information for other people to see.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Self.Finalize">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Self.CanSetPhone(Microsoft.Lync.Model.ContactEndpointType)">
            <summary>Returns true when the specific type can be set.</summary><returns>System.Boolean</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.Self.GetPhone(Microsoft.Lync.Model.ContactEndpointType)">
            <summary>Get the phone.</summary><returns>Microsoft.Lync.Model.Phone</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.Self.GetPublishableCustomAvailabilityStates(System.Int32)">
            <summary>Returns the array of CustomAvailabilityState objects based on the optional locale id.</summary><returns>IEnumerable{System.Object}</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.Self.BeginPublishContactInformation_private(System.Collections.Generic.IEnumerable{Microsoft.Lync.Model.PublishableContactInformationType},System.Collections.Generic.IEnumerable{System.Object},System.AsyncCallback,System.Object)">
            <summary> 
            Publish presence items be set for self.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Self.EndPublishContactInformation(System.IAsyncResult)">
            <summary> 
            Publish presence items be set for self.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Self.BeginRemovePhone(Microsoft.Lync.Model.ContactEndpointType,System.AsyncCallback,System.Object)">
            <summary> 
            Removes the phone.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Self.EndRemovePhone(System.IAsyncResult)">
            <summary> 
            Removes the phone.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Self.BeginSetPhone(Microsoft.Lync.Model.ContactEndpointType,System.String,System.Boolean,System.AsyncCallback,System.Object)">
            <summary> 
            Add the phone if not exist, update if exist.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Self.EndSetPhone(System.IAsyncResult)">
            <summary> 
            Add the phone if not exist, update if exist.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Self.GetAlertLevelForNotification(System.String,Microsoft.Lync.Model.NotificationTypes,Microsoft.Lync.Model.NotificationUrgencyType)">
            <summary> 
            Get level of alert for notification purpose
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Self.BeginPublishContactInformation(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.PublishableContactInformationType,System.Object}},System.AsyncCallback,System.Object)">
            <summary>
            Starts the contact information publication operation. Used to publish a local users
            contact information.
            </summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Self.PhonesChanged">
            <summary>Raised when phones changed.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Self.ResiliencyModeChanged">
            <summary>Raised when the resiliency mode is changed.</summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Self.AlertLevelChanged">
            <summary>Raised when the local user has changed their do-not-disturb level joined a meeting as a presenter and shared a resource such as a primary monitor.</summary><remarks>Use this event to determine if your application should show a new conversation invitation to the signed in user when a conversation invitation is received.  Conversation invitations should not be displayed when the signed in user is either in do-not-disturb mode or sharing a resource such as a display in a meeting, A meeting presenter's privacy may be violated if conversation invitations are shown on a shared display in a meeting.</remarks>
        </member>
        <member name="P:Microsoft.Lync.Model.Self.Contact">
            <summary>Gets the Contact object that represents the local user as self that can be used as a normal contact.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Self.IsInResiliencyMode">
            <summary>Returns true if the Lync client is in resiliency mode.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Self.Permissions">
            <summary>Gets the permission collection.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Self.PhotoDisplayed">
            <summary>Returns true if showing photos for contacts is allowed.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Self.TestCallEndpoint">
            <summary>Returns the Collaboration Endpoint that can be used for call testing.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.ShareableContentPropertyDictionary">
            <summary> 
            ShareableContentPropertyDictionary Class
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ShareableContentPropertyDictionary.GetKeyAt(System.Int32)">
            <summary> 
            Gets a key based on the index.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ShareableContentPropertyDictionary.GetValueAt(System.Int32)">
            <summary> 
            Gets a value based on the index.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.ShareableContentPropertyDictionary.Add(Microsoft.Lync.Model.Conversation.Sharing.ShareableContentProperty,System.Object)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ShareableContentPropertyDictionary.Add(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.Sharing.ShareableContentProperty,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ShareableContentPropertyDictionary.Clear">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ShareableContentPropertyDictionary.Contains(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.Sharing.ShareableContentProperty,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ShareableContentPropertyDictionary.ContainsKey(Microsoft.Lync.Model.Conversation.Sharing.ShareableContentProperty)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ShareableContentPropertyDictionary.CopyTo(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.Sharing.ShareableContentProperty,System.Object}[],System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ShareableContentPropertyDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ShareableContentPropertyDictionary.GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ShareableContentPropertyDictionary.Remove(Microsoft.Lync.Model.Conversation.Sharing.ShareableContentProperty)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ShareableContentPropertyDictionary.Remove(System.Collections.Generic.KeyValuePair{Microsoft.Lync.Model.Conversation.Sharing.ShareableContentProperty,System.Object})">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ShareableContentPropertyDictionary.TryGetValue(Microsoft.Lync.Model.Conversation.Sharing.ShareableContentProperty,System.Object@)">
            <summary> 
            Tries to find a value for the given key.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ShareableContentPropertyDictionary.IsReadOnly">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.ShareableContentPropertyDictionary.Count">
            <summary> 
            Returns number of items in the dictionary.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ShareableContentPropertyDictionary.Item(Microsoft.Lync.Model.Conversation.Sharing.ShareableContentProperty)">
            <summary> 
            Given a content propery type, returns the item related value.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ShareableContentPropertyDictionary.Keys">
            <summary> 
            Keys collection
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.ShareableContentPropertyDictionary.Values">
            <summary> 
            Values collection
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.SignInConfiguration">
            <summary>Configuration Class which handles the endpoint configuration, such as TransportMode, Internal Server and External Server addresses, sign in auto retry etc. This class object can be obtained by the property Configuration from the LyncClient object.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.SignInConfiguration.CanSet(Microsoft.Lync.Model.SignInConfigurationType)">
            <summary>returns true if the configuration type is settable.</summary><returns>System.Boolean</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.SignInConfiguration.ForgetMe(System.String)">
            <summary> 
            Deletes SignIn credentials and cached data
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.SignInConfiguration.ExternalServerUrl">
            <summary>Sets the Lync server that a user signs in to when outside of an organization intranet.</summary><remarks>This value is ignored when Mode is set to LyncClientConfigurationMode.Auto</remarks>
        </member>
        <member name="P:Microsoft.Lync.Model.SignInConfiguration.InternalServerUrl">
            <summary>Gets or sets the Lync front end server that a user signs in to.</summary><remarks>This value is ignored when Mode is set to LyncClientConfigurationMode.Auto</remarks>
        </member>
        <member name="P:Microsoft.Lync.Model.SignInConfiguration.IsPasswordSaved">
            <summary>Returns true if Lync client saves a user sign in password</summary><remarks>Although this is a read/write property, writing a value to this property has no effect on the client.</remarks>
        </member>
        <member name="P:Microsoft.Lync.Model.SignInConfiguration.Mode">
            <summary>Sets or clears server auto-discovery mode.</summary><remarks>When Mode is set to LyncClientConfigurationMode.Auto, Lync attempts to discover the Lync front end server to register on based on the supplied username SIP address.</remarks>
        </member>
        <member name="P:Microsoft.Lync.Model.SignInConfiguration.SignedInFromIntranet">
            <summary>Determines whether user signed in from intranet or not.</summary><remarks>If a user is not signed in to Lync, the property returns false.</remarks>
        </member>
        <member name="P:Microsoft.Lync.Model.SignInConfiguration.SignInAsAvailability">
            <summary>Set the availability value for sign in as presence.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.SignInConfiguration.SignInAutoRetry">
            <summary>Set the bool value indication that auto retry for sign in is set.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.SignInConfiguration.TransportMode">
            <summary>Sets the current server transport.</summary><remarks>This property cannot be set. Attempting to do so raises the NotSupportedException.</remarks>
        </member>
        <member name="P:Microsoft.Lync.Model.SignInConfiguration.UserName">
            <summary>Gets the Domain and User Name.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.SignInDelayedEventArgs">
            <summary>Used to get the estimated start delay in milliseconds, and the status code for the delay from the event SignInDelayed in the LyncClient class.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.SignInDelayedEventArgs.EstimatedStartDelay">
            <summary>Gets the estimated start delay.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.SignInDelayedEventArgs.StatusCode">
            <summary>Gets the status that caused the auto-recovery.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.UriChangedEventArgs">
            <summary>Represents data for the UriChanged event.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.UriChangedEventArgs.NewUri">
            <summary>Returns the new URI.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.UriChangedEventArgs.OldUri">
            <summary>Returns the old URI.</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Utilities">
            <summary>Represents a collection of utility functions.</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Utilities.Finalize">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Utilities.BeginAddToExternalContacts(Microsoft.Lync.Model.Contact,System.AsyncCallback,System.Object)">
            <summary> 
            Add the contact into external provider contacts
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Utilities.EndAddToExternalContacts(System.IAsyncResult)">
            <summary> 
            Add the contact into external provider contacts
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Utilities.CanInvoke(Microsoft.Lync.Model.UtilitiesAction,System.Object)">
            <summary>Returns true if the utility action can be invoked.</summary><returns>System.Boolean</returns>
        </member>
        <member name="M:Microsoft.Lync.Model.Utilities.BeginComposeEmail_private(System.Object,System.String,System.AsyncCallback,System.Object)">
            <summary> 
            Opens an email window in order to compose new email
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Utilities.EndComposeEmail(System.IAsyncResult)">
            <summary> 
            Opens an email window in order to compose new email
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Utilities.CreateNamedPropertyList">
            <summary> 
            Creates a new named property List.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Utilities.BeginScheduleMeeting_private(System.Object,System.String,System.AsyncCallback,System.Object)">
            <summary> 
            Schedule a meeting
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Utilities.EndScheduleMeeting(System.IAsyncResult)">
            <summary> 
            Schedule a meeting
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.Utilities.ShowPropertiesDialog(System.Object)">
            <summary>Show the property window of the contact or distribution group</summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Utilities.BeginComposeEmail(Microsoft.Lync.Model.Contact,System.String,System.AsyncCallback,System.Object)">
            <summary>
            Launches a new Outlook message window pre-populated with the contact email address and subject string passed
            in the first two arguments of this method.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Utilities.BeginComposeEmail(Microsoft.Lync.Model.Group.DistributionGroup,System.String,System.AsyncCallback,System.Object)">
            <summary>
            Launches a new Outlook message window pre-populated with the specified distribution group and subject string passed
            in the first two arguments of this method.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Utilities.BeginComposeEmail(System.Collections.Generic.IEnumerable{Microsoft.Lync.Model.Contact},System.Collections.Generic.IEnumerable{Microsoft.Lync.Model.Group.DistributionGroup},System.String,System.AsyncCallback,System.Object)">
            <summary>
            Launches a new Outlook message window pre-populated with the email addresses in the specified contact list and subject string passed
            in the first two arguments of this method.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Utilities.BeginScheduleMeeting(Microsoft.Lync.Model.Contact,System.String,System.AsyncCallback,System.Object)">
            <summary>
            Launches a new Outlook Meeting window pre-populated with the email address of the specified contact and meeting subject string passed
            in the first two arguments of this method.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Utilities.BeginScheduleMeeting(Microsoft.Lync.Model.Group.DistributionGroup,System.String,System.AsyncCallback,System.Object)">
            <summary>
            Launches a new Outlook Meeting window pre-populated with the specified distribution group and meeting subject string passed
            in the first two arguments of this method.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Utilities.BeginScheduleMeeting(System.Collections.Generic.IEnumerable{Microsoft.Lync.Model.Contact},System.Collections.Generic.IEnumerable{Microsoft.Lync.Model.Group.DistributionGroup},System.String,System.AsyncCallback,System.Object)">
            <summary>
            Launches a new Outlook Meeting window pre-populated with the email addresses in the specified contact list and meeting subject string passed
            in the first two arguments of this method.
            </summary>
        </member>
        <member name="E:Microsoft.Lync.Model.Utilities.ExchangeECPUrlChanged">
            <summary>Raised exchange ecp url changed.</summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Utilities.ExchangeECPUrl">
            <summary>Returns Exchange Control Panel (ECP) Url</summary>
        </member>
        <member name="T:Microsoft.Lync.Model.VideoChannelCollection">
            <summary> 
            VideoChannelCollection Class
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.VideoChannelCollection.Add(Microsoft.Lync.Model.Conversation.AudioVideo.VideoChannel)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.VideoChannelCollection.Clear">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.VideoChannelCollection.Contains(Microsoft.Lync.Model.Conversation.AudioVideo.VideoChannel)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.VideoChannelCollection.CopyTo(Microsoft.Lync.Model.Conversation.AudioVideo.VideoChannel[],System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.VideoChannelCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.VideoChannelCollection.GetEnumerator">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.VideoChannelCollection.IndexOf(Microsoft.Lync.Model.Conversation.AudioVideo.VideoChannel)">
            <summary> 
            Return the index of the video channel in the collection.
            </summary> 
        </member>
        <member name="M:Microsoft.Lync.Model.VideoChannelCollection.Insert(System.Int32,Microsoft.Lync.Model.Conversation.AudioVideo.VideoChannel)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.VideoChannelCollection.Remove(Microsoft.Lync.Model.Conversation.AudioVideo.VideoChannel)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.VideoChannelCollection.RemoveAt(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.VideoChannelCollection.IsReadOnly">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.VideoChannelCollection.Count">
            <summary> 
            Returns number of items in the collection.
            </summary> 
        </member>
        <member name="P:Microsoft.Lync.Model.VideoChannelCollection.Item(System.Int32)">
            <summary> 
            Given an index, returns an item in the collection.
            </summary> 
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.CBW__IApplicationSharingModalityCallback">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.CBWBase">
            
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.CBWBase.SignalCallback(Microsoft.Office.Uc.IAsynchronousOperation,System.String)">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Internal.CBWBase.DelegateCallback">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.CBW__IAudioChannelCallback">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.CBW__IAutomationCallback">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.CBW__IChannel2Callback">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.CBW__IChannelCallback">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.CBW__IConferenceSchedulerCallback">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.CBW__IContactCallback">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.CBW__IContactsAndGroupsCallback">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.CBW__IContentSharingModalityCallback">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.CBW__IConversation2Callback">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.CBW__IConversationCallback">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.CBW__IConversationHistoryCallback">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.CBW__IConversationWindowCallback">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.CBW__IDeviceManagerCallback">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.CBW__IGroupCallback">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.CBW__ILyncClientCallback">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.CBW__IModalityCallback">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.CBW__IParticipant2Callback">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.CBW__IParticipantCallback">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.CBW__IPreviousConversationsManagerCallback">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.CBW__IRoom2Callback">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.CBW__IRoomCallback">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.CBW__IRoomManagerCallback">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.CBW__IScheduledConferenceManagerCallback">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.CBW__ISelfCallback">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.CBW__IShareableContentCallback">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.CBW__IUtilitiesCallback">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.CBW__IVoiceMailCallback">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.CBW__IVoiceMailsManagerCallback">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.AccessEntryScope">
            <summary>Enumerates the access entry scopes.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.AccessEntryScope.User">
            <summary>A single user.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.AccessEntryScope.Domain">
            <summary>All users in a domain.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.AccessEntryScope.Enterprise">
            <summary>All users in an enterprise.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.AccessEntryScope.Federated">
            <summary>All federated users.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.AccessEntryScope.Public">
            <summary>All public users.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.AccessEntryScope.Everyone">
            <summary>All users.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.AccessEntryScope.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.AccessLevel">
            <summary>Enumerates the access entry levels.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.AccessLevel.Default">
            <summary>The access level all users have by default.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.AccessLevel.External">
            <summary>The access level of a public user.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.AccessLevel.Colleague">
            <summary>The access level of a user in the same enterprise.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.AccessLevel.Workgroup">
            <summary>The access level of users in the same workgroup.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.AccessLevel.Friends">
            <summary>The highest access level, assigned to friends.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.AccessLevel.Blocked">
            <summary>The access level assigned to users who have been blocked from accessing contact information.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.AccessLevel.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.AlertModeTypes">
            <summary>Enumerates the modes of alert events.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.AlertModeTypes.Visual">
            <summary>Visual can be used for notification.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.AlertModeTypes.Audio">
            <summary>Audio can be used for notification.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.AlertModeTypes.Any">
            <summary>Any type that can be used for notification.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.AlertModeTypes.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.AlertPrivacyType">
            <summary>A privacy level for the level of alert</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.AlertPrivacyType.Low">
            <summary>the privacy level is low</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.AlertPrivacyType.Neutral">
            <summary>the privacy level is neutral</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.AlertPrivacyType.High">
            <summary>the privacy level is high</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.AlertPrivacyType.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.ClientSettingsType">
            <summary>Enumerates the client access levels in use.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ClientSettingsType.Reserved1">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ClientSettingsType.EnableP2PVideo">
            <summary>True to enable p2p video</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ClientSettingsType.PublicCloudProviderInfo">
            <summary>returns a list of PublicCloudProviderInfo objects</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ClientSettingsType.Reserved2">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ClientSettingsType.Reserved3">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ClientSettingsType.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.ClientState">
            <summary>Enumerates the SignIn states of the Lync client.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ClientState.Uninitialized">
            <summary>Client is in uninitialized state</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ClientState.SignedOut">
            <summary>Client is in signed out state.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ClientState.SigningIn">
            <summary>Client is in signing in state.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ClientState.SignedIn">
            <summary>Client is in signed in state.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ClientState.SigningOut">
            <summary>Client is in signing out state.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ClientState.ShuttingDown">
            <summary>Client is in shutting down state.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ClientState.Initializing">
            <summary>Client is initializing.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ClientState.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.ContactAvailability">
            <summary>Defines known availability types.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactAvailability.None">
            <summary>A flag indicating that the contact state is unspecified. An application must not set this flag.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactAvailability.Free">
            <summary>A flag indicating that the contact is available.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactAvailability.FreeIdle">
            <summary>idle states are machine state and can not be published as user state.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactAvailability.Busy">
            <summary>A flag indicating that the contact is busy and inactive.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactAvailability.BusyIdle">
            <summary>idle states are machine state and can not be published as user state.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactAvailability.DoNotDisturb">
            <summary>A flag indicating that the contact does not want to be disturbed.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactAvailability.TemporarilyAway">
            <summary>A flag indicating that the contact is temporarily un-alertable.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactAvailability.Away">
            <summary>A flag indicating that the contact cannot be alerted.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactAvailability.Offline">
            <summary>A flag indicating that the contact is not available.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactAvailability.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.ContactCalendarState">
            <summary>Defines contact calendar states.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactCalendarState.Available">
            <summary>A contact is available.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactCalendarState.Tentative">
            <summary>A contact has a tentative appointment scheduled.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactCalendarState.OutsideWorkPeriod">
            <summary>A contact is not working.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactCalendarState.Busy">
            <summary>A contact is busy.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactCalendarState.OutOfOffice">
            <summary>A contact is out of office.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactCalendarState.NotAvailable">
            <summary>A contact's state is not available.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactCalendarState.Unknown">
            <summary>A contact's state is unknown.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactCalendarState.WorkingElsewhere">
            <summary>A contact's state is working elsewhere.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactCalendarState.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.ContactCapabilities">
            <summary>Defines Contact Capability types.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactCapabilities.ShowPresence">
            <summary>A contact presence state can be shown.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactCapabilities.CaptureInstantMessage">
            <summary>A contact can send instant messages.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactCapabilities.RenderInstantMessage">
            <summary>A contact can receive instant messages.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactCapabilities.CaptureAudio">
            <summary>A contact can send audio.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactCapabilities.RenderAudio">
            <summary>A contact can receive audio.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactCapabilities.CaptureVideo">
            <summary>A contact can send video.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactCapabilities.RenderVideo">
            <summary>A contact can receive video.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactCapabilities.CaptureAppShare">
            <summary>A contact can perform application sharing.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactCapabilities.RenderAppShare">
            <summary>A contact can view application sharing.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactCapabilities.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.ContactEndpointType">
            <summary>Enumerates collaboration endpoint types.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactEndpointType.WorkPhone">
            <summary>Contact's work phone number.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactEndpointType.MobilePhone">
            <summary>Contact's mobile phone number.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactEndpointType.HomePhone">
            <summary>Contact's home phone number.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactEndpointType.OtherPhone">
            <summary>Contact's other phone number.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactEndpointType.Lync">
            <summary> 
            Contact&apos;s SIP address.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.ContactEndpointType.VoiceMail">
            <summary>Contact's voice memo SIP address.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactEndpointType.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.ContactInformationType">
            <summary>Enumerates the contact information types.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.Availability">
            <summary>Contact availability. AvailabilityType enum.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.ActivityId">
            <summary>A token describing current contact availability. String.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.LocationName">
            <summary>A contact's location. String.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.TimeZone">
            <summary>Time zone. String.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.TimeZoneBias">
            <summary>The time zone bias is the difference, in minutes, between Coordinated Universal Time (UTC) and the end user’s current local time. All translations between UTC and local time are based on the following formula:
            UTC = local time + bias.</summary><remarks>The time zone bias is the difference, in minutes, between Coordinated Universal Time (UTC) and the end user’s current local time. All translations between UTC and local time are based on the following formula:
            UTC = local time + bias.
            </remarks>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.MeetingSubject">
            <summary>Meeting subject. String.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.MeetingLocation">
            <summary>Meeting location. String.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.Activity">
            <summary>A contact's current Activity(on the phone, in the meeting, available, ...).</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.CustomActivity">
            <summary>A collection of availability descriptions. Array of activity strings.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.IdleStartTime">
            <summary>Time when a contact became idle. DateTime.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.DisplayName">
            <summary>Display name of a contact. String.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.Reserved1">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.PrimaryEmailAddress">
            <summary>The SMTP e-mail address. String.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.EmailAddresses">
            <summary>An unordered collection of contact's addresses. Array of strings.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.Title">
            <summary>The contact's title. String.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.Company">
            <summary>The contact's company. String.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.Department">
            <summary>The contact's department. String.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.Office">
            <summary>The contact's office location. String.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.HomePageUrl">
            <summary>The contact's homepage Url</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.Photo">
            <summary>A contact's photo. Stream object.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.DefaultNote">
            <summary>The default note, shown if no other note is set. String.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.DefaultNoteType">
            <summary>Default note type (i.e. personal or out-of-office). DefaultNoteType enum.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.PersonalNote">
            <summary>A personal note. String.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.OutOfficeNote">
            <summary>An out-of-office note. String.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.SourceNetwork">
            <summary>The contact source network. SourceNetworkType enum.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.IconUrl">
            <summary>URL of the icon associated with a contact from a federated public network. String.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.IconStream">
            <summary>The icon associated with a contact from a federated public network. Stream object.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.ContactEndpoints">
            <summary>Collection of contact's collaboration endpoints (SIP or TEL endpoints). An array of ContactEndpoint objects.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.Reserved2">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.Reserved3">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.NextCalendarStateStartTime">
            <summary>Start time of the next calendar state. DateTime object.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.Reserved4">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.CapabilityString">
            <summary>Current contact capability. ('Voice Only', 'IM Only', ...). String.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.Capabilities">
            <summary>Combination of contact capabilities. ContactCapabilities enum.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.ContactType">
            <summary>Contact's type. ContactType enum.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.Description">
            <summary>Contact's description. String.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.Reserved5">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.FirstName">
            <summary>Contact's first name. String.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.LastName">
            <summary>Contact's last name. String.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.Reserved6">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.Reserved7">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.Reserved8">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.Reserved9">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.Reserved10">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.CapabilityDetails">
            <summary>Returns a collection of PresenceCapability objects.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.DefaultNotePublishedTime">
            <summary>The published time for default note</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.CurrentCalendarState">
            <summary>Contact's current calendar state (Free, Busy, Out of office,...). ContactCalendarState enum</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.NextCalendarState">
            <summary>Contact's next calendar state (Free, Busy, Out of office,...). ContactCalendarState enum</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.AttributionString">
            <summary>Contact's attribution string</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.InstantMessageAddresses">
            <summary>A collection of contact's Instant Messaging addresses. Array of strings.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.IsOutOfOffice">
            <summary> 
            returns none zero if the contact is out of office.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.Reserved11">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.Reserved12">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.Reserved13">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.Reserved14">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.Reserved15">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactInformationType.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.ContactSetting">
            <summary>Represents the settings that can be applied locally to a contact.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactSetting.Tagged">
            <summary>Returns true if a notification is shown when the presence of a tagged contact is changed.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactSetting.AccessLevel">
            <summary>Returns the privacy relationship of a contact expressed as an AccessLevel enumerator.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactSetting.ExchangeServiceEntryId">
            <summary>Read-only, Entry ID of an Exchange contact if the contact is an Exchange contact. String.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactSetting.Source">
            <summary>Read-only, Shows the contact source. ContactSourceTypes enum.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactSetting.DefaultContactEndpoint">
            <summary>The default collaboration endpoint (SIP or TEL URI) for this contact.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactSetting.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.ContactSourceTypes">
            <summary>Enumerates the contact provider type.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactSourceTypes.Unknown">
            <summary>The contact source is unknown.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactSourceTypes.GlobalAddressList">
            <summary>The contact source is the Global Address List.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactSourceTypes.WindowsAddressBook">
            <summary>The contact source is the Windows Address Book.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactSourceTypes.ExchangeService">
            <summary>The contact source is the Exchange Service.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactSourceTypes.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.ContactSubscriptionRefreshRate">
            <summary>Enumerates contact subscription freshness.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactSubscriptionRefreshRate.None">
            <summary>Shall not be used by the caller, returned if there is no subscription for the contact data.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactSubscriptionRefreshRate.Low">
            <summary>The caller needs low temporal accuracy of contact data.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactSubscriptionRefreshRate.High">
            <summary>The caller needs high temporal accuracy of contact data.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactSubscriptionRefreshRate.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.ContactType">
            <summary>Enumerates the contact types.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactType.Unknown">
            <summary>Contact type is unknown.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactType.Person">
            <summary>A regular contact.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactType.Huntgroup">
            <summary>A hunt group.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactType.AutoAttendant">
            <summary>An auto attendant.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactType.AutomatedBot">
            <summary>An automated agent (a bot).</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.ContactType.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.CredentialRequestedType">
            <summary>Enumerates password types.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.CredentialRequestedType.SignIn">
            <summary>Credential request for sign in.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.CredentialRequestedType.GlobalAddressListImport">
            <summary>Credential request for Gal import.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.CredentialRequestedType.DGExpansion">
            <summary>Credential request for DG expansion.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.CredentialRequestedType.CalendarData">
            <summary>Credential request for calendar data access.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.CredentialRequestedType.AutoUpdate">
            <summary>Credential request for auto data update.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.CredentialRequestedType.WebSearch">
            <summary>Credential request for web search.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.CredentialRequestedType.PhotoProvider">
            <summary>Credential request for getting photo.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.CredentialRequestedType.SharePointManagement">
            <summary>Credential request for SharePoint management.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.CredentialRequestedType.CertificateProvider">
            <summary>Credential request for certificate provider.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.CredentialRequestedType.LocationProvider">
            <summary>Credential request for location provider.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.CredentialRequestedType.ResponseGroupServer">
            <summary>Credential request for response group server.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.CredentialRequestedType.AnonymousSignIn">
            <summary>Credential request for anonymous sign in.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.CredentialRequestedType.BitsDownloadManager">
            <summary>Credential request for bits download manager.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.CredentialRequestedType.SipAuthBroker">
            <summary>Credential request for SIP Authorization Broker.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.CredentialRequestedType.LyncAutodiscover">
            <summary>Credential request for Lync Autodiscover service</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.CredentialRequestedType.Unknown">
            <summary></summary>
        </member>
        <member name="F:Microsoft.Lync.Model.CredentialRequestedType.QueryConferenceInfo">
            <summary> 
            Credential request for query conference information.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.CredentialRequestedType.GCFileTransfer">
            <summary> 
            Credential request for group chat file transfer web service.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.CredentialRequestedType.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.CredentialRequestResult">
            <summary>Enumerates the success state results of a credential.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.CredentialRequestResult.Unknown">
            <summary></summary>
        </member>
        <member name="F:Microsoft.Lync.Model.CredentialRequestResult.Success">
            <summary>The credentials were accepted.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.CredentialRequestResult.Failure">
            <summary>The credentials were not accepted.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.CredentialRequestResult.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.DefaultNoteType">
            <summary>Defines default note type.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.DefaultNoteType.Unknown">
            <summary>Unknown default note.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.DefaultNoteType.Personal">
            <summary>Personal default note.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.DefaultNoteType.OutOfOffice">
            <summary>Out-of-office default note.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.DefaultNoteType.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.LyncClientCapabilityTypes">
            <summary>Enumerates the capabilities that for preferred client.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.LyncClientCapabilityTypes.UserActivity">
            <summary>Indicates that the endpoint is the most active one.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.LyncClientCapabilityTypes.Text">
            <summary>Indicates that the endpoint supports the Instant Messaging.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.LyncClientCapabilityTypes.GifInk">
            <summary>Indicates that the endpoint supports the GifInk formats in IM.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.LyncClientCapabilityTypes.IsfInk">
            <summary>Indicates that the endpoint supports the Ink serialized formats in IM.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.LyncClientCapabilityTypes.Audio">
            <summary>Indicates that the endpoint supports voice.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.LyncClientCapabilityTypes.Video">
            <summary>Indicates that the endpoint supports video.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.LyncClientCapabilityTypes.Cccp">
            <summary>Indicates that the endpoint supports the Centralized Conferencing Control Protocol.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.LyncClientCapabilityTypes.Calendar">
            <summary>Indicates that the endpoint supports publishing the calendar data.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.LyncClientCapabilityTypes.RemoteCallControl">
            <summary>Indicates that the endpoint supports the GifInk formats in the Instant Messaging.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.LyncClientCapabilityTypes.Breakthrough">
            <summary>Indicates that the endpoint supports the remote call control.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.LyncClientCapabilityTypes.ApplicationSharing">
            <summary>Indicates that the endpoint supports application sharing.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.LyncClientCapabilityTypes.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.LyncClientConfigurationMode">
            <summary>Enumerates Lync Client configuration modes.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.LyncClientConfigurationMode.Auto">
            <summary>The client configuration mode is auto.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.LyncClientConfigurationMode.Manual">
            <summary>The client configuration mode is manual.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.LyncClientConfigurationMode.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.LyncClientNotification">
            <summary>Enumerates the Lync Client notification type</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.LyncClientNotification.MapiStatus">
            <summary>Notify for Mapi status event.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.LyncClientNotification.Autodiscovery">
            <summary>Notify for auto discovery event.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.LyncClientNotification.CalendarQueryStatus">
            <summary>Notify for calendar query status event.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.LyncClientNotification.OutlookContactProviderStatus">
            <summary>Notify for Outlook contact provider status event.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.LyncClientNotification.WabContactProviderStatus">
            <summary>Notify for Windows address book contact provider status event.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.LyncClientNotification.FolderManagerStatus">
            <summary>Notify for folder manager status event.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.LyncClientNotification.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.NotificationTypes">
            <summary>Enumerates the notification types that are related to level of alerts.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.NotificationTypes.Unknown">
            <summary>Unknown or other notification types</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.NotificationTypes.Audio">
            <summary>Type of notification for incoming voice conversation</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.NotificationTypes.Video">
            <summary>Type of notification for incoming video conversation</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.NotificationTypes.InstantMessage">
            <summary>Type of notification for incoming instant messaging</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.NotificationTypes.Sharing">
            <summary>Type of notification for incoming app sharing request</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.NotificationTypes.FileTransfer">
            <summary>Type of notification for incoming file transfer request</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.NotificationTypes.All">
            <summary>All notification types</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.NotificationTypes.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.NotificationUrgencyType">
            <summary>Enumerates the urgency levels for the notification.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.NotificationUrgencyType.Low">
            <summary>the urgency of the notification is low</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.NotificationUrgencyType.Neutral">
            <summary>the urgency of the notification is neutral</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.NotificationUrgencyType.High">
            <summary>the urgency of the notification is high</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.NotificationUrgencyType.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.OIInterface">
            <summary> 
            Enumerates the interfaces that can be returned in IUCOfficeIntegration.GetInterface.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.OIInterface.LyncClient">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.OIInterface.Automation">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.OIInterface.InteropHelper">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.OIInterface.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.OrganizationStructureTypes">
            <summary>Enumerates the organizational roles of people in the contact's organization.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.OrganizationStructureTypes.Managers">
            <summary>Contact's manager chain.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.OrganizationStructureTypes.Peers">
            <summary>Contact's peers.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.OrganizationStructureTypes.DirectReports">
            <summary>Contact's direct reports.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.OrganizationStructureTypes.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.PhotoSetting">
            <summary>Enumerates the types for Display AD Photo.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.PhotoSetting.Display">
            <summary>Display photo from Active Directory.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.PhotoSetting.DoNotDisplay">
            <summary>Do not display photo from Active Directory.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.PhotoSetting.Default">
            <summary>User default setting from administrator to determine if displayed photo is from Active Directory.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.PhotoSetting.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.PresenceCapabilityType">
            <summary>Defines the published communications capabilities of a contact.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.PresenceCapabilityType.InstantMessaging">
            <summary>Instant messaging capability.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.PresenceCapabilityType.Audio">
            <summary>Audio call capability.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.PresenceCapabilityType.Video">
            <summary>Video call capability.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.PresenceCapabilityType.AppShare">
            <summary>Application sharing capability.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.PresenceCapabilityType.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.PublishableContactInformationType">
            <summary>Enumerates the presence items for update.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.PublishableContactInformationType.Availability">
            <summary>Availability, LONG</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.PublishableContactInformationType.ActivityId">
            <summary>Activity Id, string</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.PublishableContactInformationType.CustomActivityId">
            <summary>Custom Activity Id, LONG</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.PublishableContactInformationType.LocationName">
            <summary>Location Name, string</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.PublishableContactInformationType.PersonalNote">
            <summary>Personal Note, string</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.PublishableContactInformationType.DisplayPhoto">
            <summary>Display AD Photo, enum PhotoSetting</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.PublishableContactInformationType.PhotoUrl">
            <summary>Photo Url, string</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.PublishableContactInformationType.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.RedirectionTypes">
            <summary>Enumerates the various types of redirection.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.RedirectionTypes.None">
            <summary>No redirection.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.RedirectionTypes.ReplyWithInstantMessage">
            <summary>Redirect by replying with instant message.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.RedirectionTypes.ReplyWithAudioVideo">
            <summary>Redirect by replying with audio or audio/video.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.RedirectionTypes.ForwardToVoiceMail">
            <summary>Redirect to voicemail.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.RedirectionTypes.ForwardToContact">
            <summary>Redirect to other contact.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.RedirectionTypes.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.RepresentationType">
            <summary>Enumerates the representation type of the representation info.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.RepresentationType.Delegate">
            <summary>Delegate representation.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.RepresentationType.Team">
            <summary>Team representation.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.RepresentationType.AutomaticCallDistributor">
            <summary>The representation is an automatic call distributor.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.RepresentationType.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.SearchFields">
            <summary>Enumerates search filter properties.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchFields.FirstName">
            <summary>Search against first name if indexed.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchFields.LastName">
            <summary>Search against last name if indexed.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchFields.DisplayName">
            <summary>Search against display name if indexed, several forms of display name may or may not supported by search provider</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchFields.Company">
            <summary>Search against company name if indexed.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchFields.PrimaryEmailAddress">
            <summary>Search against primary email address if indexed.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchFields.EmailAddresses">
            <summary>Search against all email addresses if indexed.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchFields.Alias">
            <summary>Search against alias if indexed.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchFields.PhoneNumbers">
            <summary>Search against phone numbers if indexed.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchFields.PhoneExtention">
            <summary>Search against phone numbers if indexed.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchFields.AllFields">
            <summary>Search against any indexed field.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchFields.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.SearchOptions">
            <summary>Enumerates search options.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchOptions.Default">
            <summary>The default option used for search.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchOptions.MatchWholeWord">
            <summary>Match the whole word instead of the prefix match.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchOptions.ContactsOnly">
            <summary>Searching contacts only, ignore group matches.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchOptions.IncludeContactsWithoutSipOrTelUri">
            <summary>Allow contacts without SIP, email, or TEL addresses in the search results.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchOptions.Reserved1">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchOptions.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.SearchProviders">
            <summary>Enumerates the search provider types.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchProviders.Default">
            <summary>Searches in the default location Obsolete.</summary><remarks>This search provider is deprecated in all releases after Lync 2010.</remarks>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchProviders.ExchangeService">
            <summary>Searches in the Exchange Service contacts. Obsolete.</summary><remarks>This search provider is deprecated in all releases after Lync 2010.</remarks>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchProviders.GlobalAddressList">
            <summary>Searches in the Global Address List. Obsolete.</summary><remarks>This search provider is deprecated in all releases after Lync 2010.</remarks>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchProviders.WindowsAddressBook">
            <summary>Searches in the Windows Address Book. Obsolete.</summary><remarks>This search provider is deprecated in all releases after Lync 2010.</remarks>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchProviders.OtherContacts">
            <summary>Searches for Contacts that are neither in custom groups nor in other address lists. Obsolete.</summary><remarks>This search provider is deprecated in all releases after Lync 2010.</remarks>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchProviders.PersonalContacts">
            <summary>Searches in the Windows Address Book and in the Exchange Service contacts. Obsolete</summary><remarks>This search provider is deprecated in all releases after Lync 2010.</remarks>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchProviders.Expert">
            <summary>Expert search by keywords.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchProviders.Reserved1">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchProviders.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.SearchProviderStatusType">
            <summary>Enumerates search provider statuses.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchProviderStatusType.SyncNotStarted">
            <summary>Search provider synchronization has not started.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchProviderStatusType.SyncInProgress">
            <summary>Search provider synchronization is in progress.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchProviderStatusType.SyncSucceeded">
            <summary>Search provider synchronization has completed successfully.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchProviderStatusType.SyncSucceededForInternalOnly">
            <summary> 
            Search provider service from internal is available.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.SearchProviderStatusType.SyncSucceededForExternalOnly">
            <summary> 
            Search provider service from external is available.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.SearchProviderStatusType.OtherFailure">
            <summary>Search provider synchronization failed for an unknown reason.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchProviderStatusType.LocalDatabaseFailure">
            <summary>Search provider synchronization failed due to local database failure.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchProviderStatusType.FileNotFound">
            <summary>Search provider synchronization failed due to file not found.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchProviderStatusType.FileCorrupted">
            <summary>Search provider synchronization failed due to corrupted file.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchProviderStatusType.CredentialsNotEntered">
            <summary>User has not provided credentials to the challenging search provider.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchProviderStatusType.NotConfigured">
            <summary>No search provider has been configured.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchProviderStatusType.InitializationFailed">
            <summary>Failed to initialize search provider synchronization.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchProviderStatusType.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.SignInConfigurationType">
            <summary>Enumerates sign in configuration setting types.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SignInConfigurationType.Mode">
            <summary>A flag indicating whether the configuration mode is settable.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SignInConfigurationType.Transport">
            <summary>A flag indicating whether the transport mode is settable.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SignInConfigurationType.InternalServer">
            <summary>A flag indicating whether the server internal address is settable.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SignInConfigurationType.ExternalServer">
            <summary>A flag indicating whether the server external address is settable.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SignInConfigurationType.SavePassword">
            <summary>A flag indicating whether the password can be saved.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SignInConfigurationType.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.SoftMuteChangeInitiator">
            <summary>Enumerates the possible reasons for the most recent SoftMute state change.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SoftMuteChangeInitiator.Local">
            <summary>Initiated by local user action.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SoftMuteChangeInitiator.Remote">
            <summary>Initiated by the conference leader or paired deskphone.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SoftMuteChangeInitiator.Join">
            <summary>Joined the conference muted.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SoftMuteChangeInitiator.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.SourceNetworkType">
            <summary>Enumerates source network (network of origin) of a contact.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SourceNetworkType.Unknown">
            <summary>An unknown source network.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SourceNetworkType.Enterprise">
            <summary>A contact belongs to enterprise.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SourceNetworkType.FederatedEnterprise">
            <summary>A contact belongs to a federated enterprise.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SourceNetworkType.FederatedPublic">
            <summary>A contact belongs to a federated public network (like Hotmail, Yahoo, or AOL</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SourceNetworkType.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.SupportedFeatures">
            <summary>Enumerates the supported features.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SupportedFeatures.None">
            <summary>No feature is supported.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SupportedFeatures.DelegatorContexts">
            <summary>The delegator contexts feature is supported.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SupportedFeatures.InstantMessageGif">
            <summary>The Gif format in IM is supported.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SupportedFeatures.InstantMessageInk">
            <summary>The Ink serialized Format in IM is supported.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SupportedFeatures.InstantMessageRtf">
            <summary>The Rtf format in IM is supported.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SupportedFeatures.InstantMessageHtml">
            <summary>The Html format in IM is supported.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SupportedFeatures.PhonePairing">
            <summary>The desk phone pairing feature is supported.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SupportedFeatures.ApplicationSharing">
            <summary>The application sharing feature is supported.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SupportedFeatures.LegacyApplicationSharing">
            <summary>The legacy application sharing feature is supported.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SupportedFeatures.ApplicationInvite">
            <summary>The application invite feature is supported.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SupportedFeatures.Audio">
            <summary>The Voice over Internet Protocol feature is supported.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SupportedFeatures.FileTransfer">
            <summary>The file transfer feature in IM is supported.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SupportedFeatures.Video">
            <summary>The video feature is supported.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SupportedFeatures.InstantMessage">
            <summary>The Instant Messaging feature is supported.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SupportedFeatures.Reserved1">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SupportedFeatures.Reserved2">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SupportedFeatures.Reserved3">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SupportedFeatures.Reserved4">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SupportedFeatures.Reserved5">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SupportedFeatures.Reserved6">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SupportedFeatures.Reserved7">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SupportedFeatures.Reserved8">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SupportedFeatures.Reserved9">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SupportedFeatures.Reserved10">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SupportedFeatures.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.TransportMode">
            <summary>Enumerates the supported transport modes.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.TransportMode.TcpTransport">
            <summary>Use TCP for signaling information and instant messaging (unsecure).</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.TransportMode.TlsTransport">
            <summary>Use TLS for signaling information and instant messaging (secure).</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.TransportMode.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.UnifiedCommunicationType">
            <summary>Enumerates the Unified Communication types.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.UnifiedCommunicationType.Unknown">
            <summary>It is unknown whether a contact is enabled or disabled for Unified Communication.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.UnifiedCommunicationType.Enabled">
            <summary>A contact is enabled for Unified Communication.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.UnifiedCommunicationType.NotEnabled">
            <summary>A contact is disabled for Unified Communication.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.UnifiedCommunicationType.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.UtilitiesAction">
            <summary>Enumerates the actions on collaboration utilities.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.UtilitiesAction.ShowPropertiesDialog">
            <summary>Show the properties dialog for the specified context.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.UtilitiesAction.AddToExternalContacts">
            <summary>Add a contact to the list of external contacts.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.UtilitiesAction.Reserved1">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.UtilitiesAction.ComposeEmail">
            <summary>Opens Outlook email form to compose an email to be sent to a specified recipient with a specified subject</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.UtilitiesAction.ScheduleMeeting">
            <summary>Opens Outlook meeting schedule form to schedule a meeting.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.UtilitiesAction.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.ConferenceAccessType">
            <summary>Enumerates the various access levels of a conference.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConferenceAccessType.Unknown">
            <summary>Conference access level is unknown.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConferenceAccessType.Open">
            <summary>Any user who can be authenticated can join the conference.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConferenceAccessType.Closed">
            <summary>Only users specifically invited by the conference organizer may join the conference.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConferenceAccessType.Anonymous">
            <summary>An anonymous user (without an enterprise identity) is allowed to join the conference</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConferenceAccessType.Locked">
            <summary>Only the presenter can join the conference.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConferenceAccessType.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.ConferenceDisclaimerState">
            <summary>Enumerates the various states of the disclaimer response property.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConferenceDisclaimerState.None">
            <summary>No response to the disclaimer.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConferenceDisclaimerState.Rejected">
            <summary>The disclaimer has been rejected.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConferenceDisclaimerState.Accepted">
            <summary>The conference disclaimer has been accepted.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConferenceDisclaimerState.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.ConferenceEscalationProgress">
            <summary>Enumerates the progressive stages of a conversation's escalation to conference.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConferenceEscalationProgress.NotStarted">
            <summary>The conference has not started yet.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConferenceEscalationProgress.SchedulingConference">
            <summary>The conference is being scheduled.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConferenceEscalationProgress.ConnectingToConference">
            <summary>Connecting to the conference.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConferenceEscalationProgress.ConnectedToLobby">
            <summary>Connected to the conference lobby.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConferenceEscalationProgress.JoiningLocalMedia">
            <summary>Joining the conference media.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConferenceEscalationProgress.WaitingForPair">
            <summary>The conference escalation is in waiting for the paired device state.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConferenceEscalationProgress.WaitingForPeer">
            <summary>The conference escalation is in waiting for the peer state.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConferenceEscalationProgress.Completed">
            <summary>Conference escalation completed successfully.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConferenceEscalationProgress.Failed">
            <summary>Failed to join the conference.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConferenceEscalationProgress.AwaitingDisclaimerResponse">
            <summary>Waiting for the disclaimer response.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConferenceEscalationProgress.AwaitingJoinDialogResponse">
            <summary>Waiting for the join audio dialog response.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConferenceEscalationProgress.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.ContextType">
            <summary>Enumerates the conversation context type.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ContextType.ApplicationId">
            <summary>A string GUID representing the registered application ID.BSTR</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ContextType.ApplicationData">
            <summary>A string data to be consumed by the application.BSTR</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ContextType.HyperLink">
            <summary>A simple link to be displayed in the conversation window.BSTR</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ContextType.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.ConversationAcceptanceState">
            <summary>Enumerates the conversation acceptance states.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationAcceptanceState.None">
            <summary>The conversation acceptance state is unknown.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationAcceptanceState.Accepted">
            <summary>The conversation was accepted.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationAcceptanceState.Rejected">
            <summary>The conversation was rejected.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationAcceptanceState.Missed">
            <summary>The conversation was missed.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationAcceptanceState.Deflected">
            <summary>The conversation was deflected.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationAcceptanceState.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.ConversationAction">
            <summary>Enumerates the conversation actions.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationAction.Merge">
            <summary>Merge the conversation to another one.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationAction.Park">
            <summary>Park the conversation.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationAction.AddParticipant">
            <summary>Add a participant to the conversation.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationAction.RemoveParticipant">
            <summary>Remove a participant from the conversation.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationAction.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.ConversationImportance">
            <summary>Enumerates the conversation importance levels.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationImportance.Low">
            <summary>The conversation has low importance.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationImportance.Normal">
            <summary>The conversation has normal importance.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationImportance.High">
            <summary>The conversation has high importance.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationImportance.Emergency">
            <summary>The conversation has emergency importance.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationImportance.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.ConversationProperty">
            <summary>Enumerates the conversation properties.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.Id">
            <summary>The conversation identifier.</summary><remarks>The Id can change in the life of a Conversation instance. In consequence, this property cannot be relied on to uniquely identify a conversation.</remarks>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.Subject">
            <summary>The conversation subject.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.Importance">
            <summary>The conversation importance level.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.TransferredBy">
            <summary>If this conversation originated through a transfer, then ID of the conversation that originated transfer.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.Replaced">
            <summary>If this conversation result of consultative transfer replacement, then Id of the conversation it replaces.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.ConferencingUri">
            <summary>If this conversation is/has ever been in conference, the conference focus uri it is connected/will reconnect to.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.RepresentedBy">
            <summary>If this conversation is effected by boss/admin retargeting, this provides the representation details.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.ConferenceInviterRepresentationInfo">
            <summary>If this conference conversation is effected by boss/admin retargeting, this provides the representation details.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.FollowUp">
            <summary>The conversation follow up flag.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.Reserved1">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.ConferenceAcceptingParticipant">
            <summary>If this conference conversation is answered by another party, this provides the party's contact object.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.Reserved2">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.AcceptanceState">
            <summary>The acceptance state (from local point of view) of this conversation.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.IsUsbConversation">
            <summary>Indicates if the conversation is a USB conversation</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.AutoTerminateOnIdle">
            <summary>Indicates whether the conversation will implicitly terminate when last modality session becomes inactive.</summary><remarks>Setting this property to false allows you to reuse a Conversation instance to continue a conversation using the participants originally in the conversation. You call into Connect() on the modality previously assigned to the conversation or you can add an additional modality and connect. When AutoTerminateOnIdle is set to false, you must call into Conversation.End() to terminate a conversation.</remarks>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.ConferenceEscalationProgress">
            <summary>Indicates progression of escalation to conference.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.ConferenceEscalationResult">
            <summary>Indicates result code of escalation to conference.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.ConferencingInvitedModes">
            <summary>Mask with bits set corresponding to invited types.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.Inviter">
            <summary>Contact class instance for the person that sent the invitation to the conversation.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.ConferencingLocked">
            <summary>Flag corresponding to whether conference is currently locked.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.ConferencingFirstInstantMessage">
            <summary>Initial instant message that was sent with the conference invitation, formatted as plain text.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.ConferenceAccessInformation">
            <summary>Conference access information that details accessibility mechanisms for this conference. (ConferenceAccessInfo).</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.ConferencingAccessType">
            <summary>Indicates the current access type of the conference.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.CallParkOrbit">
            <summary>The orbit that is used to retrieve a parked call.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.ConferenceDisclaimer">
            <summary>Disclaimer title and body.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.ConferenceDisclaimerAccepted">
            <summary>Set to true if the user has accepted the conference disclaimer.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.ConferenceTerminateOnLeave">
            <summary>Terminate conference when terminating the conversation.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.NumberOfParticipantsRecording">
            <summary>Number of participants recording this conversation.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.ConferenceJoinDialogCompleted">
            <summary>Application should set this to true after selecting audio device during conference join.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.LastActivityTimeStamp">
            <summary>The time stamp of the last conversation activity.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.Reserved3">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.Reserved4">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.Reserved5">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.Reserved6">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.Reserved7">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.Reserved18">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.Reserved19">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.ConferenceVideoHardMute">
            <summary> 
            Conference Video Hard Mute
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.ConferenceInstantMessageMute">
            <summary> 
            Conference Instant Message Mute
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.Reserved8">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.Reserved9">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.Reserved10">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.Reserved11">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.Reserved12">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.Reserved13">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.Reserved14">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.Reserved15">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.Reserved16">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.Reserved17">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationProperty.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.ConversationState">
            <summary>Enumerates the conversation states.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationState.Inactive">
            <summary>The conversation is inactive.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationState.Active">
            <summary>The conversation is active.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationState.Parked">
            <summary>The conversation is parked.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationState.Terminated">
            <summary>The conversation is terminated.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationState.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.ConversationStateChangeProperty">
            <summary>Enumerates the conversation state change properties.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationStateChangeProperty.Reason">
            <summary>Provides the reason that a call was unparked.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationStateChangeProperty.Target">
            <summary>The URI of the user who took the parked call.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ConversationStateChangeProperty.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.InstantMessageCapabilities">
            <summary>Enumerates the InstantMessage Capabilities</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.InstantMessageCapabilities.CanRenderIsf">
            <summary>Supports ISF format.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.InstantMessageCapabilities.CanRenderGif">
            <summary>Supports GIF format.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.InstantMessageCapabilities.CanRenderRtf">
            <summary>Supports RTF format.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.InstantMessageCapabilities.SupportMime">
            <summary>Supports MIME format.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.InstantMessageCapabilities.CanRenderHtml">
            <summary>Supports hypertext markup language (HTML) format.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.InstantMessageCapabilities.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.InstantMessageContentType">
            <summary>Enumerates the InstantMessage content types</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.InstantMessageContentType.PlainText">
            <summary>IM content is in Plain text format .</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.InstantMessageContentType.Html">
            <summary>IM content is in Html format.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.InstantMessageContentType.RichText">
            <summary>IM content is in Rich text format .</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.InstantMessageContentType.Gif">
            <summary>IM content is in Gif (Graphics Interchange Format) format.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.InstantMessageContentType.Ink">
            <summary>IM content is in ink format.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.InstantMessageContentType.Unknown">
            <summary>IM content format is unknown.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.InstantMessageContentType.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.ModalityAction">
            <summary>Enumerates the modality actions.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityAction.Connect">
            <summary>Connect to the conversation with a modality.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityAction.Disconnect">
            <summary>Disconnect a modality from the conversation.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityAction.SetProperty">
            <summary>Set a conversation modality property.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityAction.Hold">
            <summary>Put a conversation modality on hold.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityAction.Retrieve">
            <summary>Retrieve a conversation modality.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityAction.Forward">
            <summary>Forward a conversation modality.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityAction.RemoteTransfer">
            <summary>Transfer a conversation modality.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityAction.ConsultAndTransfer">
            <summary>Transfer a conversation modality into another existing conversation.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityAction.SendInstantMessage">
            <summary>Send an instant message.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityAction.SetIsTyping">
            <summary>Set the IM composing flag. This indicates that an IM is being typed.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityAction.SetAudioEndpoint">
            <summary>Set the local endpoint for audio.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityAction.Accept">
            <summary>Accept the modality invitation.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityAction.Reject">
            <summary>Reject the modality invitation.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityAction.LocalTransfer">
            <summary>Transfer the local participant to another endpoint.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityAction.RequestSharingControl">
            <summary>Request control of shared resources.</summary><remarks>This action is called on the application sharing modality of the local participant.</remarks>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityAction.ReleaseSharingControl">
            <summary>Release control of shared resources.</summary><remarks>This action is called on the application sharing modality of the participant that is releasing sharing control. You can only release the control of a resource that the local resource is controlling.  </remarks>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityAction.GrantSharingControl">
            <summary>Grant control of shared resources to another participant.</summary><remarks>This action is called on the application sharing modality of the participant whose request for control is granted.</remarks>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityAction.RevokeSharingControl">
            <summary>Revoke control of shared resources.</summary><remarks>This action is called on the application sharing modality of the participant whose request for control is revoked.</remarks>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityAction.AcceptSharingControlRequest">
            <summary>Accept the request to grant sharing control.</summary><remarks>This action is called on the application sharing modality of the participant whose request for control is accepted.</remarks>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityAction.DeclineSharingControlRequest">
            <summary>Decline the request to grant sharing control.</summary><remarks>This action is called on the application sharing modality of the participant whose request for control is declined.</remarks>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityAction.CreateShareablePowerPointContent">
            <summary>Create shareable PowerPoint content.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityAction.CreateShareableWhiteboardContent">
            <summary>Create shareable Whiteboard content.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityAction.CreateShareableNativeFileOnlyContent">
            <summary>Create shareable native file content.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityAction.Reserved1">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityAction.Reserved2">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityAction.CreateShareableQnaContent">
            <summary> 
            Create Q&amp;A content.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityAction.CreateShareableWebContent">
            <summary> 
            Create Web content.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityAction.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.ModalityActionProperty">
            <summary>Enumerates the modality control action properties.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityActionProperty.TransferContextFailures">
            <summary>String array of failed conversation context transfers (by conversation context id).</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityActionProperty.ConnectContextFailures">
            <summary>String array of failed conversation contexts sent with connect (by conversation context id).</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityActionProperty.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.ModalityDisconnectReason">
            <summary>Enumerates the modality disconnect reasons.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityDisconnectReason.None">
            <summary>Disconnect to leave currently connected modality.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityDisconnectReason.Timeout">
            <summary>Disconnect with timeout for incoming p2p.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityDisconnectReason.Busy">
            <summary>Disconnect with busy for incoming p2p.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityDisconnectReason.NotAcceptableHere">
            <summary>Disconnect with not acceptable here.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityDisconnectReason.Decline">
            <summary>Disconnect to decline incoming p2p allowing redirection to voicemail.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityDisconnectReason.DeclineEverywhere">
            <summary>Disconnect to decline incoming p2p everywhere.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityDisconnectReason.ReplyOther">
            <summary>Disconnect to decline incoming P2P and reply with different modality.</summary><remarks>If this disconnect reason is selected for an incoming AVModality call then the parent Conversation is disconnected and removed. The ConversationManager.ConversationRemoved event is raised.</remarks>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityDisconnectReason.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.ModalityProperty">
            <summary>Enumerates the modality properties.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.InstantMessageModalitySharedCapabilities">
            <summary>The shared capabilities of the IM modality.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.InstantMessageModalityInviteMessage">
            <summary>The first message that is sent with the IM invite.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.InstantMessageModalityNoAutoAccept">
            <summary>Do not auto-accept the IM invitation.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.InstantMessageModalityInviteForked">
            <summary>The IM invitation was forked to more than one endpoint.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityAudioRenderVolume">
            <summary>The incoming audio volume level.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityAudioRenderMute">
            <summary>The incoming audio volume is muted</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityAudioRenderIntensity">
            <summary>The incoming audio intensity level.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityAudioRenderIntensityMin">
            <summary>The incoming audio intensity minimum level.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityAudioRenderIntensityMax">
            <summary>The incoming audio intensity maximum level.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityAudioCaptureVolume">
            <summary>The outgoing audio volume level.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityAudioCaptureMute">
            <summary>The outgoing audio volume is Muted</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityAudioCaptureIntensity">
            <summary>The outgoing audio intensity level.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityAudioCaptureIntensityMin">
            <summary>The outgoing audio intensity minimum level.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityAudioCaptureIntensityMax">
            <summary>The outgoing audio intensity maximum level.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityAudioCanCallComputer">
            <summary>Can make a SIP call.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityAudioCanCallTelephone">
            <summary>Can make a telephony call.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityAudioRenderDevice">
            <summary>The description of the playback device.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityAudioCaptureDevice">
            <summary>The description of the recording device.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityAudioSpeakerMode">
            <summary>The audio device category (public or private).</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityAudioHistoryInfo">
            <summary>The audio history information object.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityAudioOriginalTargetUri">
            <summary>The URI of the original target (Obsolete, use participant property).</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityAudioReferredByUri">
            <summary>The URI of the audio device.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityAudioSupportsAdvancedTransfer">
            <summary>Is advanced transfer supported by the remote party?</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityAudioQuality">
            <summary>The audio quality level.</summary><remarks>Not implemented, always returns null.</remarks>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityAudioOnHoldSource">
            <summary>The source filename for music-on-hold.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityAudioOnHoldRepeated">
            <summary>Should the music-on-hold be repeated?</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.Reserved1">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityIsAutoAccepted">
            <summary>The audio/video invitation has been auto accepted.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityAudioSupportsSafeTransfer">
            <summary>Is safe transfer supported by the remote party?</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityAudioNetworkQuality">
            <summary>The audio network quality level.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityAudioBandwidthQuality">
            <summary>The audio bandwidth quality level.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityAudioDeviceQuality">
            <summary>The audio device quality level.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityVoicemailItemId">
            <summary>The id of the individual voicemail item being played by this conversation.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityVideoNetworkQuality">
            <summary>The video network quality level.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityVideoBandwidthQuality">
            <summary>The video bandwidth quality level.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityVideoDeviceQuality">
            <summary>The video device quality level.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityAudioIsEmergencyCall">
            <summary>Is this an emergency call?</summary><remarks>Not implemented. Always returns null.</remarks>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityUsbOffHookLedStatus">
            <summary>The USB device off-hook condition LED status.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.AVModalityUsbDisplayName">
            <summary>The name for the usb stream.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.ApplicationSharingModalityCanShareMonitor">
            <summary> 
            Can desktop or monitors be shared?
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.ApplicationSharingModalityCanShareApplications">
            <summary> 
            Can applications be shared?
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.Reserved2">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.Reserved3">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.Reserved4">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.Reserved5">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.Reserved6">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.Reserved7">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.Reserved8">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.Reserved9">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.Reserved10">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.Reserved11">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.Reserved12">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.Reserved13">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.Reserved14">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.Reserved15">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.Reserved16">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.Reserved17">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.Reserved18">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.Reserved19">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.Reserved20">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityProperty.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.ModalityState">
            <summary>Enumerates the modality states.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityState.Disconnected">
            <summary>The modality is not part of the conversation.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityState.Connecting">
            <summary>The invitation is being delivered.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityState.Notified">
            <summary>The invitation was delivered and the endpoint was notified.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityState.Joining">
            <summary>The invitation was accepted and the endpoints are joining.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityState.ConnectingToCaller">
            <summary>The modality agent is connecting to the caller.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityState.Connected">
            <summary>The modality is successfully connected.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityState.Suspended">
            <summary>The modality is suspended and has limited capabilities.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityState.OnHold">
            <summary>The connected modality is placed on hold.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityState.Forwarding">
            <summary>The connecting modality is being forwarded.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityState.Transferring">
            <summary>The connected modality is being transferred.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityState.Disconnecting">
            <summary> 
            The modality is being disconnected
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityState.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty">
            <summary>Enumerates the modality state change properties.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.ForwardHistoryInfo">
            <summary>Routing history details provided during state change to forwarding.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.AcceptingParticipant">
            <summary>When state change to disconnected because accepted by other party, the accepting participant's contact object.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.AcceptingEndpoint">
            <summary>When state change to disconnected because accepted by other party, the accepting participant endpoint's uri.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.TransferTargetParticipant">
            <summary>When state change result of transfer, the target participant's contact object.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.TransferTargetEndpoint">
            <summary>When state change result of transfer, the target participant endpoint's uri.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.AlsoRingingOthers">
            <summary>Routing history details provided when receiving a call as team leader or boss.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.IsAutoAccepted">
            <summary>Returns true if the call has been auto-accepted.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.AllowedRedirection">
            <summary>Flag indicating if the allowed redirection types of the related modality (value is mask of type RedirectionTypes).</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.InvitingDevice">
            <summary>The inviting device.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.Reserved1">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.Reserved2">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.Reserved3">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.Reserved4">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.Reserved5">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.Reserved6">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.Reserved7">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.Reserved8">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.Reserved9">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.Reserved10">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.Reserved11">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.Reserved12">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.Reserved13">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.Reserved14">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.Reserved15">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.Reserved16">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.Reserved17">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.Reserved18">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.Reserved19">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.Reserved20">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.Reserved21">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.Reserved22">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.Reserved23">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.Reserved24">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.Reserved25">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.Reserved26">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.Reserved27">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.Reserved28">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.Reserved29">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.Reserved30">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityStateChangeProperty.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.ModalityTypes">
            <summary>Enumerates the modality types.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityTypes.None">
            <summary>No modalities</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityTypes.InstantMessage">
            <summary>Instant Messaging Modality</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityTypes.AudioVideo">
            <summary>Audio/Video Modality</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityTypes.ApplicationSharing">
            <summary>Application Sharing Modality</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityTypes.ContentSharing">
            <summary>Content Sharing Modality</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityTypes.Reserved1">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityTypes.Reserved2">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ModalityTypes.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.ParticipantAction">
            <summary>Enumerates the participant actions.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ParticipantAction.SetProperty">
            <summary>Sets a participant property.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ParticipantAction.Admit">
            <summary>Admits a participant to the conference.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ParticipantAction.Deny">
            <summary>Denies a participant entrance to the conference.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ParticipantAction.Pin">
            <summary>Pins the participant's video stream.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ParticipantAction.Lock">
            <summary>Locks the participant's video stream.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ParticipantAction.SetMute">
            <summary> 
            Mute or unmute a participant in the conference.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ParticipantAction.Reserved1">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ParticipantAction.Reserved2">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ParticipantAction.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.ParticipantProperty">
            <summary>Enumerates the participant properties.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ParticipantProperty.RepresentedBy">
            <summary>If remote participant is representing another party, the representation details.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ParticipantProperty.ReferredByUri">
            <summary>If remote participant was referred by another party, the transferor's URI</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ParticipantProperty.Name">
            <summary>The participant name.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ParticipantProperty.IsAnonymous">
            <summary>The participant is Anonymous.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ParticipantProperty.IsAuthenticated">
            <summary>The participant is authenticated.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ParticipantProperty.IsInLobby">
            <summary>The participant is in the lobby.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ParticipantProperty.IsLeader">
            <summary>The participant is the leader of the conversation.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ParticipantProperty.IsCallParkService">
            <summary>The participant is the Call Park Service.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ParticipantProperty.ParkedCall">
            <summary>The msParkedCall token used for safe-retrieve.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ParticipantProperty.SoftMuteChangeInitiator">
            <summary>Gives the reason for the last soft mute property change.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ParticipantProperty.IsRecording">
            <summary>The participant is recording.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ParticipantProperty.IsPresenter">
            <summary>The participant is a presenter in the conversation.</summary><remarks>A presenter can share local resources in the conversation.</remarks>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ParticipantProperty.Reserved1">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ParticipantProperty.Reserved2">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ParticipantProperty.IsPinned">
            <summary>The video stream of the participant is pinned to the user's conversation window video gallery.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ParticipantProperty.IsLocked">
            <summary>A meeting presenter has locked he video stream of the participant in the user's conversation window video gallery.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ParticipantProperty.Reserved3">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ParticipantProperty.Reserved4">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ParticipantProperty.Reserved5">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.ParticipantProperty.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.AudioVideo.CallUnparkReason">
            <summary>Defines the specific reason why a previously-parked call was unparked.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.CallUnparkReason.None">
            <summary>Other reasons.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.CallUnparkReason.Abandoned">
            <summary>The parked call was hung up before being retrieved.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.CallUnparkReason.Disconnected">
            <summary>The parked call was disconnected.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.CallUnparkReason.Fallback">
            <summary>The parked call was transferred to the configured fallback.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.CallUnparkReason.Retrieved">
            <summary>The parked call was manually retrieved.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.CallUnparkReason.Ringback">
            <summary>The parked call was auto-transferred back to the parker.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.CallUnparkReason.Unknown">
            <summary>The reason is unknown.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.CallUnparkReason.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.AudioVideo.ChannelAction">
            <summary>Enumerates the channel actions.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.ChannelAction.Start">
            <summary>Start the media channel.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.ChannelAction.Stop">
            <summary>Stop the media channel.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.ChannelAction.SendDtmf">
            <summary>Send DTMF signal.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.ChannelAction.Reserved1">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.ChannelAction.Reserved2">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.ChannelAction.Reserved3">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.ChannelAction.Reserved4">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.ChannelAction.Pause">
            <summary>Pause the media channel.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.ChannelAction.Resume">
            <summary>Resume the media channel.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.ChannelAction.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.AudioVideo.ChannelState">
            <summary>Enumerates the media channel states.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.ChannelState.None">
            <summary>Media channel state is unknown.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.ChannelState.Connecting">
            <summary>Media channel is connecting.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.ChannelState.Notified">
            <summary>Media channel is notified.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.ChannelState.Send">
            <summary>Media channel is in send only state.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.ChannelState.Receive">
            <summary>Media channel is in receive only state.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.ChannelState.SendReceive">
            <summary>Media channel can both send and receive.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.ChannelState.Inactive">
            <summary>Media channel is inactive.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.ChannelState.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.AudioVideo.MediaQuality">
            <summary>Enumerates the quality levels of modality's media session.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.MediaQuality.NotSet">
            <summary>Media quality is not set.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.MediaQuality.Unknown">
            <summary>Media quality is unknown.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.MediaQuality.Good">
            <summary>Media quality is good.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.MediaQuality.Fair">
            <summary>Media quality is fair.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.MediaQuality.Bad">
            <summary>Media quality is poor.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.MediaQuality.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.AudioVideo.MediaStreamDirection">
            <summary>Enumerates the media stream directions.</summary><remarks>Do not use this property to determine if a conversation is inbound or started locally. Instead, iterate on the conversation modalities collection and examine the Modality.State property of the InstantMessageModality. If the state of the modality is ModalityState.Notified, then the conversation is inbound.</remarks>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.MediaStreamDirection.None">
            <summary>Media stream direction is unknown.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.MediaStreamDirection.Send">
            <summary>Media stream is outbound.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.MediaStreamDirection.Receive">
            <summary>Media stream is inbound.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.MediaStreamDirection.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.AudioVideo.SpeakerMode">
            <summary>Enumerates the speaker modes.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.SpeakerMode.Off">
            <summary>The Speaker is off.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.SpeakerMode.On">
            <summary>The speaker is turned on.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.SpeakerMode.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.AudioVideo.TransferOptions">
            <summary>Enumerates the transfer options.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.TransferOptions.None">
            <summary>Default transfer.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.TransferOptions.DisallowRedirection">
            <summary>Prevent redirection from original transfer target.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.TransferOptions.Reserved1">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.TransferOptions.Reserved2">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.AudioVideo.TransferOptions.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewDisplayMode">
            <summary> 
            Enumerates possible display modes for the application sharing view.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewDisplayMode.FitToParent">
            <summary> 
            The view is displayed with the same size as its parent window client area.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewDisplayMode.ActualSize">
            <summary> 
            The view is displayed with the actual size.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewDisplayMode.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewProperty">
            <summary> 
            Enumerates the application sharing view properties.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewProperty.Width">
            <summary> 
            The application sharing view width.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewProperty.Height">
            <summary> 
            The application sharing view height.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewProperty.DisplayMode">
            <summary> 
            The application sharing view auto-sizing property.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewProperty.IsHosted">
            <summary> 
            Indicates if the view is hosted in a window.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewProperty.ParentWindow">
            <summary> 
            The application sharing view host window handle.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewProperty.Handle">
            <summary> 
            The application sharing view window handle.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewProperty.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewState">
            <summary> 
            Enumerates the state of application sharing view control.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewState.Inactive">
            <summary> 
            The view is not usable.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewState.Active">
            <summary> 
            The view is active.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewState.Paused">
            <summary> 
            The view is paused.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewState.Minimized">
            <summary> 
            The view is minimized.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ApplicationSharingViewState.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.CanShareDetail">
            <summary>Enumerates the detail of why sharing a particular resource is allowed or not allowed.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.CanShareDetail.Allowed">
            <summary>Sharing is allowed.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.CanShareDetail.DisabledByPolicy">
            <summary>Sharing is disabled by admin policy.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.CanShareDetail.DisabledByOrganizerPolicy">
            <summary>Sharing is disabled by organizer policy.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.CanShareDetail.DisabledByRole">
            <summary>Sharing is disabled based on participant role.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.CanShareDetail.CannotConnect">
            <summary>Cannot share because a connection to the Lync server cannot be made at this time.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.CanShareDetail.DisabledForOtherReason">
            <summary> 
            Disabled for some other reason.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.CanShareDetail.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.ContentSavingFileType">
            <summary> 
            Enumerates the file type for saving content
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ContentSavingFileType.XPS">
            <summary> 
            The XPS file type.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ContentSavingFileType.PNG">
            <summary> 
            The PNG file type.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ContentSavingFileType.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.ParticipationState">
            <summary>Enumerates the participation states of a conversation participant who is sharing or viewing a shared resource.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ParticipationState.None">
            <summary>No one is sharing.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ParticipationState.Viewing">
            <summary>The participant is viewing resources shared by another participant.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ParticipationState.RequestingControl">
            <summary>The participant is requesting control of the shared resources.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ParticipationState.Controlling">
            <summary>The participant is controlling the shared resources.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ParticipationState.Sharing">
            <summary>The participant is sharing some resources.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ParticipationState.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentAction">
            <summary>Enumerates supported content actions.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentAction.Remove">
            <summary>Remove a content item.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentAction.Present">
            <summary>Present a content item.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentAction.StopPresenting">
            <summary>Stop presenting a content item.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentAction.SyncWithPresenter">
            <summary>Synchronize the content to the presenter.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentAction.DownloadFile">
            <summary>Download a PowerPoint slide deck or file attachment from the meeting content bin.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentAction.TakeOverAsPresenter">
            <summary>Take over as the presenter in the meeting.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentAction.SaveAnnotation">
            <summary>Save the annotations added to the shared whiteboard.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentAction.ClearAllAnnotations">
            <summary>Clears all annotations from the shared whiteboard.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentAction.Upload">
            <summary> 
            Upload a content.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentAction.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentProperty">
            <summary>Enumerates the content properties.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentProperty.Id">
            <summary> 
            The content ID.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentProperty.Type">
            <summary> 
            The content type.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentProperty.Title">
            <summary> 
            The content Title.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentProperty.Owner">
            <summary> 
            The content owner.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentProperty.CreationTime">
            <summary> 
            The content creation time.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentProperty.LastUsedTime">
            <summary> 
            The content last update time.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentProperty.Presenter">
            <summary> 
            The current presenter.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentProperty.IsInSyncWithPresenter">
            <summary> 
            Whether or not this content is in sync navigation mode.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentProperty.Reserved1">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentProperty.Reserved2">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentProperty.Reserved3">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentProperty.Reserved4">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentProperty.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentState">
            <summary>Enumerates the states of a shareable content object.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentState.Initializing">
            <summary> 
            The content is in the initializing state.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentState.Offline">
            <summary> 
            The content has been created, but is not uploaded yet.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentState.Connecting">
            <summary>The content is being converted/uploaded, or is being downloaded for viewing.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentState.Online">
            <summary>The content has been successfully uploaded or downloaded, and is fully functional.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentState.Disconnecting">
            <summary>The content is being deleted from the server.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentState.Active">
            <summary>The content is being presented.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentState.Unusable">
            <summary> 
            The content is not usable anymore.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentState.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentType">
            <summary>Enumerates supported content types</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentType.Unsupported">
            <summary>Unsupported content.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentType.PowerPoint">
            <summary>PowerPoint content.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentType.Whiteboard">
            <summary>Whiteboarding content.</summary><remarks>Be sure to save any whiteboard annotations to a local file before disconnecting the conversation ContentSharingModality. Otherwise, any annotations are lost when you reconnect the modality in the conversation.</remarks>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentType.NativeFile">
            <summary>Native file attachment.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentType.Reserved1">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentType.Reserved2">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentType.Qna">
            <summary> 
            Q&amp;A content.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentType.Web">
            <summary> 
            Web content.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.ShareableContentType.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Conversation.Sharing.SharingResourceType">
            <summary>Enumerates the application sharing resource type</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.SharingResourceType.Desktop">
            <summary>Desktop resource.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.SharingResourceType.Monitor">
            <summary>Monitor resources.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.SharingResourceType.Process">
            <summary>Process resources.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.SharingResourceType.Window">
            <summary>Window resources.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.SharingResourceType.Other">
            <summary>Other sharing resource.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Conversation.Sharing.SharingResourceType.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Device.AudioPlayBackModes">
            <summary>Enumerates AudioFeedback Devices.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Device.AudioPlayBackModes.None">
            <summary>Play audio file back through no device.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Device.AudioPlayBackModes.Alert">
            <summary>Playback audio through device configured for alert sounds.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Device.AudioPlayBackModes.Communication">
            <summary>Playback audio through device configured for Unified Communications.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Device.AudioPlayBackModes.Handset">
            <summary>Playback audio through telephone handset device.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Device.AudioPlayBackModes.Ringing">
            <summary>Playback audio through device configured to play ringing tone.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Device.AudioPlayBackModes.AlertAndCommunication">
            <summary>Playback audio through both Lync and alert devices.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Device.AudioPlayBackModes.SuppressOnDeskphones">
            <summary>Suppress playback audio through desk telephone device.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Device.AudioPlayBackModes.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Device.DeviceType">
            <summary>Enumerates Device type.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Device.DeviceType.Unknown">
            <summary>Unknown audio device type.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Device.DeviceType.HumanInterfaceDevice">
            <summary>Human interface device (HID) type.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Device.DeviceType.HeadSet">
            <summary>Headset audio device.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Device.DeviceType.Custom">
            <summary>Custom audio device.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Device.DeviceType.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Extensibility.AutomationModalities">
            <summary>Enumerates the types of conversation modality that can be added to a conversation started using the Automation.BeginStartConversation method.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.AutomationModalities.InstantMessage">
            <summary>Instant messaging modality.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.AutomationModalities.Audio">
            <summary>Audio modality. Used for voice transmission</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.AutomationModalities.Video">
            <summary>Video modality.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.AutomationModalities.FileTransfer">
            <summary>File transfer modality.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.AutomationModalities.ApplicationSharing">
            <summary>Application sharing modality.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.AutomationModalities.Reserved1">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.AutomationModalities.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Extensibility.AutomationModalitySettings">
            <summary>Enumerates the settings on an automation modality.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.AutomationModalitySettings.Subject">
            <summary>Conversation subject. Property value type is String.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.AutomationModalitySettings.PreviousConversation">
            <summary>Previous conversation Id. Property value type is String.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.AutomationModalitySettings.OutlookEntryId">
            <summary>Microsoft Outlook entry Id. Property value type is String.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.AutomationModalitySettings.FilePathToTransfer">
            <summary>The file path of a file to be transferred. Property value type is String.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.AutomationModalitySettings.FileIsShared">
            <summary>Returns true if the file is shared. Property value type is Boolean.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.AutomationModalitySettings.FirstInstantMessage">
            <summary>The first instant message. Text sent with conversation invitation. Property value is of type string.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.AutomationModalitySettings.SendFirstInstantMessageImmediately">
            <summary>Set to true if the first instant message text is to be sent immediately upon starting a conversation. Property value is of type boolean.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.AutomationModalitySettings.FileHistoryLink">
            <summary>File history link. Property value is of type string.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.AutomationModalitySettings.StartConferenceByCallingMeAt">
            <summary>Telephone number to call out to conversation participant. Property value is of type string.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.AutomationModalitySettings.SharedProcess">
            <summary>Share a process running on local computer in conversation. Property value is of type Int.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.AutomationModalitySettings.SharedWindow">
            <summary>Share a window open on local computer in conversation. Property value is of type Int.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.AutomationModalitySettings.SharedDesktop">
            <summary>Share the desktop of the local computer in conversation. No property value needed.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.AutomationModalitySettings.SharedMonitor">
            <summary>Shares a monitor attached to local computer in conversation. Property value the monitor Id an is type Int.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.AutomationModalitySettings.DataObjectForFileTransfer">
            <summary>A data object is to be transferred. Property value is object.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.AutomationModalitySettings.ApplicationId">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.AutomationModalitySettings.ApplicationData">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.AutomationModalitySettings.HyperLink">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.AutomationModalitySettings.ParentWindow">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.AutomationModalitySettings.Reserved1">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.AutomationModalitySettings.Reserved2">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.AutomationModalitySettings.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Extensibility.ConversationWindowAction">
            <summary>Enumerates supported ConversationWindow actions</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.ConversationWindowAction.Reserved1">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.ConversationWindowAction.Reserved2">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.ConversationWindowAction.FullScreen">
            <summary> 
            Take the conversation window to fullscreen.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.ConversationWindowAction.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Extensibility.ConversationWindowExtensionSize">
            <summary>Enumerates the size of extensibility window that hosts the application.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.ConversationWindowExtensionSize.Small">
            <summary>Small conversation extensibility window.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.ConversationWindowExtensionSize.Medium">
            <summary>Medium conversation extensibility window.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.ConversationWindowExtensionSize.Large">
            <summary>Large conversation extensibility window.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.ConversationWindowExtensionSize.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Extensibility.ConversationWindowInformationType">
            <summary>Enumerates the conversation window properties.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.ConversationWindowInformationType.WidthMin">
            <summary>The minimum width of the conversation window.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.ConversationWindowInformationType.HeightMin">
            <summary>The minimum height of the conversation window.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.ConversationWindowInformationType.IsDocked">
            <summary>Is the conversation window docked?</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.ConversationWindowInformationType.HasVideo">
            <summary>Returns true if the conversation window is showing the main video pane.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.ConversationWindowInformationType.HasContentStage">
            <summary>Returns true if the content stage is being shown.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.ConversationWindowInformationType.HasExtensionPane">
            <summary>Returns true if the conversation window is showing the extension pane.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.ConversationWindowInformationType.IsFullScreen">
            <summary>Returns true if the conversation window is in fullscreen mode.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.ConversationWindowInformationType.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Extensibility.ConversationWindowState">
            <summary>Enumerates the conversation window states.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.ConversationWindowState.NotInitialized">
            <summary>The conversation window has not been created yet.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.ConversationWindowState.Initialized">
            <summary>The conversation window has been created.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.ConversationWindowState.Destroyed">
            <summary>The conversation window has been destroyed.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Extensibility.ConversationWindowState.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Group.GroupAction">
            <summary>Enumerates the group actions.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Group.GroupAction.AddContact">
            <summary>Add a contact to a group.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Group.GroupAction.RemoveContact">
            <summary>Remove a contact from a group.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Group.GroupAction.DeleteGroup">
            <summary>Delete a group.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Group.GroupAction.RenameGroup">
            <summary>Rename a group.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Group.GroupAction.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Group.GroupType">
            <summary>Enumerates the group types.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Group.GroupType.CustomGroup">
            <summary>A user-created group.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Group.GroupType.DistributionGroup">
            <summary>A group that represents a list of e-mail contacts (a distribution list).</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Group.GroupType.FrequentContacts">
            <summary>The group of most frequently used contacts.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Group.GroupType.FavoriteContacts">
            <summary>The group of favorite contacts.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Group.GroupType.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.ChannelType">
            <summary> 
            Enumerates the media channel types.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.ChannelType.Audio">
            <summary> 
            Audio channel.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.ChannelType.Video">
            <summary> 
            Normal Video channel.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.ChannelType.Reserved1">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.ChannelType.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.ConversationDirection">
            <summary> 
            Enumerates the Conversation direction values range.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.ConversationDirection.None">
            <summary> 
            The conversation direction is unknown.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.ConversationDirection.Incoming">
            <summary> 
            The conversation is incoming.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.ConversationDirection.Outgoing">
            <summary> 
            The conversation is outgoing.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.ConversationDirection.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.ModalityConnectOptions">
            <summary> 
            Enumerates the modality connect options.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.ModalityConnectOptions.None">
            <summary> 
            Default connection.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.ModalityConnectOptions.IncludeActiveContext">
            <summary> 
            Include any active conversation context in the invitation.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.ModalityConnectOptions.IncludeAllContexts">
            <summary> 
            Include all conversation contexts in the invitation.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.ModalityConnectOptions.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.PreviousConversationHistoryRetrievalState">
            <summary> 
            Enumerates the possible task state of retrieving the archived history of previous conversation.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PreviousConversationHistoryRetrievalState.NotStarted">
            <summary> 
            The previous conversation history retrival has not started yet.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PreviousConversationHistoryRetrievalState.InProgress">
            <summary> 
            The previous conversation history retrival is in progress.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PreviousConversationHistoryRetrievalState.Complete">
            <summary> 
            The previous conversation history retrival is completed successfully.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PreviousConversationHistoryRetrievalState.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.PreviousConversationsConnectionState">
            <summary> 
            Enumerates the connection state of the previous conversations.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PreviousConversationsConnectionState.Disconnected">
            <summary> 
            The previous conversatrion was disconnected.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PreviousConversationsConnectionState.Connected">
            <summary> 
            The previous conversatrion was connected.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PreviousConversationsConnectionState.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.PreviousConversationsErrorType">
            <summary> 
            Enumerates errors that could have happened in the previous conversations.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PreviousConversationsErrorType.Critical">
            <summary> 
            Non-recoverable error when accessing external data store.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PreviousConversationsErrorType.Transient">
            <summary> 
            Transient error when accessing external data store.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PreviousConversationsErrorType.NotConfigured">
            <summary> 
            NotConfigured error when accessing external data store.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PreviousConversationsErrorType.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.PropertyClass">
            <summary> 
            Enumerates the property class encoded in various property IDs.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyClass.Contact">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyClass.Group">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyClass.Operation">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyClass.UCClientAddtionalInfo">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyClass.SearchProvider">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyClass.Reserved5">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyClass.ConferenceInfo">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyClass.ConferenceSetting">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyClass.Conversation">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyClass.ConversationStateChange">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyClass.Participant">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyClass.Modality">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyClass.ModalityStateChange">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyClass.ModalityAction">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyClass.ConversationWindow">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyClass.Room">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyClass.Content">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyClass.VideoView">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyClass.ClientSettings">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyClass.Reserved1">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyClass.Reserved2">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyClass.Reserved3">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyClass.Reserved4">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyClass.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.PropertyMask">
            <summary> 
            Enumerates the property ID masks.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyMask.Type">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyMask.Class">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyMask.Id">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyMask.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.PropertyMaskIndex">
            <summary> 
            Enumerates the indexes where property ID fields reside.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyMaskIndex.Type">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyMaskIndex.Class">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyMaskIndex.Id">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyMaskIndex.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.PropertyType">
            <summary> 
            Enumerates the property type encoded in various property IDs.
            </summary> 
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyType.String">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyType.Boolean">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyType.Numeric">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyType.Enumeration">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyType.Object">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyType.Date">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyType.SafeArray">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.PropertyType.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Room.RoomJoinState">
            <summary>Enumerates the group chat room joining operation states.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Room.RoomJoinState.NotJoined">
            <summary>The room join state, not joined</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Room.RoomJoinState.Pending">
            <summary>The room join state, pending</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Room.RoomJoinState.Success">
            <summary>The room join state, success</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Room.RoomJoinState.Failed">
            <summary>The room join state, failed</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Room.RoomJoinState.FailedUnauthorized">
            <summary>The room join state, failed when unauthorized</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Room.RoomJoinState.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Room.RoomManagerState">
            <summary>Enumerates the room manager state.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Room.RoomManagerState.Disabled">
            <summary>The room manager state, disabled.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Room.RoomManagerState.Enabled">
            <summary>The room manager state, enabled.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Room.RoomManagerState.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Room.RoomMessageFilteringAction">
            <summary>Enumerates the action taken by message filtering logic for a room message when Room.SendFilteredMessge is called.</summary><remarks>Choose RoomMessageFilteringAction.Canceled when you want to prevent the user's pending message post from completing. Use RoomMessageFilteringAction.Replaced when you have reformatted or replaced text in the user's original pending message text. Use RoomMessageFilteringAction.Passed when you are sending the user's original message text unchanged.</remarks>
        </member>
        <member name="F:Microsoft.Lync.Model.Room.RoomMessageFilteringAction.Canceled">
            <summary>The message send operation is canceled.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Room.RoomMessageFilteringAction.Replaced">
            <summary>The original message text is replaced with new text and then sent.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Room.RoomMessageFilteringAction.Passed">
            <summary>The original message text is sent without change.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Room.RoomMessageFilteringAction.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Room.RoomMessageFormat">
            <summary>Enumerates the possible format types of a room message.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Room.RoomMessageFormat.PlainText">
            <summary>The room message in plain text format</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Room.RoomMessageFormat.Rtf">
            <summary>The room message in RTF format.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Room.RoomMessageFormat.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Room.RoomMessageType">
            <summary>Enumerates the possible types of a room message.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Room.RoomMessageType.Alert">
            <summary>The Alert room message type</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Room.RoomMessageType.Regular">
            <summary>The regular room message type.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Room.RoomMessageType.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Room.RoomProperty">
            <summary>Enumerates the room properties.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Room.RoomProperty.Uri">
            <summary>The room uri.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Room.RoomProperty.DomainUrl">
            <summary>The room url.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Room.RoomProperty.Description">
            <summary>The room description.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Room.RoomProperty.Title">
            <summary>The room title.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Room.RoomProperty.Type">
            <summary>The room Type.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Room.RoomProperty.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Room.RoomSearchModeType">
            <summary>Enumerates the possible room search mode types.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Room.RoomSearchModeType.Regular">
            <summary>The room search type, by name only</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Room.RoomSearchModeType.Extended">
            <summary>The room search type, by name and description</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Room.RoomSearchModeType.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Room.RoomType">
            <summary>Enumerates the room type.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Room.RoomType.Normal">
            <summary>The Normal room type</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Room.RoomType.Auditorium">
            <summary>The auditorium room type.</summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Room.RoomType.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.UCStream">
            <summary>
            Implement a Stream based on a COM IStream interface 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.UCStream.#ctor(System.Runtime.InteropServices.ComTypes.IStream)">
            <summary>
            Constructor
            </summary>
            <param name="pStream"></param>
        </member>
        <member name="M:Microsoft.Lync.Model.UCStream.Flush">
            <summary>
            Flush Method
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.UCStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read Methos
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.UCStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Seek Method
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.UCStream.SetLength(System.Int64)">
            <summary>
            Set Length
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Microsoft.Lync.Model.UCStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Write Method
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.UCStream.CanRead">
            <summary>
            CanRead Property
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.UCStream.CanSeek">
            <summary>
            CanSeek Property
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.UCStream.CanWrite">
            <summary>
            CanWrite Property
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.UCStream.Length">
            <summary>
            Length Property
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.UCStream.Position">
            <summary>
            Position Property
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ComHelper.CoAllowSetForegroundWindow(System.IntPtr,System.IntPtr)">
            <summary>
            CoAllowSetForegroundWindow
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.PendingOperationException">
            <summary>
            Exception thrown when a new operation cannot be started because a
            previous operation has not been completed
            </summary>
            
        </member>
        <member name="T:Microsoft.Lync.Model.LyncClientException">
            <summary>
            LyncClient base exception class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.LyncClientException.#ctor">
            <summary>
            Initializes a new instance of the LyncClientException class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.LyncClientException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the LyncClientException class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.LyncClientException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the LyncClientException class.
            </summary>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.LyncClientException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the LyncClientException class.
            </summary>
            <param name="message">
            Error message.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.LyncClientException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the LyncClientException class with 
            serialized data.
            </summary>
            <param name="info">
            SerializationInfo object that holds the serialized object data about the 
            exception being thrown.
            </param>
            <param name="context">
            StreamingContext object that contains contextual information about the 
            source or destination.
            </param>
        </member>
        <member name="P:Microsoft.Lync.Model.LyncClientException.InternalCode">
            <summary>
            returns COM HRESULT for the exception.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.PendingOperationException.#ctor">
            <summary>
            Initializes a new instance of the PendingOperationException class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.PendingOperationException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the PendingOperationException class.
            </summary>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.PendingOperationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the PendingOperationException class.
            </summary>
            <param name="message">
            Error message.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.PendingOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the PendingOperationException class with 
            serialized data.
            </summary>
            <param name="info">
            SerializationInfo object that holds the serialized object data about the 
            exception being thrown.
            </param>
            <param name="context">
            StreamingContext object that contains contextual information about the 
            source or destination.
            </param>
        </member>
        <member name="T:Microsoft.Lync.Model.ClientNotFoundException">
            <summary>
            Exception thrown when client process cannot be found
            </summary>
            
        </member>
        <member name="M:Microsoft.Lync.Model.ClientNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the ClientNotFoundException class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ClientNotFoundException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the ClientNotFoundException class.
            </summary>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.ClientNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ClientNotFoundException class.
            </summary>
            <param name="message">
            Error message.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.ClientNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the HostNotFoundException class with 
            serialized data.
            </summary>
            <param name="info">
            SerializationInfo object that holds the serialized object data about the 
            exception being thrown.
            </param>
            <param name="context">
            StreamingContext object that contains contextual information about the 
            source or destination.
            </param>
        </member>
        <member name="T:Microsoft.Lync.Model.NotInitializedException">
            <summary>
            Exception thrown when the Lync client is not initialized or is already shutdown.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.NotInitializedException.#ctor">
            <summary>
            Initializes a new instance of this class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.NotInitializedException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.NotInitializedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="message">
            Error message.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.NotInitializedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the NotInitializedException class with 
            serialized data.
            </summary>
            <param name="info">
            SerializationInfo object that holds the serialized object data about the 
            exception being thrown.
            </param>
            <param name="context">
            StreamingContext object that contains contextual information about the 
            source or destination.
            </param>
        </member>
        <member name="T:Microsoft.Lync.Model.AlreadyInitializedException">
            <summary>
            Exception thrown when the object is already initialized
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.AlreadyInitializedException.#ctor">
            <summary>
            Initializes a new instance of this class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.AlreadyInitializedException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.AlreadyInitializedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="message">
            Error message.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.AlreadyInitializedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the AlreadyInitializedException class with 
            serialized data.
            </summary>
            <param name="info">
            SerializationInfo object that holds the serialized object data about the 
            exception being thrown.
            </param>
            <param name="context">
            StreamingContext object that contains contextual information about the 
            source or destination.
            </param>
        </member>
        <member name="T:Microsoft.Lync.Model.NotReadyException">
            <summary>
            Exception thrown when the operation is pending or Lync client is not ready for the operation.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.NotReadyException.#ctor">
            <summary>
            Initializes a new instance of this class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.NotReadyException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.NotReadyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="message">
            Error message.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.NotReadyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the NotReadyException class with 
            serialized data.
            </summary>
            <param name="info">
            SerializationInfo object that holds the serialized object data about the 
            exception being thrown.
            </param>
            <param name="context">
            StreamingContext object that contains contextual information about the 
            source or destination.
            </param>
        </member>
        <member name="T:Microsoft.Lync.Model.ItemNotFoundException">
            <summary>
            Exception thrown when the item is not found
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ItemNotFoundException.#ctor">
            <summary>
            Initializes a new instance of this class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ItemNotFoundException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.ItemNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="message">
            Error message.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.ItemNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ItemNotFoundException class with 
            serialized data.
            </summary>
            <param name="info">
            SerializationInfo object that holds the serialized object data about the 
            exception being thrown.
            </param>
            <param name="context">
            StreamingContext object that contains contextual information about the 
            source or destination.
            </param>
        </member>
        <member name="T:Microsoft.Lync.Model.TypeMismatchException">
            <summary>
            Exception thrown when the item type specified is conflicting with existing item type
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.TypeMismatchException.#ctor">
            <summary>
            Initializes a new instance of this class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.TypeMismatchException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.TypeMismatchException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="message">
            Error message.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.TypeMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the TypeMismatchException class with 
            serialized data.
            </summary>
            <param name="info">
            SerializationInfo object that holds the serialized object data about the 
            exception being thrown.
            </param>
            <param name="context">
            StreamingContext object that contains contextual information about the 
            source or destination.
            </param>
        </member>
        <member name="T:Microsoft.Lync.Model.NotSignedInException">
            <summary>
            Exception thrown when Lync client is not signed in.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.NotSignedInException.#ctor">
            <summary>
            Initializes a new instance of this class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.NotSignedInException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.NotSignedInException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="message">
            Error message.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.NotSignedInException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the NotSignedInException class with 
            serialized data.
            </summary>
            <param name="info">
            SerializationInfo object that holds the serialized object data about the 
            exception being thrown.
            </param>
            <param name="context">
            StreamingContext object that contains contextual information about the 
            source or destination.
            </param>
        </member>
        <member name="T:Microsoft.Lync.Model.InvalidStateException">
            <summary>
            Exception thrown when the endpoint is not signed in
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.InvalidStateException.#ctor">
            <summary>
            Initializes a new instance of this class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.InvalidStateException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.InvalidStateException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="message">
            Error message.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.InvalidStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the InvalidStateException class with 
            serialized data.
            </summary>
            <param name="info">
            SerializationInfo object that holds the serialized object data about the 
            exception being thrown.
            </param>
            <param name="context">
            StreamingContext object that contains contextual information about the 
            source or destination.
            </param>
        </member>
        <member name="T:Microsoft.Lync.Model.ItemAlreadyExistException">
            <summary>
            Exception thrown when the item aleady exists
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ItemAlreadyExistException.#ctor">
            <summary>
            Initializes a new instance of this class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ItemAlreadyExistException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.ItemAlreadyExistException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="message">
            Error message.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.ItemAlreadyExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ItemAlreadyExistException class with 
            serialized data.
            </summary>
            <param name="info">
            SerializationInfo object that holds the serialized object data about the 
            exception being thrown.
            </param>
            <param name="context">
            StreamingContext object that contains contextual information about the 
            source or destination.
            </param>
        </member>
        <member name="T:Microsoft.Lync.Model.JoinRoomFailException">
            <summary>
            Exception thrown when joining a room is failed
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.JoinRoomFailException.#ctor">
            <summary>
            Initializes a new instance of this class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.JoinRoomFailException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.JoinRoomFailException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="message">
            Error message.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.JoinRoomFailException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the JoinRoomFailException class with 
            serialized data.
            </summary>
            <param name="info">
            SerializationInfo object that holds the serialized object data about the 
            exception being thrown.
            </param>
            <param name="context">
            StreamingContext object that contains contextual information about the 
            source or destination.
            </param>
        </member>
        <member name="T:Microsoft.Lync.Model.JoinRoomUnauthorizedException">
            <summary>
            Exception thrown when joining a room is unauthorized
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.JoinRoomUnauthorizedException.#ctor">
            <summary>
            Initializes a new instance of this class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.JoinRoomUnauthorizedException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.JoinRoomUnauthorizedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="message">
            Error message.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.JoinRoomUnauthorizedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the JoinRoomFailException class with 
            serialized data.
            </summary>
            <param name="info">
            SerializationInfo object that holds the serialized object data about the 
            exception being thrown.
            </param>
            <param name="context">
            StreamingContext object that contains contextual information about the 
            source or destination.
            </param>
        </member>
        <member name="T:Microsoft.Lync.Model.RoomNotJoinedException">
            <summary>
            Exception thrown when a room is joined
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.RoomNotJoinedException.#ctor">
            <summary>
            Initializes a new instance of this class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.RoomNotJoinedException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.RoomNotJoinedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="message">
            Error message.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.RoomNotJoinedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the JoinRoomFailException class with 
            serialized data.
            </summary>
            <param name="info">
            SerializationInfo object that holds the serialized object data about the 
            exception being thrown.
            </param>
            <param name="context">
            StreamingContext object that contains contextual information about the 
            source or destination.
            </param>
        </member>
        <member name="T:Microsoft.Lync.Model.ContentTitleExistException">
            <summary>
            Exception thrown when a cotent title already exists
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContentTitleExistException.#ctor">
            <summary>
            Initializes a new instance of this class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContentTitleExistException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.ContentTitleExistException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="message">
            Error message.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.ContentTitleExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ContentTitleExistException class with 
            serialized data.
            </summary>
            <param name="info">
            SerializationInfo object that holds the serialized object data about the 
            exception being thrown.
            </param>
            <param name="context">
            StreamingContext object that contains contextual information about the 
            source or destination.
            </param>
        </member>
        <member name="T:Microsoft.Lync.Model.MaxContentsExceededException">
            <summary>
            Exception thrown when a cotent title already exists
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.MaxContentsExceededException.#ctor">
            <summary>
            Initializes a new instance of this class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.MaxContentsExceededException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.MaxContentsExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="message">
            Error message.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.MaxContentsExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the MaxContentsExceededException class with 
            serialized data.
            </summary>
            <param name="info">
            SerializationInfo object that holds the serialized object data about the 
            exception being thrown.
            </param>
            <param name="context">
            StreamingContext object that contains contextual information about the 
            source or destination.
            </param>
        </member>
        <member name="T:Microsoft.Lync.Model.ContentTitleInvalidException">
            <summary>
            Exception thrown when a cotent title already exists
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContentTitleInvalidException.#ctor">
            <summary>
            Initializes a new instance of this class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContentTitleInvalidException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.ContentTitleInvalidException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="message">
            Error message.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.ContentTitleInvalidException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ContentTitleInvalidException class with 
            serialized data.
            </summary>
            <param name="info">
            SerializationInfo object that holds the serialized object data about the 
            exception being thrown.
            </param>
            <param name="context">
            StreamingContext object that contains contextual information about the 
            source or destination.
            </param>
        </member>
        <member name="T:Microsoft.Lync.Model.ContentNotAuthorizedException">
            <summary>
            Exception thrown when a cotent title already exists
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContentNotAuthorizedException.#ctor">
            <summary>
            Initializes a new instance of this class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContentNotAuthorizedException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.ContentNotAuthorizedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="message">
            Error message.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.ContentNotAuthorizedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ContentNotAuthorizedException class with 
            serialized data.
            </summary>
            <param name="info">
            SerializationInfo object that holds the serialized object data about the 
            exception being thrown.
            </param>
            <param name="context">
            StreamingContext object that contains contextual information about the 
            source or destination.
            </param>
        </member>
        <member name="T:Microsoft.Lync.Model.ContentOtherErrorsException">
            <summary>
            Exception thrown when a cotent title already exists
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContentOtherErrorsException.#ctor">
            <summary>
            Initializes a new instance of this class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ContentOtherErrorsException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.ContentOtherErrorsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="message">
            Error message.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.ContentOtherErrorsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ContentOtherErrorsException class with 
            serialized data.
            </summary>
            <param name="info">
            SerializationInfo object that holds the serialized object data about the 
            exception being thrown.
            </param>
            <param name="context">
            StreamingContext object that contains contextual information about the 
            source or destination.
            </param>
        </member>
        <member name="T:Microsoft.Lync.Model.ResultOverflowException">
            <summary>
            Exception thrown when there are too many results to be returned
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ResultOverflowException.#ctor">
            <summary>
            Initializes a new instance of this class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ResultOverflowException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.ResultOverflowException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="message">
            Error message.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.ResultOverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ResultOverflowException class with 
            serialized data.
            </summary>
            <param name="info">
            SerializationInfo object that holds the serialized object data about the 
            exception being thrown.
            </param>
            <param name="context">
            StreamingContext object that contains contextual information about the 
            source or destination.
            </param>
        </member>
        <member name="T:Microsoft.Lync.Model.RequestCanceledException">
            <summary>
            Exception thrown when the request is already cancelled.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.RequestCanceledException.#ctor">
            <summary>
            Initializes a new instance of this class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.RequestCanceledException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.RequestCanceledException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="message">
            Error message.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.RequestCanceledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the RequestCanceledException class with 
            serialized data.
            </summary>
            <param name="info">
            SerializationInfo object that holds the serialized object data about the 
            exception being thrown.
            </param>
            <param name="context">
            StreamingContext object that contains contextual information about the 
            source or destination.
            </param>
        </member>
        <member name="T:Microsoft.Lync.Model.SearchException">
            <summary>
            Exception thrown when search operation ended with an error.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.OperationException">
            <summary>
            Exception thrown when Lync client failed on an operation.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.OperationException.#ctor">
            <summary>
            Initializes a new instance of this class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.OperationException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.OperationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="message">
            Error message.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.OperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of this class with serialized data.
            </summary>
            <param name="info">
            SerializationInfo object that holds the serialized object data about the 
            exception being thrown.
            </param>
            <param name="context">
            StreamingContext object that contains contextual information about the 
            source or destination.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.SearchException.#ctor">
            <summary>
            Initializes a new instance of this class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.SearchException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.SearchException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="message">
            Error message.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.SearchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the SearchException class with 
            serialized data.
            </summary>
            <param name="info">
            SerializationInfo object that holds the serialized object data about the 
            exception being thrown.
            </param>
            <param name="context">
            StreamingContext object that contains contextual information about the 
            source or destination.
            </param>
        </member>
        <member name="P:Microsoft.Lync.Model.SearchException.Reason">
            <summary>
            Returns the failure reason for the search operation
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.SearchException.FailureReason">
            <summary>
            Enumerates reasons why search failed
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchException.FailureReason.Unknown">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchException.FailureReason.Unspecified">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchException.FailureReason.SharepointNotConfigured">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchException.FailureReason.AllNoise">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchException.FailureReason.NoResponse">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchException.FailureReason.BadQuery">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchException.FailureReason.BadScope">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchException.FailureReason.BadRequest">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchException.FailureReason.NoQuery">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchException.FailureReason.NoAuthorization">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.SearchException.FailureReason.ServerError">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.NotStartedByUserException">
            <summary>
            Exception thrown when user did not start Lync client. 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.NotStartedByUserException.#ctor">
            <summary>
            Initializes a new instance of this class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.NotStartedByUserException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.NotStartedByUserException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="message">
            Error message.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.NotStartedByUserException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of this class with serialized data.
            </summary>
            <param name="info">
            SerializationInfo object that holds the serialized object data about the 
            exception being thrown.
            </param>
            <param name="context">
            StreamingContext object that contains contextual information about the 
            source or destination.
            </param>
        </member>
        <member name="T:Microsoft.Lync.Model.ConfigurationErrorException">
            <summary>
            Exception thrown when Lync is not configured properly
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ConfigurationErrorException.#ctor">
            <summary>
            Initializes a new instance of this class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.ConfigurationErrorException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.ConfigurationErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <param name="message">
            Error message.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or
            a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.ConfigurationErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of this class with serialized data.
            </summary>
            <param name="info">
            SerializationInfo object that holds the serialized object data about the 
            exception being thrown.
            </param>
            <param name="context">
            StreamingContext object that contains contextual information about the 
            source or destination.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.ModelHelper.GetEnumerator``2(System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
            Getting the Enumerable from IDictionary
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.TraceProvider">
            <summary>
            TraceProvider class is a support class for ManagedWPP.exe
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.TraceProvider.#ctor(System.String,System.Guid,System.Boolean)">
            <summary>
            Constructor for TraceProvider class.  
            </summary>
            <param name="applicationName">
            Friendly name of the trace source
            </param>
            <param name="controlGuid">
            Unique GUID among all trace sources running on a system
            </param>
            <param name="useSequenceNumbers">
            Specifies whether to generate sequence numbers for each TraceMessage call
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.TraceProvider.Finalize">
            <summary>
            Destructor for TraceProvider class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.TraceProvider.MakeStringArg(System.Object)">
            <summary>
            Helper function that ManagedWPP generates calls to convert arguments
            to %s format specifier to a String object.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.TraceProvider.MakeTimeStampArg(System.Object)">
            <summary>
            Helper function that ManagedWPP generates calls to convert arguments
            to %!TIMESTAMP! format specifier to a long object.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.TraceProvider.GetBufferSize(System.Int32,System.Int32)">
            <summary>
            Method that returns the size of the stack buffer needed to trace the passed
            number of arguments and argument sizes.  Caller should use the value
            returned by this function to stackalloc a byte buffer.
            </summary>
            <param name="numberOfFields">
            Number of MOF_FIELD structures that will be needed.  Each parameter needs one
            MOF_FIELD, except for string parameters that need two MOF_FIELD structures,
            one for the length and a second for the string pointer.
            </param>
            <param name="totalParameterSize">
            Total number of bytes needed to hold the values of the parameters.  Each string
            requires just 2 bytes for the length, as the actual string is passed via fixed
            pointer in a separate MOF_FIELD.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.TraceProvider.InitializeTraceBuffer(System.Void*,System.Guid,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.TraceProvider.InitializeTraceBuffer(System.Void*,System.Guid,System.Int32,System.Int32,System.Int32@)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.TraceProvider.InitializeTraceField(System.Void*,System.Char*,System.Int32,System.Void*,System.Int32@)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.TraceProvider.InitializeTraceField(System.Void*,System.Byte*,System.Int32,System.Void*,System.Int32@)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.TraceProvider.InitializeTraceField(System.Void*,System.Char,System.Void*,System.Int32@)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.TraceProvider.InitializeTraceField(System.Void*,System.Byte,System.Void*,System.Int32@)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.TraceProvider.InitializeTraceField(System.Void*,System.Int16,System.Void*,System.Int32@)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.TraceProvider.InitializeTraceField(System.Void*,System.UInt16,System.Void*,System.Int32@)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.TraceProvider.InitializeTraceField(System.Void*,System.Int32,System.Void*,System.Int32@)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.TraceProvider.InitializeTraceField(System.Void*,System.UInt32,System.Void*,System.Int32@)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.TraceProvider.InitializeTraceField(System.Void*,System.IntPtr,System.Void*,System.Int32@)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.TraceProvider.InitializeTraceField(System.Void*,System.Int64,System.Void*,System.Int32@)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.TraceProvider.InitializeTraceField(System.Void*,System.UInt64,System.Void*,System.Int32@)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.TraceProvider.InitializeTraceField(System.Void*,System.Double,System.Void*,System.Int32@)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.TraceProvider.InitializeTraceField(System.Void*,System.Guid,System.Void*,System.Int32@)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.TraceProvider.InitializeTraceField(System.Void*,System.DateTime,System.Void*,System.Int32@)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Model.Internal.TraceProvider.TraceEvent(System.Void*)">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Internal.TraceProvider.Flags">
            <summary>
            Returns enable/disable state of the trace flags for this trace source
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Internal.TraceProvider.Level">
            <summary>
            Returns the current trace level for this trace source
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Internal.TraceProvider.IsEnabled">
            <summary>
            Returns true if this trace source is currently enabled
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Model.Internal.TraceProvider.ApplicationName">
            <summary>
            Returns the friendly name for this trace source
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Model.Internal.TraceProvider.TraceLevel">
            <summary>
            Trace level enumeration for common trace levels
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.TraceProvider.TraceLevel.TL_FATAL">
            <summary>
            TL_FATAL
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.TraceProvider.TraceLevel.TL_ERROR">
            <summary>
            TL_ERROR
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.TraceProvider.TraceLevel.TL_WARN">
            <summary>
            TL_WARN
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.TraceProvider.TraceLevel.TL_VERBOSE">
            <summary>
            TL_VERBOSE
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.TraceProvider.TraceLevel.TL_INFO">
            <summary>
            TL_INFO
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Model.Internal.TraceProvider.TraceLevel.TL_NOISE">
            <summary>
            TL_NOISE
            </summary>
        </member>
        <member name="T:Microsoft.Internal.ManagedWPP.WPP_c3ccc856a7f840e28addbb2bee1d6926">
            <summary>
            TraceSupport class is a support class for code generated by ManagedWPP.exe
            It will contain static methods that do the actual tracing calls using.
            There will be a separate static method defined for each unique combination
            of arguments to trace statements in the assembly
            </summary>
        </member>
        <member name="M:Microsoft.Internal.ManagedWPP.WPP_c3ccc856a7f840e28addbb2bee1d6926.#ctor">
            
             Don't allow this class to be instantiated as only the private methods will be used
            
        </member>
        <member name="F:Microsoft.Internal.ManagedWPP.WPP_c3ccc856a7f840e28addbb2bee1d6926.messageGuids">
            
             Array of .tmf file GUIDs indexed by the first parameter to each static method
             defined in this class
            
        </member>
        <member name="M:Microsoft.Internal.ManagedWPP.WPP_c3ccc856a7f840e28addbb2bee1d6926.WPP_s(System.Int32,System.Int32,System.String)">
            <summary>
                 ManagedWPP Trace support method
            </summary>
        </member>
        <member name="M:Microsoft.Internal.ManagedWPP.WPP_c3ccc856a7f840e28addbb2bee1d6926.WPP_ps(System.Int32,System.Int32,System.IntPtr,System.String)">
            <summary>
                 ManagedWPP Trace support method
            </summary>
        </member>
        <member name="M:Microsoft.Internal.ManagedWPP.WPP_c3ccc856a7f840e28addbb2bee1d6926.WPP_pis(System.Int32,System.Int32,System.IntPtr,System.Int32,System.String)">
            <summary>
                 ManagedWPP Trace support method
            </summary>
        </member>
        <member name="M:Microsoft.Internal.ManagedWPP.WPP_c3ccc856a7f840e28addbb2bee1d6926.WPP_NOARGS(System.Int32,System.Int32)">
            <summary>
                 ManagedWPP Trace support method
            </summary>
        </member>
        <member name="M:Microsoft.Internal.ManagedWPP.WPP_c3ccc856a7f840e28addbb2bee1d6926.WPP_psi(System.Int32,System.Int32,System.IntPtr,System.String,System.Int32)">
            <summary>
                 ManagedWPP Trace support method
            </summary>
        </member>
        <member name="M:Microsoft.Internal.ManagedWPP.WPP_c3ccc856a7f840e28addbb2bee1d6926.WPP_pi(System.Int32,System.Int32,System.IntPtr,System.Int32)">
            <summary>
                 ManagedWPP Trace support method
            </summary>
        </member>
        <member name="M:Microsoft.Internal.ManagedWPP.WPP_c3ccc856a7f840e28addbb2bee1d6926.WPP_pss(System.Int32,System.Int32,System.IntPtr,System.String,System.String)">
            <summary>
                 ManagedWPP Trace support method
            </summary>
        </member>
        <member name="M:Microsoft.Internal.ManagedWPP.WPP_c3ccc856a7f840e28addbb2bee1d6926.WPP_is(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
                 ManagedWPP Trace support method
            </summary>
        </member>
        <member name="M:Microsoft.Internal.ManagedWPP.WPP_c3ccc856a7f840e28addbb2bee1d6926.WPP_pii(System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32)">
            <summary>
                 ManagedWPP Trace support method
            </summary>
        </member>
        <member name="M:Microsoft.Internal.ManagedWPP.WPP_c3ccc856a7f840e28addbb2bee1d6926.WPP_sii(System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
                 ManagedWPP Trace support method
            </summary>
        </member>
        <member name="M:Microsoft.Internal.ManagedWPP.WPP_c3ccc856a7f840e28addbb2bee1d6926.WPP_isi(System.Int32,System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
                 ManagedWPP Trace support method
            </summary>
        </member>
        <member name="M:Microsoft.Internal.ManagedWPP.WPP_c3ccc856a7f840e28addbb2bee1d6926.WPP_i(System.Int32,System.Int32,System.Int32)">
            <summary>
                 ManagedWPP Trace support method
            </summary>
        </member>
    </members>
</doc>
